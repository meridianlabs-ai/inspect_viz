# mypy: disable-error-code="type-arg"
# ruff: noqa: D200, D301, W605, D205

# generated by datamodel-codegen:
#   filename:  v0.16.2.json
#   timestamp: 2025-05-24T20:18:41+00:00

from __future__ import annotations

from builtins import float as float_aliased
from typing import Any, Literal

from pydantic import BaseModel, ConfigDict, Field, RootModel


class AggregateExpression(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    agg: str = Field(
        ...,
        description="A SQL expression string to calculate an aggregate value. Embedded Param references, such as `SUM($param + 1)`, are supported. For expressions without aggregate functions, use *sql* instead.",
    )
    label: str | None = Field(
        default=None,
        description="A label for this expression, for example to label a plot axis.",
    )


class BrushStyles(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    fill: str | None = Field(
        default=None, description="The fill color of the brush rectangle."
    )
    fillOpacity: float_aliased | None = Field(
        default=None, description="The fill opacity of the brush rectangle."
    )
    opacity: float_aliased | None = Field(
        default=None, description="The overall opacity of the brush rectangle."
    )
    stroke: str | None = Field(
        default=None, description="The stroke color of the brush rectangle."
    )
    strokeDasharray: str | None = Field(
        default=None, description="The stroke dash array of the brush rectangle."
    )
    strokeOpacity: float_aliased | None = Field(
        default=None, description="The stroke opacity of the brush rectangle."
    )


class CSSStyles(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    accentColor: str | None = None
    alignContent: str | None = None
    alignItems: str | None = None
    alignSelf: str | None = None
    alignmentBaseline: str | None = None
    all: str | None = None
    animation: str | None = None
    animationComposition: str | None = None
    animationDelay: str | None = None
    animationDirection: str | None = None
    animationDuration: str | None = None
    animationFillMode: str | None = None
    animationIterationCount: str | None = None
    animationName: str | None = None
    animationPlayState: str | None = None
    animationTimingFunction: str | None = None
    appearance: str | None = None
    aspectRatio: str | None = None
    backdropFilter: str | None = None
    backfaceVisibility: str | None = None
    background: str | None = None
    backgroundAttachment: str | None = None
    backgroundBlendMode: str | None = None
    backgroundClip: str | None = None
    backgroundColor: str | None = None
    backgroundImage: str | None = None
    backgroundOrigin: str | None = None
    backgroundPosition: str | None = None
    backgroundPositionX: str | None = None
    backgroundPositionY: str | None = None
    backgroundRepeat: str | None = None
    backgroundSize: str | None = None
    baselineShift: str | None = None
    baselineSource: str | None = None
    blockSize: str | None = None
    border: str | None = None
    borderBlock: str | None = None
    borderBlockColor: str | None = None
    borderBlockEnd: str | None = None
    borderBlockEndColor: str | None = None
    borderBlockEndStyle: str | None = None
    borderBlockEndWidth: str | None = None
    borderBlockStart: str | None = None
    borderBlockStartColor: str | None = None
    borderBlockStartStyle: str | None = None
    borderBlockStartWidth: str | None = None
    borderBlockStyle: str | None = None
    borderBlockWidth: str | None = None
    borderBottom: str | None = None
    borderBottomColor: str | None = None
    borderBottomLeftRadius: str | None = None
    borderBottomRightRadius: str | None = None
    borderBottomStyle: str | None = None
    borderBottomWidth: str | None = None
    borderCollapse: str | None = None
    borderColor: str | None = None
    borderEndEndRadius: str | None = None
    borderEndStartRadius: str | None = None
    borderImage: str | None = None
    borderImageOutset: str | None = None
    borderImageRepeat: str | None = None
    borderImageSlice: str | None = None
    borderImageSource: str | None = None
    borderImageWidth: str | None = None
    borderInline: str | None = None
    borderInlineColor: str | None = None
    borderInlineEnd: str | None = None
    borderInlineEndColor: str | None = None
    borderInlineEndStyle: str | None = None
    borderInlineEndWidth: str | None = None
    borderInlineStart: str | None = None
    borderInlineStartColor: str | None = None
    borderInlineStartStyle: str | None = None
    borderInlineStartWidth: str | None = None
    borderInlineStyle: str | None = None
    borderInlineWidth: str | None = None
    borderLeft: str | None = None
    borderLeftColor: str | None = None
    borderLeftStyle: str | None = None
    borderLeftWidth: str | None = None
    borderRadius: str | None = None
    borderRight: str | None = None
    borderRightColor: str | None = None
    borderRightStyle: str | None = None
    borderRightWidth: str | None = None
    borderSpacing: str | None = None
    borderStartEndRadius: str | None = None
    borderStartStartRadius: str | None = None
    borderStyle: str | None = None
    borderTop: str | None = None
    borderTopColor: str | None = None
    borderTopLeftRadius: str | None = None
    borderTopRightRadius: str | None = None
    borderTopStyle: str | None = None
    borderTopWidth: str | None = None
    borderWidth: str | None = None
    bottom: str | None = None
    boxDecorationBreak: str | None = None
    boxShadow: str | None = None
    boxSizing: str | None = None
    breakAfter: str | None = None
    breakBefore: str | None = None
    breakInside: str | None = None
    captionSide: str | None = None
    caretColor: str | None = None
    clear: str | None = None
    clip: str | None = None
    clipPath: str | None = None
    clipRule: str | None = None
    color: str | None = None
    colorInterpolation: str | None = None
    colorInterpolationFilters: str | None = None
    colorScheme: str | None = None
    columnCount: str | None = None
    columnFill: str | None = None
    columnGap: str | None = None
    columnRule: str | None = None
    columnRuleColor: str | None = None
    columnRuleStyle: str | None = None
    columnRuleWidth: str | None = None
    columnSpan: str | None = None
    columnWidth: str | None = None
    columns: str | None = None
    contain: str | None = None
    containIntrinsicBlockSize: str | None = None
    containIntrinsicHeight: str | None = None
    containIntrinsicInlineSize: str | None = None
    containIntrinsicSize: str | None = None
    containIntrinsicWidth: str | None = None
    container: str | None = None
    containerName: str | None = None
    containerType: str | None = None
    content: str | None = None
    contentVisibility: str | None = None
    counterIncrement: str | None = None
    counterReset: str | None = None
    counterSet: str | None = None
    cssFloat: str | None = None
    cssText: str | None = None
    cursor: str | None = None
    cx: str | None = None
    cy: str | None = None
    d: str | None = None
    direction: str | None = None
    display: str | None = None
    dominantBaseline: str | None = None
    emptyCells: str | None = None
    fill: str | None = None
    fillOpacity: str | None = None
    fillRule: str | None = None
    filter: str | None = None
    flex: str | None = None
    flexBasis: str | None = None
    flexDirection: str | None = None
    flexFlow: str | None = None
    flexGrow: str | None = None
    flexShrink: str | None = None
    flexWrap: str | None = None
    float: str | None = None
    floodColor: str | None = None
    floodOpacity: str | None = None
    font: str | None = None
    fontFamily: str | None = None
    fontFeatureSettings: str | None = None
    fontKerning: str | None = None
    fontOpticalSizing: str | None = None
    fontPalette: str | None = None
    fontSize: str | None = None
    fontSizeAdjust: str | None = None
    fontStretch: str | None = None
    fontStyle: str | None = None
    fontSynthesis: str | None = None
    fontSynthesisSmallCaps: str | None = None
    fontSynthesisStyle: str | None = None
    fontSynthesisWeight: str | None = None
    fontVariant: str | None = None
    fontVariantAlternates: str | None = None
    fontVariantCaps: str | None = None
    fontVariantEastAsian: str | None = None
    fontVariantLigatures: str | None = None
    fontVariantNumeric: str | None = None
    fontVariantPosition: str | None = None
    fontVariationSettings: str | None = None
    fontWeight: str | None = None
    forcedColorAdjust: str | None = None
    gap: str | None = None
    grid: str | None = None
    gridArea: str | None = None
    gridAutoColumns: str | None = None
    gridAutoFlow: str | None = None
    gridAutoRows: str | None = None
    gridColumn: str | None = None
    gridColumnEnd: str | None = None
    gridColumnGap: str | None = None
    gridColumnStart: str | None = None
    gridGap: str | None = None
    gridRow: str | None = None
    gridRowEnd: str | None = None
    gridRowGap: str | None = None
    gridRowStart: str | None = None
    gridTemplate: str | None = None
    gridTemplateAreas: str | None = None
    gridTemplateColumns: str | None = None
    gridTemplateRows: str | None = None
    height: str | None = None
    hyphenateCharacter: str | None = None
    hyphens: str | None = None
    imageOrientation: str | None = None
    imageRendering: str | None = None
    inlineSize: str | None = None
    inset: str | None = None
    insetBlock: str | None = None
    insetBlockEnd: str | None = None
    insetBlockStart: str | None = None
    insetInline: str | None = None
    insetInlineEnd: str | None = None
    insetInlineStart: str | None = None
    isolation: str | None = None
    justifyContent: str | None = None
    justifyItems: str | None = None
    justifySelf: str | None = None
    left: str | None = None
    length: float_aliased | None = None
    letterSpacing: str | None = None
    lightingColor: str | None = None
    lineBreak: str | None = None
    lineHeight: str | None = None
    listStyle: str | None = None
    listStyleImage: str | None = None
    listStylePosition: str | None = None
    listStyleType: str | None = None
    margin: str | None = None
    marginBlock: str | None = None
    marginBlockEnd: str | None = None
    marginBlockStart: str | None = None
    marginBottom: str | None = None
    marginInline: str | None = None
    marginInlineEnd: str | None = None
    marginInlineStart: str | None = None
    marginLeft: str | None = None
    marginRight: str | None = None
    marginTop: str | None = None
    marker: str | None = None
    markerEnd: str | None = None
    markerMid: str | None = None
    markerStart: str | None = None
    mask: str | None = None
    maskClip: str | None = None
    maskComposite: str | None = None
    maskImage: str | None = None
    maskMode: str | None = None
    maskOrigin: str | None = None
    maskPosition: str | None = None
    maskRepeat: str | None = None
    maskSize: str | None = None
    maskType: str | None = None
    mathDepth: str | None = None
    mathStyle: str | None = None
    maxBlockSize: str | None = None
    maxHeight: str | None = None
    maxInlineSize: str | None = None
    maxWidth: str | None = None
    minBlockSize: str | None = None
    minHeight: str | None = None
    minInlineSize: str | None = None
    minWidth: str | None = None
    mixBlendMode: str | None = None
    objectFit: str | None = None
    objectPosition: str | None = None
    offset: str | None = None
    offsetAnchor: str | None = None
    offsetDistance: str | None = None
    offsetPath: str | None = None
    offsetPosition: str | None = None
    offsetRotate: str | None = None
    opacity: str | None = None
    order: str | None = None
    orphans: str | None = None
    outline: str | None = None
    outlineColor: str | None = None
    outlineOffset: str | None = None
    outlineStyle: str | None = None
    outlineWidth: str | None = None
    overflow: str | None = None
    overflowAnchor: str | None = None
    overflowClipMargin: str | None = None
    overflowWrap: str | None = None
    overflowX: str | None = None
    overflowY: str | None = None
    overscrollBehavior: str | None = None
    overscrollBehaviorBlock: str | None = None
    overscrollBehaviorInline: str | None = None
    overscrollBehaviorX: str | None = None
    overscrollBehaviorY: str | None = None
    padding: str | None = None
    paddingBlock: str | None = None
    paddingBlockEnd: str | None = None
    paddingBlockStart: str | None = None
    paddingBottom: str | None = None
    paddingInline: str | None = None
    paddingInlineEnd: str | None = None
    paddingInlineStart: str | None = None
    paddingLeft: str | None = None
    paddingRight: str | None = None
    paddingTop: str | None = None
    page: str | None = None
    pageBreakAfter: str | None = None
    pageBreakBefore: str | None = None
    pageBreakInside: str | None = None
    paintOrder: str | None = None
    perspective: str | None = None
    perspectiveOrigin: str | None = None
    placeContent: str | None = None
    placeItems: str | None = None
    placeSelf: str | None = None
    pointerEvents: str | None = None
    position: str | None = None
    printColorAdjust: str | None = None
    quotes: str | None = None
    r: str | None = None
    resize: str | None = None
    right: str | None = None
    rotate: str | None = None
    rowGap: str | None = None
    rubyAlign: str | None = None
    rubyPosition: str | None = None
    rx: str | None = None
    ry: str | None = None
    scale: str | None = None
    scrollBehavior: str | None = None
    scrollMargin: str | None = None
    scrollMarginBlock: str | None = None
    scrollMarginBlockEnd: str | None = None
    scrollMarginBlockStart: str | None = None
    scrollMarginBottom: str | None = None
    scrollMarginInline: str | None = None
    scrollMarginInlineEnd: str | None = None
    scrollMarginInlineStart: str | None = None
    scrollMarginLeft: str | None = None
    scrollMarginRight: str | None = None
    scrollMarginTop: str | None = None
    scrollPadding: str | None = None
    scrollPaddingBlock: str | None = None
    scrollPaddingBlockEnd: str | None = None
    scrollPaddingBlockStart: str | None = None
    scrollPaddingBottom: str | None = None
    scrollPaddingInline: str | None = None
    scrollPaddingInlineEnd: str | None = None
    scrollPaddingInlineStart: str | None = None
    scrollPaddingLeft: str | None = None
    scrollPaddingRight: str | None = None
    scrollPaddingTop: str | None = None
    scrollSnapAlign: str | None = None
    scrollSnapStop: str | None = None
    scrollSnapType: str | None = None
    scrollbarColor: str | None = None
    scrollbarGutter: str | None = None
    scrollbarWidth: str | None = None
    shapeImageThreshold: str | None = None
    shapeMargin: str | None = None
    shapeOutside: str | None = None
    shapeRendering: str | None = None
    stopColor: str | None = None
    stopOpacity: str | None = None
    stroke: str | None = None
    strokeDasharray: str | None = None
    strokeDashoffset: str | None = None
    strokeLinecap: str | None = None
    strokeLinejoin: str | None = None
    strokeMiterlimit: str | None = None
    strokeOpacity: str | None = None
    strokeWidth: str | None = None
    tabSize: str | None = None
    tableLayout: str | None = None
    textAlign: str | None = None
    textAlignLast: str | None = None
    textAnchor: str | None = None
    textBox: str | None = None
    textBoxEdge: str | None = None
    textBoxTrim: str | None = None
    textCombineUpright: str | None = None
    textDecoration: str | None = None
    textDecorationColor: str | None = None
    textDecorationLine: str | None = None
    textDecorationSkipInk: str | None = None
    textDecorationStyle: str | None = None
    textDecorationThickness: str | None = None
    textEmphasis: str | None = None
    textEmphasisColor: str | None = None
    textEmphasisPosition: str | None = None
    textEmphasisStyle: str | None = None
    textIndent: str | None = None
    textOrientation: str | None = None
    textOverflow: str | None = None
    textRendering: str | None = None
    textShadow: str | None = None
    textTransform: str | None = None
    textUnderlineOffset: str | None = None
    textUnderlinePosition: str | None = None
    textWrap: str | None = None
    textWrapMode: str | None = None
    textWrapStyle: str | None = None
    top: str | None = None
    touchAction: str | None = None
    transform: str | None = None
    transformBox: str | None = None
    transformOrigin: str | None = None
    transformStyle: str | None = None
    transition: str | None = None
    transitionBehavior: str | None = None
    transitionDelay: str | None = None
    transitionDuration: str | None = None
    transitionProperty: str | None = None
    transitionTimingFunction: str | None = None
    translate: str | None = None
    unicodeBidi: str | None = None
    userSelect: str | None = None
    vectorEffect: str | None = None
    verticalAlign: str | None = None
    viewTransitionClass: str | None = None
    viewTransitionName: str | None = None
    visibility: str | None = None
    webkitAlignContent: str | None = None
    webkitAlignItems: str | None = None
    webkitAlignSelf: str | None = None
    webkitAnimation: str | None = None
    webkitAnimationDelay: str | None = None
    webkitAnimationDirection: str | None = None
    webkitAnimationDuration: str | None = None
    webkitAnimationFillMode: str | None = None
    webkitAnimationIterationCount: str | None = None
    webkitAnimationName: str | None = None
    webkitAnimationPlayState: str | None = None
    webkitAnimationTimingFunction: str | None = None
    webkitAppearance: str | None = None
    webkitBackfaceVisibility: str | None = None
    webkitBackgroundClip: str | None = None
    webkitBackgroundOrigin: str | None = None
    webkitBackgroundSize: str | None = None
    webkitBorderBottomLeftRadius: str | None = None
    webkitBorderBottomRightRadius: str | None = None
    webkitBorderRadius: str | None = None
    webkitBorderTopLeftRadius: str | None = None
    webkitBorderTopRightRadius: str | None = None
    webkitBoxAlign: str | None = None
    webkitBoxFlex: str | None = None
    webkitBoxOrdinalGroup: str | None = None
    webkitBoxOrient: str | None = None
    webkitBoxPack: str | None = None
    webkitBoxShadow: str | None = None
    webkitBoxSizing: str | None = None
    webkitFilter: str | None = None
    webkitFlex: str | None = None
    webkitFlexBasis: str | None = None
    webkitFlexDirection: str | None = None
    webkitFlexFlow: str | None = None
    webkitFlexGrow: str | None = None
    webkitFlexShrink: str | None = None
    webkitFlexWrap: str | None = None
    webkitJustifyContent: str | None = None
    webkitLineClamp: str | None = None
    webkitMask: str | None = None
    webkitMaskBoxImage: str | None = None
    webkitMaskBoxImageOutset: str | None = None
    webkitMaskBoxImageRepeat: str | None = None
    webkitMaskBoxImageSlice: str | None = None
    webkitMaskBoxImageSource: str | None = None
    webkitMaskBoxImageWidth: str | None = None
    webkitMaskClip: str | None = None
    webkitMaskComposite: str | None = None
    webkitMaskImage: str | None = None
    webkitMaskOrigin: str | None = None
    webkitMaskPosition: str | None = None
    webkitMaskRepeat: str | None = None
    webkitMaskSize: str | None = None
    webkitOrder: str | None = None
    webkitPerspective: str | None = None
    webkitPerspectiveOrigin: str | None = None
    webkitTextFillColor: str | None = None
    webkitTextSizeAdjust: str | None = None
    webkitTextStroke: str | None = None
    webkitTextStrokeColor: str | None = None
    webkitTextStrokeWidth: str | None = None
    webkitTransform: str | None = None
    webkitTransformOrigin: str | None = None
    webkitTransformStyle: str | None = None
    webkitTransition: str | None = None
    webkitTransitionDelay: str | None = None
    webkitTransitionDuration: str | None = None
    webkitTransitionProperty: str | None = None
    webkitTransitionTimingFunction: str | None = None
    webkitUserSelect: str | None = None
    whiteSpace: str | None = None
    whiteSpaceCollapse: str | None = None
    widows: str | None = None
    width: str | None = None
    willChange: str | None = None
    wordBreak: str | None = None
    wordSpacing: str | None = None
    wordWrap: str | None = None
    writingMode: str | None = None
    x: str | None = None
    y: str | None = None
    zIndex: str | None = None
    zoom: str | None = None


class HSpace(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    hspace: float_aliased | str = Field(
        ...,
        description="Horizontal space to place between components. Number values indicate screen pixels. String values may use CSS units (em, pt, px, etc).",
    )


class Options(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    label: str | None = None
    value: Any


class ParamDate(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    date: str = Field(
        ...,
        description="The initial parameter value as an ISO date/time string to be parsed to a Date object.",
    )
    select: Literal["value"] = Field(
        default="value",
        description='The type of reactive parameter. One of:\n- `"value"` (default) for a standard `Param`\n- `"intersect"` for a `Selection` that intersects clauses (logical "and")\n- `"union"` for a `Selection` that unions clauses (logical "or")\n- `"single"` for a `Selection` that retains a single clause only\n- `"crossfilter"` for a cross-filtered intersection `Selection`',
    )


class ParamRef(RootModel[str]):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    root: str


class Margins(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    bottom: float_aliased | str | None = None
    left: float_aliased | str | None = None
    right: float_aliased | str | None = None
    top: float_aliased | str | None = None


class PlotFrom(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    filterBy: str | None = Field(
        default=None, description="A selection that filters the mark data."
    )
    from_: str = Field(
        ..., alias="from", description="The name of the backing data table."
    )
    optimize: bool | None = Field(
        default=None,
        description="A flag (default `true`) to enable any mark-specific query optimizations. If `false`, optimizations are disabled to aid testing and debugging.",
    )


class PlotLegend(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str | None = Field(
        default=None,
        alias="as",
        description="The output selection. If specified, the legend is interactive, using a `toggle` interaction for discrete legends or an `intervalX` interaction for continuous legends.",
    )
    columns: float_aliased | None = Field(
        default=None,
        description="The number of columns to use to layout a discrete legend.",
    )
    field: str | None = Field(
        default=None,
        description="The data field over which to generate output selection clauses. If unspecified, a matching field is retrieved from existing plot marks.",
    )
    height: float_aliased | None = Field(
        default=None, description="The height of a continuous legend, in pixels."
    )
    label: str | None = Field(default=None, description="The legend label.")
    legend: Literal["color", "opacity", "symbol"] = Field(
        ...,
        description='A legend of the given type. The valid types are `"color"`, `"opacity"`, and `"symbol"`.',
    )
    marginBottom: float_aliased | None = Field(
        default=None,
        description="The bottom margin of the legend component, in pixels.",
    )
    marginLeft: float_aliased | None = Field(
        default=None, description="The left margin of the legend component, in pixels."
    )
    marginRight: float_aliased | None = Field(
        default=None, description="The right margin of the legend component, in pixels."
    )
    marginTop: float_aliased | None = Field(
        default=None, description="The top margin of the legend component, in pixels."
    )
    tickSize: float_aliased | None = Field(
        default=None,
        description="The size of legend ticks in a continuous legend, in pixels.",
    )
    width: float_aliased | None = Field(
        default=None, description="The width of a continuous legend, in pixels."
    )


class Format(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaLabel: bool | str | None = None
    fill: bool | str | None = None
    fillOpacity: bool | str | None = None
    fontSize: bool | str | None = None
    fx: bool | str | None = None
    fy: bool | str | None = None
    geometry: bool | str | None = None
    height: bool | str | None = None
    href: bool | str | None = None
    length: bool | str | None = None
    opacity: bool | str | None = None
    path: bool | str | None = None
    r: bool | str | None = None
    rotate: bool | str | None = None
    src: bool | str | None = None
    stroke: bool | str | None = None
    strokeOpacity: bool | str | None = None
    strokeWidth: bool | str | None = None
    symbol: bool | str | None = None
    text: bool | str | None = None
    title: bool | str | None = None
    weight: bool | str | None = None
    width: bool | str | None = None
    x: bool | str | None = None
    x1: bool | str | None = None
    x2: bool | str | None = None
    y: bool | str | None = None
    y1: bool | str | None = None
    y2: bool | str | None = None
    z: bool | str | None = None


class Region(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `(field = value1) OR (field = value2) ...` is added for the currently selected values.",
    )
    brush: BrushStyles | None = Field(
        default=None, description="CSS styles for the brush (SVG `rect`) element."
    )
    channels: list[str] = Field(
        ...,
        description="The encoding channels over which to select values. For a selected mark, selection clauses will cover the backing data fields for each channel.",
    )
    peers: bool | None = Field(
        default=None,
        description="A flag indicating if peer (sibling) marks are excluded when cross-filtering (default `true`). If set, peer marks will not be filtered by this interactor's selection in cross-filtering setups.",
    )
    select: Literal["region"] = Field(
        default="region",
        description="Select aspects of individual marks within a 2D range.",
    )


class SQLExpression(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    label: str | None = Field(
        default=None,
        description="A label for this expression, for example to label a plot axis.",
    )
    sql: str = Field(
        ...,
        description="A SQL expression string to derive a new column value. Embedded Param refrences, such as `$param + 1`, are supported. For expressions with aggregate functions, use *agg* instead.",
    )


class Search(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str | None = Field(
        default=None,
        alias="as",
        description="The output selection. A selection clause is added for the current text search query.",
    )
    column: str | None = Field(
        default=None,
        description="The name of a database column from which to pull valid search results. The unique column values are used as search autocomplete values. Used in conjunction with the `from` property.",
    )
    field: str | None = Field(
        default=None,
        description="The database column name to use within generated selection clause predicates. Defaults to the `column` property.",
    )
    filterBy: str | None = Field(
        default=None,
        description="A selection to filter the database table indicated by the `from` property.",
    )
    from_: str | None = Field(
        default=None,
        alias="from",
        description="The name of a database table to use as an autocomplete data source for this widget. Used in conjunction with the `column` property.",
    )
    input: Literal["search"] = Field(
        default="search", description="A text search input widget."
    )
    label: str | None = Field(default=None, description="A text label for this input.")
    type: Literal["contains", "prefix", "suffix", "regexp"] | None = Field(
        default=None,
        description='The type of text search query to perform. One of:\n- `"contains"` (default): the query string may appear anywhere in the text\n- `"prefix"`: the query string must appear at the start of the text\n- `"suffix"`: the query string must appear at the end of the text\n- `"regexp"`: the query string is a regular expression the text must match',
    )


class Selection(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    cross: bool | None = Field(
        default=None,
        description="A flag for cross-filtering, where selections made in a plot filter others but not oneself (default `false`, except for `crossfilter` selections).",
    )
    empty: bool | None = Field(
        default=None,
        description="A flag for setting an initial empty selection state. If true, a selection with no clauses corresponds to an empty selection with no records. If false, a selection with no clauses selects all values.",
    )
    include: list[str] | str | None = Field(
        default=None,
        description="Upstream selections whose clauses should be included as part of this selection. Any clauses or activations published to the upstream selections will be relayed to this selection.",
    )
    select: Literal["crossfilter", "intersect", "single", "union"] = Field(
        ...,
        description='The type of reactive parameter. One of:\n- `"value"` (default) for a standard `Param`\n- `"intersect"` for a `Selection` that intersects clauses (logical "and")\n- `"union"` for a `Selection` that unions clauses (logical "or")\n- `"single"` for a `Selection` that retains a single clause only\n- `"crossfilter"` for a cross-filtered intersection `Selection`',
    )


class Slider(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str | None = Field(
        default=None,
        alias="as",
        description="The output selection. A selection clause is added for the currently selected slider option.",
    )
    column: str | None = Field(
        default=None,
        description="The name of a database column whose values determine the slider range. Used in conjunction with the `from` property. The minimum and maximum values of the column determine the slider range.",
    )
    field: str | None = Field(
        default=None,
        description="The database column name to use within generated selection clause predicates. Defaults to the `column` property.",
    )
    filterBy: str | None = Field(
        default=None,
        description="A selection to filter the database table indicated by the `from` property.",
    )
    from_: str | None = Field(
        default=None,
        alias="from",
        description="The name of a database table to use as a data source for this widget. Used in conjunction with the `column` property. The minimum and maximum values of the column determine the slider range.",
    )
    input: Literal["slider"] = Field(
        default="slider", description="A slider input widget."
    )
    label: str | None = Field(default=None, description="A text label for this input.")
    max: float_aliased | None = Field(
        default=None, description="The maximum slider value."
    )
    min: float_aliased | None = Field(
        default=None, description="The minumum slider value."
    )
    select: Literal["point", "interval"] | None = Field(
        default=None,
        description="The type of selection clause predicate to generate if the **as** option is a Selection. If `'point'` (the default), the selection predicate is an equality check for the slider value. If `'interval'`, the predicate checks an interval from the minimum to the current slider value.",
    )
    step: float_aliased | None = Field(
        default=None,
        description="The slider step, the amount to increment between consecutive values.",
    )
    value: float_aliased | None = Field(
        default=None, description="The initial slider value."
    )
    width: float_aliased | None = Field(
        default=None, description="The width of the slider in screen pixels."
    )


class SortOrder2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    channel: (
        str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | None
    ) = None
    order: Literal["ascending", "descending"] | None = None


class Table(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    align: dict[str, Literal["left", "right", "center", "justify"]] | None = Field(
        default=None,
        description='An object of per-column alignment values. Column names should be object keys, which map to alignment values. Valid alignment values are: `"left"`, `"right"`, `"center"`, and `"justify"`. By default, numbers are right-aligned and other values are left-aligned.',
    )
    as_: str | None = Field(
        default=None,
        alias="as",
        description="The output selection. A selection clause is added for each currently selected table row.",
    )
    columns: list[str] | None = Field(
        default=None,
        description="A list of column names to include in the table grid. If unspecified, all table columns are included.",
    )
    filterBy: str | None = Field(
        default=None,
        description="A selection to filter the database table indicated by the `from` property.",
    )
    from_: str = Field(
        ...,
        alias="from",
        description="The name of a database table to use as a data source for this widget.",
    )
    height: float_aliased | None = Field(
        default=None, description="The height of the table widget, in pixels."
    )
    input: Literal["table"] = Field(default="table", description="A table grid widget.")
    maxWidth: float_aliased | None = Field(
        default=None, description="The maximum width of the table widget, in pixels."
    )
    rowBatch: float_aliased | None = Field(
        default=None,
        description="The number of rows load in a new batch upon table scroll.",
    )
    width: float_aliased | dict[str, float_aliased] | None = Field(
        default=None,
        description="If a number, sets the total width of the table widget, in pixels. If an object, provides per-column pixel width values. Column names should be object keys, mapped to numeric width values.",
    )


class Toggle(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `(field = value1) OR (field = value2) ...` is added for the currently selected values.",
    )
    channels: list[str] = Field(
        ...,
        description="The encoding channels over which to select values. For a selected mark, selection clauses will cover the backing data fields for each channel.",
    )
    peers: bool | None = Field(
        default=None,
        description="A flag indicating if peer (sibling) marks are excluded when cross-filtering (default `true`). If set, peer marks will not be filtered by this interactor's selection in cross-filtering setups.",
    )
    select: Literal["toggle"] = Field(
        default="toggle", description="Select individal values."
    )


class ToggleColor(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `(field = value1) OR (field = value2) ...` is added for the currently selected values.",
    )
    peers: bool | None = Field(
        default=None,
        description="A flag indicating if peer (sibling) marks are excluded when cross-filtering (default `true`). If set, peer marks will not be filtered by this interactor's selection in cross-filtering setups.",
    )
    select: Literal["toggleColor"] = Field(
        default="toggleColor",
        description="Select individal values in the `color` scale domain. Clicking or touching a mark toggles its selection status.",
    )


class ToggleX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `(field = value1) OR (field = value2) ...` is added for the currently selected values.",
    )
    peers: bool | None = Field(
        default=None,
        description="A flag indicating if peer (sibling) marks are excluded when cross-filtering (default `true`). If set, peer marks will not be filtered by this interactor's selection in cross-filtering setups.",
    )
    select: Literal["toggleX"] = Field(
        default="toggleX",
        description="Select individal values in the `x` scale domain. Clicking or touching a mark toggles its selection status.",
    )


class ToggleY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `(field = value1) OR (field = value2) ...` is added for the currently selected values.",
    )
    peers: bool | None = Field(
        default=None,
        description="A flag indicating if peer (sibling) marks are excluded when cross-filtering (default `true`). If set, peer marks will not be filtered by this interactor's selection in cross-filtering setups.",
    )
    select: Literal["toggleY"] = Field(
        default="toggleY",
        description="Select individal values in the `y` scale domain. Clicking or touching a mark toggles its selection status.",
    )


class VSpace(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    vspace: float_aliased | str = Field(
        ...,
        description="Vertical space to place between components. Number values indicate screen pixels. String values may use CSS units (em, pt, px, etc).",
    )


class VarPop(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None
    varPop: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the population variance of the given column."
    )


class Variance(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None
    variance: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the sample variance of the given column."
    )


class Argmax(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    argmax: list[str | float_aliased | bool] = Field(
        ...,
        description="Find a value of the first column that maximizes the second column.",
        max_length=2,
        min_length=2,
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Argmin(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    argmin: list[str | float_aliased | bool] = Field(
        ...,
        description="Find a value of the first column that minimizes the second column.",
        max_length=2,
        min_length=2,
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Avg(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    avg: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the average (mean) value of the given column."
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Bin(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    bin: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Bin a continuous variable into discrete intervals. The bin argument specifies a data column or expression to bin. Both numerical and temporal (date/time) values are supported.",
    )
    interval: (
        Literal[
            "date",
            "number",
            "millisecond",
            "second",
            "minute",
            "hour",
            "day",
            "month",
            "year",
        ]
        | None
    ) = Field(
        default=None,
        description="The interval bin unit to use, typically used to indicate a date/time unit for binning temporal values, such as `hour`, `day`, or `month`. If `date`, the extent of data values is used to automatically select an interval for temporal data. The value `number` enforces normal numerical binning, even over temporal data. If unspecified, defaults to `number` for numerical data and `date` for temporal data.",
    )
    minstep: float_aliased | None = Field(
        default=None,
        description="The minimum allowed bin step size (default `0`) when performing numerical binning. For example, a setting of `1` prevents step sizes less than 1. This option is ignored when **step** is specified.",
    )
    nice: Literal[True] = Field(
        default=True,
        description='A flag (default `true`) requesting "nice" human-friendly end points and step sizes when performing numerical binning. When **step** is specified, this option affects the binning end points (e.g., origin) only.',
    )
    offset: float_aliased | None = Field(
        default=None,
        description="Offset for computed bins (default `0`). For example, a value of `1` will result in using the next consecutive bin boundary.",
    )
    step: float_aliased | None = Field(
        default=None,
        description="The step size to use between bins. When binning numerical values (or interval type `number`), this setting specifies the numerical step size. For data/time intervals, this indicates the number of steps of that unit, such as hours, days, or years.",
    )
    steps: float_aliased | None = Field(
        default=None,
        description='The target number of binning steps to use. To accommodate human-friendly ("nice") bin boundaries, the actual number of bins may diverge from this exact value. This option is ignored when **step** is specified.',
    )


class Centroid(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    centroid: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Compute the 2D centroid of geometry-typed data. This transform requires the DuckDB `spatial` extension.",
    )


class CentroidX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    centroidX: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Compute the centroid x-coordinate of geometry-typed data. This transform requires the DuckDB `spatial` extension.",
    )


class CentroidY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    centroidY: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Compute the centroid y-coordinate of geometry-typed data. This transform requires the DuckDB `spatial` extension.",
    )


class Column(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    column: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Intpret a string or param-value as a column reference."
    )


class Count(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    count: (
        list | str | float_aliased | bool | list[str | float_aliased | bool] | None
    ) = Field(..., description="Compute the count of records in an aggregation group.")
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class CumeDist(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    cume_dist: list | None = Field(
        ...,
        description="Compute the cumulative distribution value over an ordered window partition. Equals the number of partition rows preceding or peer with the current row, divided by the total number of partition rows.",
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class DateDay(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    dateDay: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Transform a Date value to a day of the month for cyclic comparison. Year and month values are collapsed to enable comparison over days only.",
    )


class DateMonth(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    dateMonth: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Transform a Date value to a month boundary for cyclic comparison. Year values are collapsed to enable comparison over months only.",
    )


class DateMonthDay(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    dateMonthDay: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Transform a Date value to a month and day boundary for cyclic comparison. Year values are collapsed to enable comparison over months and days only.",
    )


class DenseRank(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    dense_rank: list | None = Field(
        ...,
        description="Compute the dense row rank (no gaps) over an ordered window partition. Sorting ties do not result in gaps in the rank numbers ( [1, 1, 2, ...]).",
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class First(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    first: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Return the first column value found in an aggregation group."
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class FirstValue(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    first_value: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Get the first value of the given column in the current window frame.",
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class GeoJSON(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    geojson: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Compute a GeoJSON-formatted string from geometry-typed data. This transform requires the DuckDB `spatial` extension.",
    )


class Highlight(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    by: str = Field(
        ..., description="The input selection. Unselected marks are deemphasized."
    )
    fill: str | None = Field(
        default=None,
        description="The fill color of deemphasized marks. By default the fill is unchanged.",
    )
    fillOpacity: float_aliased | None = Field(
        default=None,
        description="The fill opacity of deemphasized marks. By default the fill opacity is unchanged.",
    )
    opacity: float_aliased | None = Field(
        default=None,
        description="The overall opacity of deemphasized marks. By default the opacity is set to 0.2.",
    )
    select: Literal["highlight"] = Field(
        default="highlight",
        description="Highlight selected marks by deemphasizing the others.",
    )
    stroke: str | None = Field(
        default=None,
        description="The stroke color of deemphasized marks. By default the stroke is unchanged.",
    )
    strokeOpacity: float_aliased | None = Field(
        default=None,
        description="The stroke opacity of deemphasized marks. By default the stroke opacity is unchanged.",
    )


class IntervalX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `field BETWEEN lo AND hi` is added for the currently selected interval [lo, hi].",
    )
    brush: BrushStyles | None = Field(
        default=None, description="CSS styles for the brush (SVG `rect`) element."
    )
    field: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the interval selection should be defined. If unspecified, the  channel field of the first valid prior mark definition is used.",
    )
    peers: bool | None = Field(
        default=None,
        description="A flag indicating if peer (sibling) marks are excluded when cross-filtering (default `true`). If set, peer marks will not be filtered by this interactor's selection in cross-filtering setups.",
    )
    pixelSize: float_aliased | None = Field(
        default=None,
        description="The size of an interative pixel (default `1`). Larger pixel sizes reduce the brush resolution, which can reduce the size of pre-aggregated materialized views.",
    )
    select: Literal["intervalX"] = Field(
        default="intervalX",
        description="Select a continuous 1D interval selection over the `x` scale domain.",
    )


class IntervalXY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `(xfield BETWEEN x1 AND x2) AND (yfield BETWEEN y1 AND y2)` is added for the currently selected intervals.",
    )
    brush: BrushStyles | None = Field(
        default=None, description="CSS styles for the brush (SVG `rect`) element."
    )
    peers: bool | None = Field(
        default=None,
        description="A flag indicating if peer (sibling) marks are excluded when cross-filtering (default `true`). If set, peer marks will not be filtered by this interactor's selection in cross-filtering setups.",
    )
    pixelSize: float_aliased | None = Field(
        default=None,
        description="The size of an interative pixel (default `1`). Larger pixel sizes reduce the brush resolution, which can reduce the size of pre-aggregated materialized views.",
    )
    select: Literal["intervalXY"] = Field(
        default="intervalXY",
        description="Select a continuous 2D interval selection over the `x` and `y` scale domains.",
    )
    xfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `x`-component of the interval selection should be defined. If unspecified, the `x` channel field of the first valid prior mark definition is used.",
    )
    yfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `y`-component of the interval selection should be defined. If unspecified, the `y` channel field of the first valid prior mark definition is used.",
    )


class IntervalY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `field BETWEEN lo AND hi` is added for the currently selected interval [lo, hi].",
    )
    brush: BrushStyles | None = Field(
        default=None, description="CSS styles for the brush (SVG `rect`) element."
    )
    field: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the interval selection should be defined. If unspecified, the  channel field of the first valid prior mark definition is used.",
    )
    peers: bool | None = Field(
        default=None,
        description="A flag indicating if peer (sibling) marks are excluded when cross-filtering (default `true`). If set, peer marks will not be filtered by this interactor's selection in cross-filtering setups.",
    )
    pixelSize: float_aliased | None = Field(
        default=None,
        description="The size of an interative pixel (default `1`). Larger pixel sizes reduce the brush resolution, which can reduce the size of pre-aggregated materialized views.",
    )
    select: Literal["intervalY"] = Field(
        default="intervalY",
        description="Select a continuous 1D interval selection over the `y` scale domain.",
    )


class Lag(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    lag: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Compute lagging values in a column. Returns the value at the row that is `offset` (second argument, default `1`) rows before the current row within the window frame. If there is no such row, instead return `default` (third argument, default `null`). Both offset and default are evaluated with respect to the current row.",
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Last(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    last: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Return the last column value found in an aggregation group."
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class LastValue(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    last_value: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Get the last value of the given column in the current window frame.",
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Lead(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    lag: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Compute leading values in a column. Returns the value at the row that is `offset` (second argument, default `1`) rows after the current row within the window frame. If there is no such row, instead return `default` (third argument, default `null`). Both offset and default are evaluated with respect to the current row.",
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Legend(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str | None = Field(
        default=None,
        alias="as",
        description="The output selection. If specified, the legend is interactive, using a `toggle` interaction for discrete legends or an `intervalX` interaction for continuous legends.",
    )
    columns: float_aliased | None = Field(
        default=None,
        description="The number of columns to use to layout a discrete legend.",
    )
    field: str | None = Field(
        default=None,
        description="The data field over which to generate output selection clauses. If unspecified, a matching field is retrieved from existing plot marks.",
    )
    for_: str = Field(
        ...,
        alias="for",
        description="The name of the plot this legend applies to. A plot must include a `name` attribute to be referenced.",
    )
    height: float_aliased | None = Field(
        default=None, description="The height of a continuous legend, in pixels."
    )
    label: str | None = Field(default=None, description="The legend label.")
    legend: Literal["color", "opacity", "symbol"] = Field(
        ...,
        description='A legend of the given type. The valid types are `"color"`, `"opacity"`, and `"symbol"`.',
    )
    marginBottom: float_aliased | None = Field(
        default=None,
        description="The bottom margin of the legend component, in pixels.",
    )
    marginLeft: float_aliased | None = Field(
        default=None, description="The left margin of the legend component, in pixels."
    )
    marginRight: float_aliased | None = Field(
        default=None, description="The right margin of the legend component, in pixels."
    )
    marginTop: float_aliased | None = Field(
        default=None, description="The top margin of the legend component, in pixels."
    )
    tickSize: float_aliased | None = Field(
        default=None,
        description="The size of legend ticks in a continuous legend, in pixels.",
    )
    width: float_aliased | None = Field(
        default=None, description="The width of a continuous legend, in pixels."
    )


class Max(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    max: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the maximum value of the given column."
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Median(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    median: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the median value of the given column."
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Menu(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str | None = Field(
        default=None,
        alias="as",
        description="The output selection. A selection clause is added for the currently selected menu option.",
    )
    column: str | None = Field(
        default=None,
        description="The name of a database column from which to pull menu options. The unique column values are used as menu options. Used in conjunction with the `from` property.",
    )
    field: str | None = Field(
        default=None,
        description="The database column name to use within generated selection clause predicates. Defaults to the `column` property.",
    )
    filterBy: str | None = Field(
        default=None,
        description="A selection to filter the database table indicated by the `from` property.",
    )
    from_: str | None = Field(
        default=None,
        alias="from",
        description="The name of a database table to use as a data source for this widget. Used in conjunction with the `column` property.",
    )
    input: Literal["menu"] = Field(default="menu", description="A menu input widget.")
    label: str | None = Field(default=None, description="A text label for this input.")
    options: list[Any | Options] | None = Field(
        default=None,
        description="An array of menu options, as literal values or option objects. Option objects have a `value` property and an optional `label` property. If no label is provided, the string-coerced value is used.",
    )
    value: Any | None = Field(
        default=None, description="The initial selected menu value."
    )


class Min(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    min: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the minimum value of the given column."
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Mode(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    mode: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the mode value of the given column."
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class NTile(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ntile: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Compute an n-tile integer ranging from 1 to the provided argument (num_buckets), dividing the partition as equally as possible.",
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class NearestX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `field = value` is added for the currently nearest value.",
    )
    channels: list[str] | None = Field(
        default=None,
        description="The encoding channels whose domain values should be selected. For example, a setting of `['color']` selects the data value backing the color channel, whereas `['x', 'z']` selects both x and z channel domain values. If unspecified, the selected channels default to match the current pointer settings: a `nearestX` interactor selects the `['x']` channels, while a `nearest` interactor selects the `['x', 'y']` channels.",
    )
    fields: list[str] | None = Field(
        default=None,
        description="The fields (database column names) to use in generated selection clause predicates. If unspecified, the fields backing the selected *channels* in the first valid prior mark definition are used by default.",
    )
    maxRadius: float_aliased | None = Field(
        default=None,
        description="The maximum radius of a nearest selection (default 40). Marks with (x, y) coordinates outside this radius will not be selected as nearest points.",
    )
    select: Literal["nearestX"] = Field(
        default="nearestX",
        description="Select values from the mark closest to the pointer *x* location.",
    )


class NearestY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    as_: str = Field(
        ...,
        alias="as",
        description="The output selection. A clause of the form `field = value` is added for the currently nearest value.",
    )
    channels: list[str] | None = Field(
        default=None,
        description="The encoding channels whose domain values should be selected. For example, a setting of `['color']` selects the data value backing the color channel, whereas `['x', 'z']` selects both x and z channel domain values. If unspecified, the selected channels default to match the current pointer settings: a `nearestX` interactor selects the `['x']` channels, while a `nearest` interactor selects the `['x', 'y']` channels.",
    )
    fields: list[str] | None = Field(
        default=None,
        description="The fields (database column names) to use in generated selection clause predicates. If unspecified, the fields backing the selected *channels* in the first valid prior mark definition are used by default.",
    )
    maxRadius: float_aliased | None = Field(
        default=None,
        description="The maximum radius of a nearest selection (default 40). Marks with (x, y) coordinates outside this radius will not be selected as nearest points.",
    )
    select: Literal["nearestY"] = Field(
        default="nearestY",
        description="Select values from the mark closest to the pointer *y* location.",
    )


class NthValue(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    nth_value: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ...,
        description="Get the nth value of the given column in the current window frame, counting from one. The second argument is the offset for the nth row.",
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Pan(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    select: Literal["pan"] = Field(
        default="pan", description="Pan a plot along both the `x` and `y` scales."
    )
    x: str | None = Field(
        default=None,
        description="The output selection for the `x` domain. A clause of the form `field BETWEEN x1 AND x2` is added for the current pan/zom interval [x1, x2].",
    )
    xfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `x`-component of the pan/zoom interval should be defined. If unspecified, the `x` channel field of the first valid prior mark definition is used.",
    )
    y: str | None = Field(
        default=None,
        description="The output selection for the `y` domain. A clause of the form `field BETWEEN y1 AND y2` is added for the current pan/zom interval [y1, y2].",
    )
    yfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `y`-component of the pan/zoom interval should be defined. If unspecified, the `y` channel field of the first valid prior mark definition is used.",
    )


class PanX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    select: Literal["panX"] = Field(
        default="panX", description="Pan a plot along the `x` scale only."
    )
    x: str | None = Field(
        default=None,
        description="The output selection for the `x` domain. A clause of the form `field BETWEEN x1 AND x2` is added for the current pan/zom interval [x1, x2].",
    )
    xfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `x`-component of the pan/zoom interval should be defined. If unspecified, the `x` channel field of the first valid prior mark definition is used.",
    )
    y: str | None = Field(
        default=None,
        description="The output selection for the `y` domain. A clause of the form `field BETWEEN y1 AND y2` is added for the current pan/zom interval [y1, y2].",
    )
    yfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `y`-component of the pan/zoom interval should be defined. If unspecified, the `y` channel field of the first valid prior mark definition is used.",
    )


class PanY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    select: Literal["panY"] = Field(
        default="panY", description="Pan a plot along the `y` scale only."
    )
    x: str | None = Field(
        default=None,
        description="The output selection for the `x` domain. A clause of the form `field BETWEEN x1 AND x2` is added for the current pan/zom interval [x1, x2].",
    )
    xfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `x`-component of the pan/zoom interval should be defined. If unspecified, the `x` channel field of the first valid prior mark definition is used.",
    )
    y: str | None = Field(
        default=None,
        description="The output selection for the `y` domain. A clause of the form `field BETWEEN y1 AND y2` is added for the current pan/zom interval [y1, y2].",
    )
    yfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `y`-component of the pan/zoom interval should be defined. If unspecified, the `y` channel field of the first valid prior mark definition is used.",
    )


class PanZoom(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    select: Literal["panZoom"] = Field(
        default="panZoom",
        description="Pan and zoom a plot along both the `x` and `y` scales.",
    )
    x: str | None = Field(
        default=None,
        description="The output selection for the `x` domain. A clause of the form `field BETWEEN x1 AND x2` is added for the current pan/zom interval [x1, x2].",
    )
    xfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `x`-component of the pan/zoom interval should be defined. If unspecified, the `x` channel field of the first valid prior mark definition is used.",
    )
    y: str | None = Field(
        default=None,
        description="The output selection for the `y` domain. A clause of the form `field BETWEEN y1 AND y2` is added for the current pan/zom interval [y1, y2].",
    )
    yfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `y`-component of the pan/zoom interval should be defined. If unspecified, the `y` channel field of the first valid prior mark definition is used.",
    )


class PanZoomX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    select: Literal["panZoomX"] = Field(
        default="panZoomX", description="Pan and zoom a plot along the `x` scale only."
    )
    x: str | None = Field(
        default=None,
        description="The output selection for the `x` domain. A clause of the form `field BETWEEN x1 AND x2` is added for the current pan/zom interval [x1, x2].",
    )
    xfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `x`-component of the pan/zoom interval should be defined. If unspecified, the `x` channel field of the first valid prior mark definition is used.",
    )
    y: str | None = Field(
        default=None,
        description="The output selection for the `y` domain. A clause of the form `field BETWEEN y1 AND y2` is added for the current pan/zom interval [y1, y2].",
    )
    yfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `y`-component of the pan/zoom interval should be defined. If unspecified, the `y` channel field of the first valid prior mark definition is used.",
    )


class PanZoomY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    select: Literal["panZoomY"] = Field(
        default="panZoomY", description="Pan and zoom a plot along the `y` scale only."
    )
    x: str | None = Field(
        default=None,
        description="The output selection for the `x` domain. A clause of the form `field BETWEEN x1 AND x2` is added for the current pan/zom interval [x1, x2].",
    )
    xfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `x`-component of the pan/zoom interval should be defined. If unspecified, the `x` channel field of the first valid prior mark definition is used.",
    )
    y: str | None = Field(
        default=None,
        description="The output selection for the `y` domain. A clause of the form `field BETWEEN y1 AND y2` is added for the current pan/zom interval [y1, y2].",
    )
    yfield: str | None = Field(
        default=None,
        description="The name of the field (database column) over which the `y`-component of the pan/zoom interval should be defined. If unspecified, the `y` channel field of the first valid prior mark definition is used.",
    )


class Param(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    select: Literal["value"] = Field(
        default="value",
        description='The type of reactive parameter. One of:\n- `"value"` (default) for a standard `Param`\n- `"intersect"` for a `Selection` that intersects clauses (logical "and")\n- `"union"` for a `Selection` that unions clauses (logical "or")\n- `"single"` for a `Selection` that retains a single clause only\n- `"crossfilter"` for a cross-filtered intersection `Selection`',
    )
    value: (
        list[str | float_aliased | bool | str | None]
        | str
        | float_aliased
        | bool
        | None
    ) = Field(..., description="The initial parameter value.")


class PercentRank(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    percent_rank: list | None = Field(
        ..., description="Compute the percetange rank over an ordered window partition."
    )
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Product(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    product: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the product of the given column."
    )
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Quantile(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    quantile: list[str | float_aliased | bool] = Field(
        ...,
        description="Compute the quantile value of the given column at the provided probability threshold. For example, 0.5 is the median.",
        max_length=2,
        min_length=2,
    )
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None


class Rank(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rank: list | None = Field(
        ...,
        description="Compute the row rank over an ordered window partition. Sorting ties result in gaps in the rank numbers ([1, 1, 3, ...]).",
    )
    rows: list[float_aliased | None] | str | None = None


class RowNumber(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    row_number: list | None = Field(
        ...,
        description="Compute the 1-based row number over an ordered window partition.",
    )
    rows: list[float_aliased | None] | str | None = None


class Stddev(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None
    stddev: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the sum of the given column."
    )


class StddevPop(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None
    stddevPop: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the sum of the given column."
    )


class Sum(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    distinct: bool | None = None
    orderby: list[str] | str | None = None
    partitionby: list[str] | str | None = None
    range: list[float_aliased | None] | str | None = None
    rows: list[float_aliased | None] | str | None = None
    sum: str | float_aliased | bool | list[str | float_aliased | bool] = Field(
        ..., description="Compute the sum of the given column."
    )


class ChannelDomainValueSpec1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    limit: float_aliased | list[float_aliased] | None = Field(
        default=None,
        description="If a positive number, limit the domain to the first *n* sorted values. If a negative number, limit the domain to the last *-n* sorted values. Hence, a positive **limit** with **reverse** true will return the top *n* values in descending order.\n\nIf an array [*lo*, *hi*], slices the sorted domain from *lo* (inclusive) to\n*hi* (exclusive). As with [*array*.slice][1], if either *lo* or *hi* are negative, it indicates an offset from the end of the array; if *lo* is undefined it defaults to 0, and if *hi* is undefined it defaults to Infinity.\n\nNote: limiting the imputed domain of one scale, say *x*, does not affect the imputed domain of another scale, say *y*; each scale domain is imputed independently.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice",
    )
    order: Literal["ascending", "descending"] | None = Field(
        default=None, description="How to order reduced values."
    )
    reduce: (
        bool
        | str
        | Literal[
            "p00",
            "p01",
            "p02",
            "p03",
            "p04",
            "p05",
            "p06",
            "p07",
            "p08",
            "p09",
            "p10",
            "p11",
            "p12",
            "p13",
            "p14",
            "p15",
            "p16",
            "p17",
            "p18",
            "p19",
            "p20",
            "p21",
            "p22",
            "p23",
            "p24",
            "p25",
            "p26",
            "p27",
            "p28",
            "p29",
            "p30",
            "p31",
            "p32",
            "p33",
            "p34",
            "p35",
            "p36",
            "p37",
            "p38",
            "p39",
            "p40",
            "p41",
            "p42",
            "p43",
            "p44",
            "p45",
            "p46",
            "p47",
            "p48",
            "p49",
            "p50",
            "p51",
            "p52",
            "p53",
            "p54",
            "p55",
            "p56",
            "p57",
            "p58",
            "p59",
            "p60",
            "p61",
            "p62",
            "p63",
            "p64",
            "p65",
            "p66",
            "p67",
            "p68",
            "p69",
            "p70",
            "p71",
            "p72",
            "p73",
            "p74",
            "p75",
            "p76",
            "p77",
            "p78",
            "p79",
            "p80",
            "p81",
            "p82",
            "p83",
            "p84",
            "p85",
            "p86",
            "p87",
            "p88",
            "p89",
            "p90",
            "p91",
            "p92",
            "p93",
            "p94",
            "p95",
            "p96",
            "p97",
            "p98",
            "p99",
        ]
        | None
    ) = Field(
        default=None,
        description="How to produce a singular value (for subsequent sorting) from aggregated channel values; one of:\n\n- true (default) - alias for *max*\n- false or null - disabled; don’t impute the scale domain\n- a named reducer implementation such as *count* or *sum*\n- a function that takes an array of values and returns the reduced value\n- an object that implements the *reduceIndex* method",
    )
    reverse: bool | None = Field(
        default=None, description="If true, reverse the order after sorting."
    )
    value: (
        str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        ...,
        description="The available inputs for imputing scale domains. In addition to a named channel, an input may be specified as:\n\n- *data* - impute from mark data\n- *width* - impute from |*x2* - *x1*|\n- *height* - impute from |*y2* - *y1*|\n- null - impute from input order\n\nIf the *x* channel is not defined, the *x2* channel will be used instead if available, and similarly for *y* and *y2*; this is useful for marks that implicitly stack. The *data* input is typically used in conjunction with a custom **reduce** function, as when the built-in single-channel reducers are insufficient.",
    )


class PlotAttributes(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    align: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description attribute][1] on the SVG root.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaLabel: str | None = Field(
        default=None,
        description="The [aria-label attribute][1] on the SVG root.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    aspectRatio: float_aliased | bool | str | None = Field(
        default=None,
        description="The desired aspect ratio of the *x* and *y* scales, affecting the default height. Given an aspect ratio of *dx* / *dy*, and assuming that the *x* and\n*y* scales represent equivalent units (say, degrees Celsius or meters), computes a default height such that *dx* pixels along *x* represents the same variation as *dy* pixels along *y*. Note: when faceting, set the *fx* and *fy* scales’ **round** option to false for an exact aspect ratio.",
    )
    axis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *top* or\n*bottom* for *x* or *fx*, or *left* or *right* for *y* or *fy*. The default depends on the scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*top* and *bottom* for *x* or *fx*, or *left* and *right* for *y* or\n*fy*). If null, the implicit axis is suppressed.\n\nFor position axes only.",
    )
    clip: str | bool | None = Field(
        default=None, description="The default clip for all marks."
    )
    colorBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* and *diverging-log* scales only.",
    )
    colorClamp: bool | str | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    colorConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* and *diverging-symlog* scales only.",
    )
    colorDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.",
    )
    colorExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* and *diverging-pow* scales only.",
    )
    colorInterpolate: Literal["number", "rgb", "hsl", "hcl", "lab"] | str | None = (
        Field(
            default=None,
            description="How to interpolate color range values. For quantitative scales only. This attribute can be used to specify a color space for interpolating colors specified in the **colorRange**.",
        )
    )
    colorLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    colorN: float_aliased | str | None = Field(
        default=None,
        description="For a *quantile* scale, the number of quantiles (creates *n* - 1 thresholds); for a *quantize* scale, the approximate number of thresholds; defaults to 5.",
    )
    colorNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    colorPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    colorPivot: Any | str | None = Field(
        default=None,
        description="For a diverging color scale, the input value (abstract value) that divides the domain into two parts; defaults to 0 for *diverging* scales, dividing the domain into negative and positive parts; defaults to 1 for\n*diverging-log* scales. By default, diverging scales are symmetric around the pivot; see the **symmetric** option.",
    )
    colorRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**. For other ordinal data, it is an array (or iterable) of output values in the same order as the **domain**.",
    )
    colorReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    colorScale: (
        Literal[
            "linear",
            "pow",
            "sqrt",
            "log",
            "symlog",
            "utc",
            "time",
            "point",
            "band",
            "ordinal",
            "sequential",
            "cyclical",
            "diverging",
            "diverging-log",
            "diverging-pow",
            "diverging-sqrt",
            "diverging-symlog",
            "categorical",
            "threshold",
            "quantile",
            "quantize",
            "identity",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The *color* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled.\n\nFor quantitative data (numbers), defaults to *linear*; for temporal data (dates), defaults to *utc*; for ordinal data (strings or booleans), defaults to *point* for position scales, *categorical* for color scales, and otherwise *ordinal*.",
    )
    colorScheme: (
        Literal[
            "Accent",
            "Category10",
            "Dark2",
            "Observable10",
            "Paired",
            "Pastel1",
            "Pastel2",
            "Set1",
            "Set2",
            "Set3",
            "Tableau10",
            "BrBG",
            "PRGn",
            "PiYG",
            "PuOr",
            "RdBu",
            "RdGy",
            "RdYlBu",
            "RdYlGn",
            "Spectral",
            "BuRd",
            "BuYlRd",
            "Blues",
            "Greens",
            "Greys",
            "Oranges",
            "Purples",
            "Reds",
            "Turbo",
            "Viridis",
            "Magma",
            "Inferno",
            "Plasma",
            "Cividis",
            "Cubehelix",
            "Warm",
            "Cool",
            "BuGn",
            "BuPu",
            "GnBu",
            "OrRd",
            "PuBu",
            "PuBuGn",
            "PuRd",
            "RdPu",
            "YlGn",
            "YlGnBu",
            "YlOrBr",
            "YlOrRd",
            "Rainbow",
            "Sinebow",
        ]
        | dict[str, Any]
        | str
        | None
    ) = Field(
        default=None,
        description="If specified, shorthand for setting the **colorRange** or **colorInterpolate** option of a *color* scale.",
    )
    colorSymmetric: bool | str | None = Field(
        default=None,
        description="For a diverging color scale, if true (the default), extend the domain to ensure that the lower part of the domain (below the **pivot**) is commensurate with the upper part of the domain (above the **pivot**).\n\nA symmetric diverging color scale may not use all of its output **range**; this reduces contrast but ensures that deviations both below and above the\n**pivot** are represented proportionally. Otherwise if false, the full output **range** will be used; this increases contrast but values on opposite sides of the **pivot** may not be meaningfully compared.",
    )
    colorTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    colorZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    facetGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Default axis grid for fx and fy scales; typically set to true to enable.",
    )
    facetLabel: str | None = Field(
        default=None,
        description="Default axis label for fx and fy scales; typically set to null to disable.",
    )
    facetMargin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four facet margins: marginTop, marginRight, marginBottom, and marginLeft.",
    )
    facetMarginBottom: float_aliased | str | None = Field(
        default=None,
        description="The right facet margin; the (minimum) distance in pixels between the right edges of the inner and outer plot area.",
    )
    facetMarginLeft: float_aliased | str | None = Field(
        default=None,
        description="The bottom facet margin; the (minimum) distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    facetMarginRight: float_aliased | str | None = Field(
        default=None,
        description="The left facet margin; the (minimum) distance in pixels between the left edges of the inner and outer plot area.",
    )
    facetMarginTop: float_aliased | str | None = Field(
        default=None,
        description="The top facet margin; the (minimum) distance in pixels between the top edges of the inner and outer plot area.",
    )
    fxAlign: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    fxAriaDescription: str | None = Field(
        default=None,
        description="A textual description for the axis in the accessibility tree.",
    )
    fxAriaLabel: str | None = Field(
        default=None,
        description="A short label representing the axis in the accessibility tree.",
    )
    fxAxis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *top* or\n*bottom* for *fx*. Defaults to *top* if there is a *bottom* *x* axis, and otherwise *bottom*.\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*top* and *bottom* for *fx*). If null, the implicit axis is suppressed.",
    )
    fxDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.",
    )
    fxFontVariant: str | None = Field(
        default=None,
        description="The font-variant attribute for axis ticks; defaults to *tabular-nums* for quantitative axes.",
    )
    fxGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    fxInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    fxInsetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    fxInsetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    fxLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    fxLabelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    fxLabelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    fxLine: bool | str | None = Field(
        default=None,
        description="If true, draw a line along the axis; if false (default), do not.",
    )
    fxPadding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    fxPaddingInner: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to separate adjacent bands.",
    )
    fxPaddingOuter: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to inset first and last bands.",
    )
    fxRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and the plot’s dimensions. For ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale.",
    )
    fxReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    fxRound: bool | str | None = Field(
        default=None,
        description="If true, round the output value to the nearest integer (pixel); useful for crisp edges when rendering.\n\nFor position scales only.",
    )
    fxTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    fxTickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **fxTickSize** and\n**fxTickRotate**.",
    )
    fxTickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    fxTickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    fxTickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    fxTicks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    fyAlign: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    fyAriaDescription: str | None = Field(
        default=None,
        description="A textual description for the axis in the accessibility tree.",
    )
    fyAriaLabel: str | None = Field(
        default=None,
        description="A short label representing the axis in the accessibility tree.",
    )
    fyAxis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *left* or\n*right* for *fy*. Defaults to *left* for an *fy* scale.\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*left* and *right* for *fy*). If null, the implicit axis is suppressed.",
    )
    fyDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.",
    )
    fyFontVariant: str | None = Field(
        default=None,
        description="The font-variant attribute for axis ticks; defaults to *tabular-nums* for quantitative axes.",
    )
    fyGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    fyInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    fyInsetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    fyInsetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    fyLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    fyLabelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    fyLabelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    fyLine: bool | str | None = Field(
        default=None,
        description="If true, draw a line along the axis; if false (default), do not.",
    )
    fyPadding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    fyPaddingInner: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to separate adjacent bands.",
    )
    fyPaddingOuter: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to inset first and last bands.",
    )
    fyRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and the plot’s dimensions. For ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale.",
    )
    fyReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    fyRound: bool | str | None = Field(
        default=None,
        description="If true, round the output value to the nearest integer (pixel); useful for crisp edges when rendering.\n\nFor position scales only.",
    )
    fyTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    fyTickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **fyTickSize** and\n**fyTickRotate**.",
    )
    fyTickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    fyTickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    fyTickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    fyTicks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    grid: bool | str | None = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    height: float_aliased | str | None = Field(
        default=None,
        description="The outer height of the plot in pixels, including margins. The default depends on the plot’s scales, and the plot’s width if an aspectRatio is specified. For example, if the *y* scale is linear and there is no *fy* scale, it might be 396.",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    lengthBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    lengthClamp: Any | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    lengthConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    lengthDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nLinear scales have a default domain of [0, 1]. Log scales have a default domain of [1, 10] and cannot include zero. Radius scales have a default domain from 0 to the median first quartile of associated channels. Length have a default domain from 0 to the median median of associated channels. Opacity scales have a default domain from 0 to the maximum value of associated channels.",
    )
    lengthExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    lengthNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    lengthPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    lengthRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For other ordinal data, such as for a *color* scale, it is an array (or iterable) of output values in the same order as the **domain**.\n\nLength scales have a default range of [0, 12].",
    )
    lengthScale: (
        Literal["linear", "pow", "sqrt", "log", "symlog", "utc", "time", "identity"]
        | str
        | None
    ) = Field(
        default=None,
        description="The *length* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled. The length scale defaults to *linear*, as this scale is intended for quantitative data.",
    )
    lengthZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**. Otherwise, the default margins depend on the maximum margins of the plot’s marks. While most marks default to zero margins (because they are drawn inside the chart area), Plot’s axis marks have non-zero default margins.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The bottom margin; the distance in pixels between the bottom edges of the inner and outer plot area. Defaults to the maximum bottom margin of the plot’s marks.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The left margin; the distance in pixels between the left edges of the inner and outer plot area. Defaults to the maximum left margin of the plot’s marks.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The right margin; the distance in pixels between the right edges of the inner and outer plot area. Defaults to the maximum right margin of the plot’s marks.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The top margin; the distance in pixels between the top edges of the inner and outer plot area. Defaults to the maximum top margin of the plot’s marks.",
    )
    margins: Margins | None = Field(
        default=None,
        description="A shorthand object notation for setting multiple margin values. The object keys are margin names (top, right, etc).",
    )
    name: str | None = Field(
        default=None,
        description="A unique name for the plot. The name is used by standalone legend components to to lookup the plot and access scale mappings.",
    )
    opacityBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    opacityClamp: bool | str | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    opacityConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    opacityDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nOpacity scales have a default domain from 0 to the maximum value of associated channels.",
    )
    opacityExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    opacityLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    opacityNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    opacityPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    opacityRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values).\n\nOpacity scales have a default range of [0, 1].",
    )
    opacityReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    opacityScale: (
        Literal["linear", "pow", "sqrt", "log", "symlog", "utc", "time", "identity"]
        | str
        | None
    ) = Field(
        default=None,
        description="The *opacity* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled. The opacity scale defaults to *linear*; this scales is intended for quantitative data.",
    )
    opacityTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    opacityZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    padding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    projectionClip: bool | float_aliased | str | None = Field(
        default=None,
        description="The projection’s clipping method; one of:\n\n- *frame* or true (default) - clip to the plot’s frame (including margins but not insets)\n- a number - clip to a circle of the given radius in degrees centered around the origin\n- null or false - do not clip\n\nSome projections (such as [*armadillo*][1] and [*berghaus*][2]) require spherical clipping: in that case set the marks’ **clip** option to\n*sphere*.\n\n[1]: https://observablehq.com/@d3/armadillo [2]: https://observablehq.com/@d3/berghaus-star",
    )
    projectionDomain: dict[str, Any] | str | None = Field(
        default=None,
        description="A GeoJSON object to fit to the plot’s frame (minus insets); defaults to a Sphere for spherical projections (outline of the the whole globe).",
    )
    projectionInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four projection insets. All insets typically default to zero, though not always. A positive inset reduces effective area, while a negative inset increases it.",
    )
    projectionInsetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge of the projection by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    projectionInsetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge of the projection by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    projectionInsetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge of the projection by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    projectionInsetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge of the projection by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    projectionParallels: list[float_aliased | str] | str | None = Field(
        default=None,
        description="The [standard parallels][1]. For conic projections only.\n\n[1]: https://d3js.org/d3-geo/conic#conic_parallels",
    )
    projectionPrecision: float_aliased | str | None = Field(
        default=None,
        description="The projection’s [sampling threshold][1].\n\n[1]: https://d3js.org/d3-geo/projection#projection_precision",
    )
    projectionRotate: list[float_aliased | str] | str | None = Field(
        default=None,
        description="A rotation of the sphere before projection; defaults to [0, 0, 0]. Specified as Euler angles λ (yaw, or reference longitude), φ (pitch, or reference latitude), and optionally γ (roll), in degrees.",
    )
    projectionType: (
        Literal[
            "albers-usa",
            "albers",
            "azimuthal-equal-area",
            "azimuthal-equidistant",
            "conic-conformal",
            "conic-equal-area",
            "conic-equidistant",
            "equal-earth",
            "equirectangular",
            "gnomonic",
            "identity",
            "reflect-y",
            "mercator",
            "orthographic",
            "stereographic",
            "transverse-mercator",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired projection; one of:\n\n- a named built-in projection such as *albers-usa*\n- null, for no projection\n\nNamed projections are scaled and translated to fit the **domain** to the plot’s frame (minus insets).",
    )
    rBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    rClamp: Any | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    rConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    rDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nRadius scales have a default domain from 0 to the median first quartile of associated channels.",
    )
    rExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    rLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.",
    )
    rNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    rPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    rRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For other ordinal data, such as for a *color* scale, it is an array (or iterable) of output values in the same order as the **domain**.\n\nRadius scales have a default range of [0, 3].",
    )
    rScale: (
        Literal["linear", "pow", "sqrt", "log", "symlog", "utc", "time", "identity"]
        | str
        | None
    ) = Field(
        default=None,
        description="The *r* (radius) scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled. The radius scale defaults to *sqrt*; this scale is intended for quantitative data.",
    )
    rZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    style: str | CSSStyles | None = Field(
        default=None,
        description='Custom styles to override Plot’s defaults. Styles may be specified either as a string of inline styles (*e.g.*, `"color: red;"`, in the same fashion as assigning [*element*.style][1]) or an object of properties (*e.g.*, `{color: "red"}`, in the same fashion as assigning [*element*.style properties][2]). Note that unitless numbers ([quirky lengths][3]) such as `{padding: 20}` may not supported by some browsers; you should instead specify a string with units such as `{padding: "20px"}`. By default, the returned plot has a max-width of 100%, and the system-ui font. Plot’s marks and axes default to [currentColor][4], meaning that they will inherit the surrounding content’s color.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style [2]: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration [3]: https://www.w3.org/TR/css-values-4/#deprecated-quirky-length [4]: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword',
    )
    symbolDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. As symbol scales are discrete, the domain is an array (or iterable) of values is the desired order, defaulting to natural ascending order.",
    )
    symbolRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For other ordinal data, such as for a *color* scale, it is an array (or iterable) of output values in the same order as the **domain**.\n\nSymbol scales have a default range of categorical symbols; the choice of symbols depends on whether the associated dot mark is filled or stroked.",
    )
    symbolScale: Literal["ordinal", "identity"] | str | None = Field(
        default=None,
        description="The *symbol* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled. Defaults to an *ordinal* scale type.",
    )
    width: float_aliased | str | None = Field(
        default=None,
        description="The outer width of the plot in pixels, including margins. Defaults to 640. On Observable, this can be set to the built-in [width][1] for full-width responsive plots. Note: the default style has a max-width of 100%; the plot will automatically shrink to fit even when a fixed width is specified.\n\n[1]: https://github.com/observablehq/stdlib/blob/main/README.md#width",
    )
    xAlign: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    xAriaDescription: str | None = Field(
        default=None,
        description="A textual description for the axis in the accessibility tree.",
    )
    xAriaLabel: str | None = Field(
        default=None,
        description="A short label representing the axis in the accessibility tree.",
    )
    xAxis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *top* or\n*bottom* for *x*. Defaults to *bottom* for an *x* scale.\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*top* and *bottom* for *x*). If null, the implicit axis is suppressed.",
    )
    xBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    xClamp: bool | str | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    xConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    xDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nLinear scales have a default domain of [0, 1]. Log scales have a default domain of [1, 10] and cannot include zero. Radius scales have a default domain from 0 to the median first quartile of associated channels. Length have a default domain from 0 to the median median of associated channels. Opacity scales have a default domain from 0 to the maximum value of associated channels.",
    )
    xExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    xFontVariant: str | None = Field(
        default=None,
        description="The font-variant attribute for axis ticks; defaults to *tabular-nums* for quantitative axes.",
    )
    xGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    xInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    xInsetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    xInsetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    xLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    xLabelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    xLabelArrow: (
        Literal["auto", "up", "right", "down", "left", "none", True, False] | str | None
    ) = Field(
        default=None,
        description="Whether to apply a directional arrow such as → or ↑ to the x-axis scale label. If *auto* (the default), the presence of the arrow depends on whether the scale is ordinal.",
    )
    xLabelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    xLine: bool | str | None = Field(
        default=None,
        description="If true, draw a line along the axis; if false (default), do not.",
    )
    xNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    xPadding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    xPaddingInner: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to separate adjacent bands.",
    )
    xPaddingOuter: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to inset first and last bands.",
    )
    xPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    xRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale.",
    )
    xReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    xRound: bool | str | None = Field(
        default=None,
        description="If true, round the output value to the nearest integer (pixel); useful for crisp edges when rendering.\n\nFor position scales only.",
    )
    xScale: (
        Literal[
            "linear",
            "pow",
            "sqrt",
            "log",
            "symlog",
            "utc",
            "time",
            "point",
            "band",
            "threshold",
            "quantile",
            "quantize",
            "identity",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The *x* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled.\n\nFor quantitative data (numbers), defaults to *linear*; for temporal data (dates), defaults to *utc*; for ordinal data (strings or booleans), defaults to *point* for position scales, *categorical* for color scales, and otherwise *ordinal*. However, the radius scale defaults to *sqrt*, and the length and opacity scales default to *linear*; these scales are intended for quantitative data. The plot’s marks may also impose a scale type; for example, the barY mark requires that *x* is a *band* scale.",
    )
    xTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    xTickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **xTickSize** and\n**xTickRotate**.",
    )
    xTickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    xTickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    xTickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    xTicks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    xZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    xyDomain: list | Literal["Fixed"] | str | None = Field(
        default=None, description="Set the *x* and *y* scale domains."
    )
    yAlign: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    yAriaDescription: str | None = Field(
        default=None,
        description="A textual description for the axis in the accessibility tree.",
    )
    yAriaLabel: str | None = Field(
        default=None,
        description="A short label representing the axis in the accessibility tree.",
    )
    yAxis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *left* or\n*right* for *y*. Defaults to *left* for a *y* scale.\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*left* and *right* for *y*). If null, the implicit axis is suppressed.",
    )
    yBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    yClamp: bool | str | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    yConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    yDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nLinear scales have a default domain of [0, 1]. Log scales have a default domain of [1, 10] and cannot include zero.",
    )
    yExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    yFontVariant: str | None = Field(
        default=None,
        description="The font-variant attribute for axis ticks; defaults to *tabular-nums* for quantitative axes.",
    )
    yGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    yInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    yInsetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    yInsetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    yLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    yLabelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    yLabelArrow: (
        Literal["auto", "up", "right", "down", "left", "none", True, False] | str | None
    ) = Field(
        default=None,
        description="Whether to apply a directional arrow such as → or ↑ to the x-axis scale label. If *auto* (the default), the presence of the arrow depends on whether the scale is ordinal.",
    )
    yLabelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    yLine: bool | str | None = Field(
        default=None,
        description="If true, draw a line along the axis; if false (default), do not.",
    )
    yNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    yPadding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    yPaddingInner: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to separate adjacent bands.",
    )
    yPaddingOuter: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to inset first and last bands.",
    )
    yPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    yRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*,\n*max*]; it can be [*max*, *min*] to reverse the scale.",
    )
    yReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**. Note that by default, when the *y* scale is continuous, the *max* value points to the top of the screen, whereas ordinal values are ranked from top to bottom.",
    )
    yRound: bool | str | None = Field(
        default=None,
        description="If true, round the output value to the nearest integer (pixel); useful for crisp edges when rendering.\n\nFor position scales only.",
    )
    yScale: (
        Literal[
            "linear",
            "pow",
            "sqrt",
            "log",
            "symlog",
            "utc",
            "time",
            "point",
            "band",
            "threshold",
            "quantile",
            "quantize",
            "identity",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The *y* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled.\n\nFor quantitative data (numbers), defaults to *linear*; for temporal data (dates), defaults to *utc*; for ordinal data (strings or booleans), defaults to *point* for position scales,  The plot’s marks may also impose a scale type; for example, the barY mark requires that *x* is a *band* scale.",
    )
    yTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    yTickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **yTickSize** and\n**yTickRotate**.",
    )
    yTickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    yTickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    yTickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    yTicks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    yZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )


class ChannelDomainSort(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    color: (
        ChannelDomainValueSpec1
        | str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to derive a scale’s domain from a channel’s values.",
    )
    fx: (
        ChannelDomainValueSpec1
        | str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to derive a scale’s domain from a channel’s values.",
    )
    fy: (
        ChannelDomainValueSpec1
        | str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to derive a scale’s domain from a channel’s values.",
    )
    length: (
        ChannelDomainValueSpec1
        | str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to derive a scale’s domain from a channel’s values.",
    )
    limit: float_aliased | list[float_aliased] | None = Field(
        default=None,
        description="If a positive number, limit the domain to the first *n* sorted values. If a negative number, limit the domain to the last *-n* sorted values. Hence, a positive **limit** with **reverse** true will return the top *n* values in descending order.\n\nIf an array [*lo*, *hi*], slices the sorted domain from *lo* (inclusive) to\n*hi* (exclusive). As with [*array*.slice][1], if either *lo* or *hi* are negative, it indicates an offset from the end of the array; if *lo* is undefined it defaults to 0, and if *hi* is undefined it defaults to Infinity.\n\nNote: limiting the imputed domain of one scale, say *x*, does not affect the imputed domain of another scale, say *y*; each scale domain is imputed independently.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice",
    )
    opacity: (
        ChannelDomainValueSpec1
        | str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to derive a scale’s domain from a channel’s values.",
    )
    order: Literal["ascending", "descending"] | None = Field(
        default=None, description="How to order reduced values."
    )
    r: (
        ChannelDomainValueSpec1
        | str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to derive a scale’s domain from a channel’s values.",
    )
    reduce: (
        bool
        | str
        | Literal[
            "p00",
            "p01",
            "p02",
            "p03",
            "p04",
            "p05",
            "p06",
            "p07",
            "p08",
            "p09",
            "p10",
            "p11",
            "p12",
            "p13",
            "p14",
            "p15",
            "p16",
            "p17",
            "p18",
            "p19",
            "p20",
            "p21",
            "p22",
            "p23",
            "p24",
            "p25",
            "p26",
            "p27",
            "p28",
            "p29",
            "p30",
            "p31",
            "p32",
            "p33",
            "p34",
            "p35",
            "p36",
            "p37",
            "p38",
            "p39",
            "p40",
            "p41",
            "p42",
            "p43",
            "p44",
            "p45",
            "p46",
            "p47",
            "p48",
            "p49",
            "p50",
            "p51",
            "p52",
            "p53",
            "p54",
            "p55",
            "p56",
            "p57",
            "p58",
            "p59",
            "p60",
            "p61",
            "p62",
            "p63",
            "p64",
            "p65",
            "p66",
            "p67",
            "p68",
            "p69",
            "p70",
            "p71",
            "p72",
            "p73",
            "p74",
            "p75",
            "p76",
            "p77",
            "p78",
            "p79",
            "p80",
            "p81",
            "p82",
            "p83",
            "p84",
            "p85",
            "p86",
            "p87",
            "p88",
            "p89",
            "p90",
            "p91",
            "p92",
            "p93",
            "p94",
            "p95",
            "p96",
            "p97",
            "p98",
            "p99",
        ]
        | None
    ) = Field(
        default=None,
        description="How to produce a singular value (for subsequent sorting) from aggregated channel values; one of:\n\n- true (default) - alias for *max*\n- false or null - disabled; don’t impute the scale domain\n- a named reducer implementation such as *count* or *sum*\n- a function that takes an array of values and returns the reduced value\n- an object that implements the *reduceIndex* method",
    )
    reverse: bool | None = Field(
        default=None, description="If true, reverse the order after sorting."
    )
    symbol: (
        ChannelDomainValueSpec1
        | str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to derive a scale’s domain from a channel’s values.",
    )
    x: (
        ChannelDomainValueSpec1
        | str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to derive a scale’s domain from a channel’s values.",
    )
    y: (
        ChannelDomainValueSpec1
        | str
        | Literal[
            "ariaLabel",
            "fill",
            "fillOpacity",
            "fontSize",
            "fx",
            "fy",
            "geometry",
            "height",
            "href",
            "length",
            "opacity",
            "path",
            "r",
            "rotate",
            "src",
            "stroke",
            "strokeOpacity",
            "strokeWidth",
            "symbol",
            "text",
            "title",
            "weight",
            "width",
            "x",
            "x1",
            "x2",
            "y",
            "y1",
            "y2",
            "z",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to derive a scale’s domain from a channel’s values.",
    )


class ChannelValueIntervalSpec1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
    ) = Field(
        ...,
        description="How to partition a continuous range into discrete intervals; one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*",
    )
    value: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        ...,
        description="A channel’s values may be expressed as:\n\n- a field name, to extract the corresponding value for each datum\n- an iterable of values, typically of the same length as the data\n- a channel transform or SQL expression\n- a constant number or boolean\n- null to represent no value",
    )


class ChannelValueSpec1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    label: str | None = None
    scale: (
        str
        | bool
        | Literal["x", "y", "fx", "fy", "r", "color", "opacity", "symbol", "length"]
        | None
    ) = None
    value: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        ...,
        description="A channel’s values may be expressed as:\n\n- a field name, to extract the corresponding value for each datum\n- an iterable of values, typically of the same length as the data\n- a channel transform or SQL expression\n- a constant number or boolean\n- null to represent no value",
    )


class Tip(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    anchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The tip anchor specifies how to orient the tip box relative to its anchor position; it refers to the part of the tip box that is attached to the anchor point. For example, the *top-left* anchor places the top-left corner of tip box near the anchor position, hence placing the tip box below and to the right of the anchor position.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    format: Format | None = Field(
        default=None,
        description="How channel values are formatted for display. If a format is a string, it is interpreted as a (UTC) time format for temporal channels, and otherwise a number format.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for tips distributed horizontally at the top of the frame:\n\n```js Plot.tip(data, {x: "date", frameAnchor: "top"}) ```',
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    pathFilter: str | None = Field(
        default=None,
        description="The image filter for the tip’s box; defaults to a drop shadow.",
    )
    pointer: Literal["x", "y", "xy"] | None = Field(
        default=None,
        description="The pointer mode for the tip; corresponds to pointerX, pointerY, and pointer.",
    )
    pointerSize: float_aliased | str | None = Field(
        default=None,
        description="The size of the tip’s pointer in pixels; defaults to 12.",
    )
    preferredAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If an explicit tip anchor is not specified, an anchor is chosen automatically such that the tip fits within the plot’s frame; if the preferred anchor fits, it is chosen.",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    textPadding: float_aliased | str | None = Field(
        default=None,
        description="The padding around the text in pixels; defaults to 8.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the tip’s anchor, typically bound to the *x* scale.",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The starting horizontal position channel specifying the tip’s anchor, typically bound to the *x* scale.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The ending horizontal position channel specifying the tip’s anchor, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the tip’s anchor, typically bound to the *y* scale.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The starting vertical position channel specifying the tip’s anchor, typically bound to the *y* scale.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The ending vertical position channel specifying the tip’s anchor, typically bound to the *y* scale.",
    )


class SortOrder1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    order: Literal["ascending", "descending"] | None = None
    value: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A channel’s values may be expressed as:\n\n- a field name, to extract the corresponding value for each datum\n- an iterable of values, typically of the same length as the data\n- a channel transform or SQL expression\n- a constant number or boolean\n- null to represent no value",
    )


class Sphere(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["sphere"] = Field(
        default="sphere",
        description="A geo mark whose *data* is the outline of the sphere on the projection’s plane. (For use with a spherical **projection** only.)",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )


class Spike(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The vector’s position along its orientation relative to its anchor point; a constant. Assuming a default **rotate** angle of 0°, one of:\n\n- *start* - from [*x*, *y*] to [*x*, *y* - *l*]\n- *middle* (default) - from [*x*, *y* + *l* / 2] to [*x*, *y* - *l* / 2]\n- *end* - from [*x*, *y* + *l*] to [*x*, *y*]\n\nwhere [*x*, *y*] is the vector’s anchor point and *l* is the vector’s (possibly scaled) length in pixels.",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The vector’s frame anchor, to default **x** and **y** relative to the frame; a constant representing one of the frame corners (*top-left*,\n*top-right*, *bottom-right*, *bottom-left*), sides (*top*, *right*,\n*bottom*, *left*), or *middle* (default). Has no effect if both **x** and **y** are specified.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    length: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vector’s length; either an optional channel bound to the *length* scale or a constant number in pixels. Defaults to 12 pixels.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["spike"] = Field(
        default="spike",
        description="Like vector, but with default *options* suitable for drawing a spike map.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: float_aliased | str | None = Field(
        default=None,
        description="The vector shape’s radius, such as half the width of the *arrow*’s head or the *spike*’s base; a constant number in pixels. Defaults to 3.5 pixels.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vector’s orientation (rotation angle); either a constant number in degrees clockwise, or an optional channel (with no associated scale). Defaults to 0 degrees with the vector pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shape: Literal["arrow", "spike"] | str | None = Field(
        default=None,
        description="The shape of the vector; a constant. Defaults to *arrow*.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the vector’s anchor point; an optional channel bound to the *x* scale. Default depends on the **frameAnchor**.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the vector’s anchor point; an optional channel bound to the *y* scale. Default depends on the **frameAnchor**.",
    )


class Text(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list | None = Field(
        default=None, description="The data source for the mark."
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y**, along with\n**textAnchor** and **lineAnchor**, based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*, *bottom-left*), or the\n*middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    lineAnchor: str | None = Field(
        default=None,
        description="The line anchor controls how text is aligned (typically vertically) relative to its anchor point; it is one of *top*, *bottom*, or *middle*. If the frame anchor is *top*, *top-left*, or *top-right*, the default line anchor is *top*; if the frame anchor is *bottom*, *bottom-right*, or\n*bottom-left*, the default is *bottom*; otherwise it is *middle*.",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["text"] = Field(
        default="text",
        description="A text mark. The **text** channel specifies the textual contents of the mark, which may be preformatted with line breaks (\\n, \\r\\n, or \\r), or wrapped or clipped using the **lineWidth** and **textOverflow** options.\n\nIf **text** contains numbers or dates, a default formatter will be applied, and the **fontVariant** will default to *tabular-nums* instead of *normal*. If **text** is not specified, it defaults to the identity function for primitive data (such as numbers, dates, and strings), and to the zero-based index [0, 1, 2, …] for objects (so that something identifying is visible by default).\n\nIf either **x** or **y** is not specified, the default is determined by the **frameAnchor** option.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle in degrees clockwise; a constant or a channel; defaults to 0°. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    text: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The text contents channel, possibly with line breaks (\\n, \\r\\n, or \\r). If not specified, defaults to the zero-based index [0, 1, 2, …].",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the text’s anchor point, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the text’s anchor point, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class TickX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["tickX"] = Field(
        default="tickX",
        description="A horizontally-positioned tickX mark (a vertical line, |). The **x** channel specifies the tick’s horizontal position and defaults to identity, assuming that *data* = [*x₀*, *x₁*, *x₂*, …]; the optional **y** ordinal channel specifies its vertical position.\n\nIf *y* represents quantitative or temporal values, use a ruleX mark instead.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required horizontal position of the tick; a channel typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional vertical position of the tick; an ordinal channel typically bound to the *y* scale. If not specified, the tick spans the vertical extent of the frame; otherwise the *y* scale must be a *band* scale.\n\nIf *y* represents quantitative or temporal values, use a ruleX mark instead.",
    )


class TickY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["tickY"] = Field(
        default="tickY",
        description="A vertically-positioned tickY mark (a horizontal line, —). The **y** channel specifies the tick's vertical position and defaults to identity, assuming that *data* = [*y₀*, *y₁*, *y₂*, …]; the optional **x** ordinal channel specifies its horizontal position.\n\nIf *x* represents quantitative or temporal values, use a ruleY mark instead.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional horizontal position of the tick; an ordinal channel typically bound to the *x* scale. If not specified, the tick spans the horizontal extent of the frame; otherwise the *x* scale must be a *band* scale.\n\nIf *x* represents quantitative or temporal values, use a ruleY mark instead.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required vertical position of the tick; a channel typically bound to the *y* scale.",
    )


class Vector(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The vector’s position along its orientation relative to its anchor point; a constant. Assuming a default **rotate** angle of 0°, one of:\n\n- *start* - from [*x*, *y*] to [*x*, *y* - *l*]\n- *middle* (default) - from [*x*, *y* + *l* / 2] to [*x*, *y* - *l* / 2]\n- *end* - from [*x*, *y* + *l*] to [*x*, *y*]\n\nwhere [*x*, *y*] is the vector’s anchor point and *l* is the vector’s (possibly scaled) length in pixels.",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The vector’s frame anchor, to default **x** and **y** relative to the frame; a constant representing one of the frame corners (*top-left*,\n*top-right*, *bottom-right*, *bottom-left*), sides (*top*, *right*,\n*bottom*, *left*), or *middle* (default). Has no effect if both **x** and **y** are specified.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    length: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vector’s length; either an optional channel bound to the *length* scale or a constant number in pixels. Defaults to 12 pixels.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["vector"] = Field(
        default="vector",
        description="A vector mark.\n\nIf none of **frameAnchor**, **x**, and **y** are specified, then **x** and\n**y** default to accessors assuming that *data* contains tuples [[*x₀*,\n*y₀*], [*x₁*, *y₁*], [*x₂*, *y₂*], …]",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: float_aliased | str | None = Field(
        default=None,
        description="The vector shape’s radius, such as half the width of the *arrow*’s head or the *spike*’s base; a constant number in pixels. Defaults to 3.5 pixels.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vector’s orientation (rotation angle); either a constant number in degrees clockwise, or an optional channel (with no associated scale). Defaults to 0 degrees with the vector pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shape: Literal["arrow", "spike"] | str | None = Field(
        default=None,
        description="The shape of the vector; a constant. Defaults to *arrow*.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the vector’s anchor point; an optional channel bound to the *x* scale. Default depends on the **frameAnchor**.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the vector’s anchor point; an optional channel bound to the *y* scale. Default depends on the **frameAnchor**.",
    )


class VectorX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The vector’s position along its orientation relative to its anchor point; a constant. Assuming a default **rotate** angle of 0°, one of:\n\n- *start* - from [*x*, *y*] to [*x*, *y* - *l*]\n- *middle* (default) - from [*x*, *y* + *l* / 2] to [*x*, *y* - *l* / 2]\n- *end* - from [*x*, *y* + *l*] to [*x*, *y*]\n\nwhere [*x*, *y*] is the vector’s anchor point and *l* is the vector’s (possibly scaled) length in pixels.",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The vector’s frame anchor, to default **x** and **y** relative to the frame; a constant representing one of the frame corners (*top-left*,\n*top-right*, *bottom-right*, *bottom-left*), sides (*top*, *right*,\n*bottom*, *left*), or *middle* (default). Has no effect if both **x** and **y** are specified.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    length: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vector’s length; either an optional channel bound to the *length* scale or a constant number in pixels. Defaults to 12 pixels.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["vectorX"] = Field(
        default="vectorX",
        description="Like vector, but **x** instead defaults to the identity function and **y** defaults to null, assuming that *data* is an array of numbers [*x₀*, *x₁*,\n*x₂*, …].",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: float_aliased | str | None = Field(
        default=None,
        description="The vector shape’s radius, such as half the width of the *arrow*’s head or the *spike*’s base; a constant number in pixels. Defaults to 3.5 pixels.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vector’s orientation (rotation angle); either a constant number in degrees clockwise, or an optional channel (with no associated scale). Defaults to 0 degrees with the vector pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shape: Literal["arrow", "spike"] | str | None = Field(
        default=None,
        description="The shape of the vector; a constant. Defaults to *arrow*.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the vector’s anchor point; an optional channel bound to the *x* scale. Default depends on the **frameAnchor**.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the vector’s anchor point; an optional channel bound to the *y* scale. Default depends on the **frameAnchor**.",
    )


class VectorY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The vector’s position along its orientation relative to its anchor point; a constant. Assuming a default **rotate** angle of 0°, one of:\n\n- *start* - from [*x*, *y*] to [*x*, *y* - *l*]\n- *middle* (default) - from [*x*, *y* + *l* / 2] to [*x*, *y* - *l* / 2]\n- *end* - from [*x*, *y* + *l*] to [*x*, *y*]\n\nwhere [*x*, *y*] is the vector’s anchor point and *l* is the vector’s (possibly scaled) length in pixels.",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The vector’s frame anchor, to default **x** and **y** relative to the frame; a constant representing one of the frame corners (*top-left*,\n*top-right*, *bottom-right*, *bottom-left*), sides (*top*, *right*,\n*bottom*, *left*), or *middle* (default). Has no effect if both **x** and **y** are specified.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    length: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vector’s length; either an optional channel bound to the *length* scale or a constant number in pixels. Defaults to 12 pixels.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["vectorY"] = Field(
        default="vectorY",
        description="Like vector, but **y** instead defaults to the identity function and **x** defaults to null, assuming that *data* is an array of numbers [*y₀*, *y₁*,\n*y₂*, …].",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: float_aliased | str | None = Field(
        default=None,
        description="The vector shape’s radius, such as half the width of the *arrow*’s head or the *spike*’s base; a constant number in pixels. Defaults to 3.5 pixels.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vector’s orientation (rotation angle); either a constant number in degrees clockwise, or an optional channel (with no associated scale). Defaults to 0 degrees with the vector pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shape: Literal["arrow", "spike"] | str | None = Field(
        default=None,
        description="The shape of the vector; a constant. Defaults to *arrow*.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the vector’s anchor point; an optional channel bound to the *x* scale. Default depends on the **frameAnchor**.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the vector’s anchor point; an optional channel bound to the *y* scale. Default depends on the **frameAnchor**.",
    )


class Voronoi(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["voronoi"] = Field(
        default="voronoi",
        description="A mark that draws polygons for each cell of the Voronoi tesselation of the points given by the **x** and **y** channels.\n\nIf **z** is specified, the input points are grouped by *z*, producing a separate Voronoi tesselation for each group.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping to produce multiple (possibly overlapping) triangulations.",
    )


class VoronoiMesh(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["voronoiMesh"] = Field(
        default="voronoiMesh",
        description="A mark that draws a mesh for the cell boundaries of the Voronoi tesselation of the points given by the **x** and **y** channels. The\n**stroke** option defaults to _currentColor_, and the **strokeOpacity** defaults to 0.2. The **fill** option is not supported. When an aesthetic channel is specified (such as **stroke** or **strokeWidth**), the mesh inherits the corresponding channel value from one of its constituent points arbitrarily.\n\nIf **z** is specified, the input points are grouped by *z*, producing a separate Voronoi tesselation for each group.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping to produce multiple (possibly overlapping) triangulations.",
    )


class Area(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["area"] = Field(
        default="area",
        description="An area mark. The area mark is rarely used directly; it is only needed when the baseline and topline have neither *x* nor *y* values in common. Use areaY for a horizontal orientation where the baseline and topline share *x* values, or areaX for a vertical orientation where the baseline and topline share *y* values.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often left) horizontal position channel, representing the area’s baseline, typically bound to the *x* scale. For areaX, setting this option disables the implicit stackX transform.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional secondary (ending, often right) horizontal position channel, representing the area’s topline, typically bound to the *x* scale; if not specified, **x1** is used. For areaX, setting this option disables the implicit stackX transform.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often bottom) vertical position channel, representing the area’s baseline, typically bound to the *y* scale. For areaY, setting this option disables the implicit stackY transform.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional secondary (ending, often top) vertical position channel, representing the area’s topline, typically bound to the *y* scale; if not specified, **y1** is used. For areaY, setting this option disables the implicit stackY transform.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate areas; defaults to **fill** if a channel, or\n**stroke** if a channel.",
    )


class AreaX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["areaX"] = Field(
        default="areaX",
        description="A vertically-oriented area mark, where the baseline and topline share\n**y** values, as in a time-series area chart where time goes up↑.\n\nIf neither **x1** nor **x2** is specified, an implicit stackX transform is applied and **x** defaults to the identity function, assuming that *data* = [*x₀*, *x₁*, *x₂*, …]. Otherwise, if only one of **x1** or **x2** is specified, the other defaults to **x**, which defaults to zero.\n\nIf an **interval** is specified, **y** values are binned accordingly, allowing zeroes for empty bins instead of interpolating across gaps. This is recommended to “regularize” sampled data; for example, if your data represents timestamped observations and you expect one observation per day, use *day* as the **interval**.\n\nVariable aesthetic channels are supported: if the **fill** is defined as a channel, the area will be broken into contiguous overlapping sections when the fill color changes; the fill color will apply to the interval spanning the current data point and the following data point. This behavior also applies to the **fillOpacity**, **stroke**, **strokeOpacity**,\n**strokeWidth**, **opacity**, **href**, **title**, and **ariaLabel** channels. When any of these channels are used, setting an explicit **z** channel (possibly to null) is strongly recommended.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position (or length) channel, typically bound to the *x* scale.\n\nIf neither **x1** nor **x2** is specified, an implicit stackX transform is applied and **x** defaults to the identity function, assuming that *data* = [*x₀*, *x₁*, *x₂*, …]. Otherwise, if only one of **x1** or **x2** is specified, the other defaults to **x**, which defaults to zero.",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often left) horizontal position channel, representing the area’s baseline, typically bound to the *x* scale. For areaX, setting this option disables the implicit stackX transform.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional secondary (ending, often right) horizontal position channel, representing the area’s topline, typically bound to the *x* scale; if not specified, **x1** is used. For areaX, setting this option disables the implicit stackX transform.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate areas; defaults to **fill** if a channel, or\n**stroke** if a channel.",
    )


class AreaY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["areaY"] = Field(
        default="areaY",
        description="A horizontally-oriented area mark, where the baseline and topline share\n**x** values, as in a time-series area chart where time goes right→.\n\nIf neither **y1** nor **y2** is specified, an implicit stackY transform is applied and **y** defaults to the identity function, assuming that *data* = [*y₀*, *y₁*, *y₂*, …]. Otherwise, if only one of **y1** or **y2** is specified, the other defaults to **y**, which defaults to zero.\n\nIf an **interval** is specified, **x** values are binned accordingly, allowing zeroes for empty bins instead of interpolating across gaps. This is recommended to “regularize” sampled data; for example, if your data represents timestamped observations and you expect one observation per day, use *day* as the **interval**.\n\nVariable aesthetic channels are supported: if the **fill** is defined as a channel, the area will be broken into contiguous overlapping sections when the fill color changes; the fill color will apply to the interval spanning the current data point and the following data point. This behavior also applies to the **fillOpacity**, **stroke**, **strokeOpacity**,\n**strokeWidth**, **opacity**, **href**, **title**, and **ariaLabel** channels. When any of these channels are used, setting an explicit **z** channel (possibly to null) is strongly recommended.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position (or length) channel, typically bound to the *y* scale.\n\nIf neither **y1** nor **y2** is specified, an implicit stackY transform is applied and **y** defaults to the identity function, assuming that *data* = [*y₀*, *y₁*, *y₂*, …]. Otherwise, if only one of **y1** or **y2** is specified, the other defaults to **y**, which defaults to zero.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often bottom) vertical position channel, representing the area’s baseline, typically bound to the *y* scale. For areaY, setting this option disables the implicit stackY transform.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional secondary (ending, often top) vertical position channel, representing the area’s topline, typically bound to the *y* scale; if not specified, **y1** is used. For areaY, setting this option disables the implicit stackY transform.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate areas; defaults to **fill** if a channel, or\n**stroke** if a channel.",
    )


class Arrow(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bend: float_aliased | bool | str | None = Field(
        default=None,
        description="The angle, a constant in degrees, between the straight line intersecting the arrow’s two control points and the outgoing tangent direction of the arrow from the start point. The angle must be within ±90°; a positive angle will produce a clockwise curve, while a negative angle will produce a counterclockwise curve; zero (the default) will produce a straight line. Use true for 22.5°.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    headAngle: float_aliased | str | None = Field(
        default=None,
        description="How pointy the arrowhead is, in degrees; a constant typically between 0° and 180°, and defaults to 60°.",
    )
    headLength: float_aliased | str | None = Field(
        default=None,
        description="The size of the arrowhead relative to the **strokeWidth**; a constant. Assuming the default of stroke width 1.5px, this is the length of the arrowhead’s side in pixels.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for **insetStart** and **insetEnd**.",
    )
    insetEnd: float_aliased | str | None = Field(
        default=None,
        description="The ending inset, a constant in pixels; defaults to 0. A positive inset shortens the arrow by moving the ending point towards the starting point, while a negative inset extends it by moving the ending point in the opposite direction. A positive ending inset may be useful if the arrow points to a dot.",
    )
    insetStart: float_aliased | str | None = Field(
        default=None,
        description="The starting inset, a constant in pixels; defaults to 0. A positive inset shortens the arrow by moving the starting point towards the endpoint point, while a negative inset extends it by moving the starting point in the opposite direction. A positive starting inset may be useful if the arrow emerges from a dot.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["arrow"] = Field(
        default="arrow",
        description="An arrow mark, drawing (possibly swoopy) arrows connecting pairs of points.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    sweep: float_aliased | str | None = Field(
        default=None,
        description="The sweep order; defaults to 1 indicating a positive (clockwise) bend angle; -1 indicates a negative (anticlockwise) bend angle; 0 effectively clears the bend angle. If set to *-x*, the bend angle is flipped when the ending point is to the left of the starting point — ensuring all arrows bulge up (down if bend is negative); if set to *-y*, the bend angle is flipped when the ending point is above the starting point — ensuring all arrows bulge right (left if bend is negative); the sign is negated for\n*+x* and *+y*.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position, for vertical arrows; typically bound to the *x* scale; shorthand for setting defaults for both **x1** and **x2**.",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The starting horizontal position; typically bound to the *x* scale; also sets a default for **x2**.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The ending horizontal position; typically bound to the *x* scale; also sets a default for **x1**.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position, for horizontal arrows; typically bound to the *y* scale; shorthand for setting defaults for both **y1** and **y2**.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The starting vertical position; typically bound to the *y* scale; also sets a default for **y2**.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The ending vertical position; typically bound to the *y* scale; also sets a default for **y1**.",
    )


class AxisFx(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The side of the frame on which to place the axis: *top* or *bottom* for horizontal axes (axisX and axisFx) and their associated vertical grids (gridX and gridFx), or *left* or *right* for vertical axes (axisY and axisFY) and their associated horizontal grids (gridY and gridFy).\n\nThe default **anchor** depends on the associated scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nFor grids, the **anchor** also affects the extent of grid lines when the opposite dimension is specified (**x** for gridY and **y** for gridX).",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    color: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fill** and **stroke**; affects the stroke of tick vectors and grid rules, and the fill of tick texts and axis label texts; defaults to *currentColor*.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y**, along with\n**textAnchor** and **lineAnchor**, based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*, *bottom-left*), or the\n*middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="Enforces uniformity for data at regular intervals, such as integer values or daily samples. The interval may be one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nThis option sets the internal transform to the given interval’s\n*interval*.floor function. In addition, the default **domain** will align with interval boundaries.",
    )
    label: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    labelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    labelArrow: str | bool | None = Field(
        default=None,
        description="Whether to apply a directional arrow such as → or ↑ to the scale label. If\n*auto* (the default), the presence of the arrow depends on whether the scale is ordinal.",
    )
    labelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    lineAnchor: str | None = Field(
        default=None,
        description="The line anchor controls how text is aligned (typically vertically) relative to its anchor point; it is one of *top*, *bottom*, or *middle*. If the frame anchor is *top*, *top-left*, or *top-right*, the default line anchor is *top*; if the frame anchor is *bottom*, *bottom-right*, or\n*bottom-left*, the default is *bottom*; otherwise it is *middle*.",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["axisFx"] = Field(
        default="axisFx",
        description="An axis mark to document the visual encoding of the horizontal facet position *fx* scale, comprised of (up to) three marks: a vector for ticks, a text for tick labels, and another text for an axis label. The data defaults to the *fx* scale’s domain; if desired, use one of the **ticks**,\n**tickSpacing**, or **interval** options.\n\nThe **facetAnchor** and **frameAnchor** options defaults to **anchor**. The default margins likewise depend on **anchor** as follows; in order of\n**marginTop**, **marginRight**, **marginBottom**, and **marginLeft**, in pixels:\n\n- *top* - 30, 20, 0, 20\n- *bottom* - 0, 20, 30, 20\n\nFor simplicity, and for consistent layout across plots, default axis margins are not affected by tick labels. If tick labels are too long, either increase the margin or shorten the labels: use the *k* SI-prefix tick format; use the\n**transform** *y*-scale option to show thousands or millions; or use the\n**textOverflow** and **lineWidth** options to clip.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fillOpacity** and **strokeOpacity**; affects the stroke opacity of tick vectors and grid rules, and the fill opacity of tick texts and axis label texts; defaults to 1 for axes and 0.1 for grids.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle in degrees clockwise; a constant or a channel; defaults to 0°. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    text: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The text contents channel, possibly with line breaks (\\n, \\r\\n, or \\r). If not specified, defaults to the zero-based index [0, 1, 2, …].",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    textStroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The tick text **stroke**, say for a *white* outline to improve legibility; defaults to null.",
    )
    textStrokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The tick text **strokeOpacity**; defaults to 1; has no effect unless **textStroke** is set.",
    )
    textStrokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The tick text **strokeWidth**; defaults to 4; has no effect unless **textStroke** is set.",
    )
    tickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    tickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **xTickSize** and\n**xTickRotate**.",
    )
    tickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    tickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    tickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    ticks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the text’s anchor point, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the text’s anchor point, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class AxisFy(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The side of the frame on which to place the axis: *top* or *bottom* for horizontal axes (axisX and axisFx) and their associated vertical grids (gridX and gridFx), or *left* or *right* for vertical axes (axisY and axisFY) and their associated horizontal grids (gridY and gridFy).\n\nThe default **anchor** depends on the associated scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nFor grids, the **anchor** also affects the extent of grid lines when the opposite dimension is specified (**x** for gridY and **y** for gridX).",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    color: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fill** and **stroke**; affects the stroke of tick vectors and grid rules, and the fill of tick texts and axis label texts; defaults to *currentColor*.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y**, along with\n**textAnchor** and **lineAnchor**, based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*, *bottom-left*), or the\n*middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="Enforces uniformity for data at regular intervals, such as integer values or daily samples. The interval may be one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nThis option sets the internal transform to the given interval’s\n*interval*.floor function. In addition, the default **domain** will align with interval boundaries.",
    )
    label: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    labelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    labelArrow: str | bool | None = Field(
        default=None,
        description="Whether to apply a directional arrow such as → or ↑ to the scale label. If\n*auto* (the default), the presence of the arrow depends on whether the scale is ordinal.",
    )
    labelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    lineAnchor: str | None = Field(
        default=None,
        description="The line anchor controls how text is aligned (typically vertically) relative to its anchor point; it is one of *top*, *bottom*, or *middle*. If the frame anchor is *top*, *top-left*, or *top-right*, the default line anchor is *top*; if the frame anchor is *bottom*, *bottom-right*, or\n*bottom-left*, the default is *bottom*; otherwise it is *middle*.",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["axisFy"] = Field(
        default="axisFy",
        description="An axis mark to document the visual encoding of the vertical facet position *fy* scale, comprised of (up to) three marks: a vector for ticks, a text for tick labels, and another text for an axis label. The data defaults to the *fy* scale’s domain; if desired, use one of the **ticks**,\n**tickSpacing**, or **interval** options.\n\nThe **facetAnchor** option defaults to *right-empty* if **anchor** is\n*right*, and *left-empty* if **anchor** is *left*. The default margins likewise depend on **anchor** as follows; in order of **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**, in pixels:\n\n- *right* - 20, 40, 20, 0\n- *left* - 20, 0, 20, 40\n\nFor simplicity, and for consistent layout across plots, default axis margins are not affected by tick labels. If tick labels are too long, either increase the margin or shorten the labels: use the *k* SI-prefix tick format; or use the **textOverflow** and **lineWidth** options to clip.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fillOpacity** and **strokeOpacity**; affects the stroke opacity of tick vectors and grid rules, and the fill opacity of tick texts and axis label texts; defaults to 1 for axes and 0.1 for grids.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle in degrees clockwise; a constant or a channel; defaults to 0°. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    text: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The text contents channel, possibly with line breaks (\\n, \\r\\n, or \\r). If not specified, defaults to the zero-based index [0, 1, 2, …].",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    textStroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The tick text **stroke**, say for a *white* outline to improve legibility; defaults to null.",
    )
    textStrokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The tick text **strokeOpacity**; defaults to 1; has no effect unless **textStroke** is set.",
    )
    textStrokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The tick text **strokeWidth**; defaults to 4; has no effect unless **textStroke** is set.",
    )
    tickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    tickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **xTickSize** and\n**xTickRotate**.",
    )
    tickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    tickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    tickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    ticks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the text’s anchor point, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the text’s anchor point, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class AxisX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The side of the frame on which to place the axis: *top* or *bottom* for horizontal axes (axisX and axisFx) and their associated vertical grids (gridX and gridFx), or *left* or *right* for vertical axes (axisY and axisFY) and their associated horizontal grids (gridY and gridFy).\n\nThe default **anchor** depends on the associated scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nFor grids, the **anchor** also affects the extent of grid lines when the opposite dimension is specified (**x** for gridY and **y** for gridX).",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    color: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fill** and **stroke**; affects the stroke of tick vectors and grid rules, and the fill of tick texts and axis label texts; defaults to *currentColor*.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y**, along with\n**textAnchor** and **lineAnchor**, based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*, *bottom-left*), or the\n*middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="Enforces uniformity for data at regular intervals, such as integer values or daily samples. The interval may be one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nThis option sets the internal transform to the given interval’s\n*interval*.floor function. In addition, the default **domain** will align with interval boundaries.",
    )
    label: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    labelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    labelArrow: str | bool | None = Field(
        default=None,
        description="Whether to apply a directional arrow such as → or ↑ to the scale label. If\n*auto* (the default), the presence of the arrow depends on whether the scale is ordinal.",
    )
    labelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    lineAnchor: str | None = Field(
        default=None,
        description="The line anchor controls how text is aligned (typically vertically) relative to its anchor point; it is one of *top*, *bottom*, or *middle*. If the frame anchor is *top*, *top-left*, or *top-right*, the default line anchor is *top*; if the frame anchor is *bottom*, *bottom-right*, or\n*bottom-left*, the default is *bottom*; otherwise it is *middle*.",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["axisX"] = Field(
        default="axisX",
        description="An axis mark to document the visual encoding of the horizontal position\n*x* scale, comprised of (up to) three marks: a vector for ticks, a text for tick labels, and another text for an axis label. The data defaults to tick values sampled from the *x* scale’s domain; if desired, use one of the **ticks**, **tickSpacing**, or **interval** options.\n\nThe **facetAnchor** option defaults to *bottom-empty* if **anchor** is\n*bottom*, and *top-empty* if **anchor** is *top*. The default margins likewise depend on **anchor** as follows; in order of **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**, in pixels:\n\n- *top* - 30, 20, 0, 20\n- *bottom* - 0, 20, 30, 20\n\nFor simplicity, and for consistent layout across plots, default axis margins are not affected by tick labels. If tick labels are too long, either increase the margin or shorten the labels: use the *k* SI-prefix tick format; use the\n**transform** *y*-scale option to show thousands or millions; or use the\n**textOverflow** and **lineWidth** options to clip.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fillOpacity** and **strokeOpacity**; affects the stroke opacity of tick vectors and grid rules, and the fill opacity of tick texts and axis label texts; defaults to 1 for axes and 0.1 for grids.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle in degrees clockwise; a constant or a channel; defaults to 0°. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    text: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The text contents channel, possibly with line breaks (\\n, \\r\\n, or \\r). If not specified, defaults to the zero-based index [0, 1, 2, …].",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    textStroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The tick text **stroke**, say for a *white* outline to improve legibility; defaults to null.",
    )
    textStrokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The tick text **strokeOpacity**; defaults to 1; has no effect unless **textStroke** is set.",
    )
    textStrokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The tick text **strokeWidth**; defaults to 4; has no effect unless **textStroke** is set.",
    )
    tickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    tickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **xTickSize** and\n**xTickRotate**.",
    )
    tickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    tickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    tickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    ticks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the text’s anchor point, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the text’s anchor point, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class AxisY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The side of the frame on which to place the axis: *top* or *bottom* for horizontal axes (axisX and axisFx) and their associated vertical grids (gridX and gridFx), or *left* or *right* for vertical axes (axisY and axisFY) and their associated horizontal grids (gridY and gridFy).\n\nThe default **anchor** depends on the associated scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nFor grids, the **anchor** also affects the extent of grid lines when the opposite dimension is specified (**x** for gridY and **y** for gridX).",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    color: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fill** and **stroke**; affects the stroke of tick vectors and grid rules, and the fill of tick texts and axis label texts; defaults to *currentColor*.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y**, along with\n**textAnchor** and **lineAnchor**, based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*, *bottom-left*), or the\n*middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="Enforces uniformity for data at regular intervals, such as integer values or daily samples. The interval may be one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nThis option sets the internal transform to the given interval’s\n*interval*.floor function. In addition, the default **domain** will align with interval boundaries.",
    )
    label: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    labelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    labelArrow: str | bool | None = Field(
        default=None,
        description="Whether to apply a directional arrow such as → or ↑ to the scale label. If\n*auto* (the default), the presence of the arrow depends on whether the scale is ordinal.",
    )
    labelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    lineAnchor: str | None = Field(
        default=None,
        description="The line anchor controls how text is aligned (typically vertically) relative to its anchor point; it is one of *top*, *bottom*, or *middle*. If the frame anchor is *top*, *top-left*, or *top-right*, the default line anchor is *top*; if the frame anchor is *bottom*, *bottom-right*, or\n*bottom-left*, the default is *bottom*; otherwise it is *middle*.",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["axisY"] = Field(
        default="axisY",
        description="An axis mark to document the visual encoding of the vertical position *y* scale, comprised of (up to) three marks: a vector for ticks, a text for tick labels, and another text for an axis label. The data defaults to tick values sampled from the *y* scale’s domain; if desired, use one of the\n**ticks**, **tickSpacing**, or **interval** options.\n\nThe **facetAnchor** option defaults to *right-empty* if **anchor** is\n*right*, and *left-empty* if **anchor** is *left*. The default margins likewise depend on **anchor** as follows; in order of **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**, in pixels:\n\n- *right* - 20, 40, 20, 0\n- *left* - 20, 0, 20, 40\n\nFor simplicity, and for consistent layout across plots, default axis margins are not affected by tick labels. If tick labels are too long, either increase the margin or shorten the labels: use the *k* SI-prefix tick format; or use the **textOverflow** and **lineWidth** options to clip.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fillOpacity** and **strokeOpacity**; affects the stroke opacity of tick vectors and grid rules, and the fill opacity of tick texts and axis label texts; defaults to 1 for axes and 0.1 for grids.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle in degrees clockwise; a constant or a channel; defaults to 0°. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    text: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The text contents channel, possibly with line breaks (\\n, \\r\\n, or \\r). If not specified, defaults to the zero-based index [0, 1, 2, …].",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    textStroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The tick text **stroke**, say for a *white* outline to improve legibility; defaults to null.",
    )
    textStrokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The tick text **strokeOpacity**; defaults to 1; has no effect unless **textStroke** is set.",
    )
    textStrokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The tick text **strokeWidth**; defaults to 4; has no effect unless **textStroke** is set.",
    )
    tickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    tickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **xTickSize** and\n**xTickRotate**.",
    )
    tickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    tickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    tickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    ticks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the text’s anchor point, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the text’s anchor point, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class Cell(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["cell"] = Field(
        default="cell",
        description="A rectangular cell mark. Along with **x** and/or **y**, a **fill** channel is typically specified to encode value as color.\n\nIf neither **x** nor **y** are specified, *data* is assumed to be an array of pairs [[*x₀*, *y₀*], [*x₁*, *y₁*], [*x₂*, *y₂*], …] such that **x** = [*x₀*,\n*x₁*, *x₂*, …] and **y** = [*y₀*, *y₁*, *y₂*, …].\n\nBoth **x** and **y** should be ordinal; if only **x** is quantitative (or temporal), use a barX mark; if only **y** is quantitative, use a barY mark; if both are quantitative, use a rect mark.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the cell; an optional ordinal channel typically bound to the *x* scale. If not specified, the cell spans the horizontal extent of the frame; otherwise the *x* scale must be a *band* scale.\n\nIf *x* represents quantitative or temporal values, use a barX mark instead; if *y* is also quantitative or temporal, use a rect mark.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the cell; an optional ordinal channel typically bound to the *y* scale. If not specified, the cell spans the vertical extent of the frame; otherwise the *y* scale must be a *band* scale.\n\nIf *y* represents quantitative or temporal values, use a barY mark instead; if *x* is also quantitative or temporal, use a rect mark.",
    )


class CellX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["cellX"] = Field(
        default="cellX",
        description="Like cell, but **x** defaults to the zero-based index [0, 1, 2, …], and if\n**stroke** is not a channel, **fill** defaults to the identity function, assuming that *data* = [*x₀*, *x₁*, *x₂*, …].",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the cell; an optional ordinal channel typically bound to the *x* scale. If not specified, the cell spans the horizontal extent of the frame; otherwise the *x* scale must be a *band* scale.\n\nIf *x* represents quantitative or temporal values, use a barX mark instead; if *y* is also quantitative or temporal, use a rect mark.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the cell; an optional ordinal channel typically bound to the *y* scale. If not specified, the cell spans the vertical extent of the frame; otherwise the *y* scale must be a *band* scale.\n\nIf *y* represents quantitative or temporal values, use a barY mark instead; if *x* is also quantitative or temporal, use a rect mark.",
    )


class CellY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["cellY"] = Field(
        default="cellY",
        description="Like cell, but **y** defaults to the zero-based index [0, 1, 2, …], and if\n**stroke** is not a channel, **fill** defaults to the identity function, assuming that *data* = [*y₀*, *y₁*, *y₂*, …].",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the cell; an optional ordinal channel typically bound to the *x* scale. If not specified, the cell spans the horizontal extent of the frame; otherwise the *x* scale must be a *band* scale.\n\nIf *x* represents quantitative or temporal values, use a barX mark instead; if *y* is also quantitative or temporal, use a rect mark.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the cell; an optional ordinal channel typically bound to the *y* scale. If not specified, the cell spans the vertical extent of the frame; otherwise the *y* scale must be a *band* scale.\n\nIf *y* represents quantitative or temporal values, use a barY mark instead; if *x* is also quantitative or temporal, use a rect mark.",
    )


class Circle(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for dots distributed horizontally at the top of the frame:\n\n```js Plot.dot(data, {x: "date", frameAnchor: "top"}) ```',
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["circle"] = Field(
        default="circle",
        description="Like dot, except that the **symbol** option is set to *circle*.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        float_aliased
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The radius of dots; either a channel or constant. When a number, it is interpreted as a constant radius in pixels. Otherwise it is interpreted as a channel, typically bound to the *r* channel, which defaults to the *sqrt* type for proportional symbols. The radius defaults to 4.5 pixels when using the **symbol** channel, and otherwise 3 pixels. Dots with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        float_aliased
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle of dots in degrees clockwise; either a channel or a constant. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel. Defaults to 0°, pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    symbol: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | Literal[
            "asterisk",
            "circle",
            "cross",
            "diamond",
            "diamond2",
            "hexagon",
            "plus",
            "square",
            "square2",
            "star",
            "times",
            "triangle",
            "triangle2",
            "wye",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The categorical symbol; either a channel or a constant. A constant symbol can be specified by a valid symbol name such as *star*, or a symbol object (implementing the draw method); otherwise it is interpreted as a channel. Defaults to *circle* for the **dot** mark, and *hexagon* for the\n**hexagon** mark.\n\nIf the **symbol** channel’s values are all symbols, symbol names, or nullish, the channel is unscaled (values are interpreted literally); otherwise, the channel is bound to the *symbol* scale.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the dot’s center, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the dot’s center, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class Contour(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    height: float_aliased | str | None = Field(
        default=None,
        description="The height (number of rows) of the grid, in actual pixels.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    interpolate: (
        Literal["none", "linear", "nearest", "barycentric", "random-walk"] | str | None
    ) = Field(
        default=None,
        description="The spatial interpolation method; one of:\n\n- *none* - do not perform interpolation (the default), maps samples to single bins\n- *linear* - apply proportional linear interpolation across adjacent bins\n- *nearest* - assign each pixel to the closest sample’s value (Voronoi diagram)\n- *barycentric* - apply barycentric interpolation over the Delaunay triangulation\n- *random-walk* - apply a random walk from each pixel, stopping when near a sample",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["contour"] = Field(
        default="contour",
        description='A contour mark that draws isolines to delineate regions above and below a particular continuous value. It is often used to convey densities as a height field. The special column name "density" can be used to map density values to the fill or stroke options.',
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    pad: float_aliased | str | None = Field(
        default=None,
        description="The bin padding, one of 1 (default) to include extra padding for the final bin, or 0 to make the bins flush with the maximum domain value.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pixelSize: float_aliased | str | None = Field(
        default=None,
        description="The effective screen size of a raster pixel, used to determine the height and width of the raster from the frame’s dimensions; defaults to 1.",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    thresholds: float_aliased | list[float_aliased] | str | None = Field(
        default=None,
        description="The number of contour thresholds to subdivide the domain into discrete level sets; defaults to 10. One of:\n\n- a count representing the desired number of bins\n- an array of *n* threshold values for *n* - 1 bins",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    width: float_aliased | str | None = Field(
        default=None,
        description="The width (number of columns) of the grid, in actual pixels.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale. Domain values are binned into a grid with *width* horizontal bins.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale. Domain values are binned into a grid with *height* vertical bins.",
    )


class DelaunayLink(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["delaunayLink"] = Field(
        default="delaunayLink",
        description="A mark that draws links for each edge of the Delaunay triangulation of points given by the **x** and **y** channels. Like the link mark, except that **x1**, **y1**, **x2**, and **y2** are derived automatically from **x** and **y**. When an aesthetic channel is specified (such as\n**stroke** or **strokeWidth**), the link inherits the corresponding channel value from one of its two endpoints arbitrarily.\n\nIf **z** is specified, the input points are grouped by *z*, producing a separate Delaunay triangulation for each group.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping to produce multiple (possibly overlapping) triangulations.",
    )


class DelaunayMesh(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["delaunayMesh"] = Field(
        default="delaunayMesh",
        description="A mark that draws a mesh of the Delaunay triangulation of the points given by the **x** and **y** channels. The **stroke** option defaults to _currentColor_, and the **strokeOpacity** defaults to 0.2; the **fill** option is not supported. When an aesthetic channel is specified (such as\n**stroke** or **strokeWidth**), the mesh inherits the corresponding channel value from one of its constituent points arbitrarily.\n\nIf **z** is specified, the input points are grouped by *z*, producing a separate Delaunay triangulation for each group.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping to produce multiple (possibly overlapping) triangulations.",
    )


class DenseLine(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description='The fill, typically bound to the *color* scale. Can be specified as a constant or a channel based on the input data.  Use the special value `"density"` to map computed density values to pixel colors. Use an aggregate expression to instead visualize an aggregate value per raster bin. If fill is set to a constant color or to a non-aggregate field, opacity will be used to convey densities. If a non-aggregate (group by) field is provided, multiple rasters are created with a unique categorical color per layer.',
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description='The opacity, typically bound to the *opacity* scale. Can be specified as a constant or a channel based on the input data. Use the special value `"density"` to map computed density values to opacity. Use an aggregate expression to instead visualize an aggregate value per raster bin.',
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    height: float_aliased | str | None = Field(
        default=None,
        description="The height (number of rows) of the grid, in actual pixels.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    imageRendering: str | None = Field(
        default=None,
        description="The [image-rendering attribute][1]; defaults to *auto* (bilinear). The option may be set to *pixelated* to disable bilinear interpolation for a sharper image; however, note that this is not supported in WebKit.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/image-rendering",
    )
    interpolate: (
        Literal["none", "linear", "nearest", "barycentric", "random-walk"] | str | None
    ) = Field(
        default=None,
        description="The spatial interpolation method; one of:\n\n- *none* - do not perform interpolation (the default), maps samples to single bins\n- *linear* - apply proportional linear interpolation across adjacent bins\n- *nearest* - assign each pixel to the closest sample’s value (Voronoi diagram)\n- *barycentric* - apply barycentric interpolation over the Delaunay triangulation\n- *random-walk* - apply a random walk from each pixel, stopping when near a sample",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["denseLine"] = Field(
        default="denseLine",
        description='A denseLine mark that plots line densities rather than point densities. The mark forms a binned raster grid and "draws" straight lines into it. To avoid over-weighting steep lines, by default each drawn series is normalized on a per-column basis to approximate arc length normalization. The values for each series are aggregated to form the line density, which is then drawn as an image similar to the raster mark.',
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    normalize: bool | str | None = Field(
        default=None,
        description="Flag to perform approximate arc length normalization of line segments to prevent artifacts due to overcounting steep lines. Defaults to `true`.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    pad: float_aliased | str | None = Field(
        default=None,
        description="The bin padding, one of 1 (default) to include extra padding for the final bin, or 0 to make the bins flush with the maximum domain value.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pixelSize: float_aliased | str | None = Field(
        default=None,
        description="The effective screen size of a raster pixel, used to determine the height and width of the raster from the frame’s dimensions; defaults to 1.",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    width: float_aliased | str | None = Field(
        default=None,
        description="The width (number of columns) of the grid, in actual pixels.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale. Domain values are binned into a grid with *width* horizontal bins.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale. Domain values are binned into a grid with *height* vertical bins.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A ordinal channel for grouping data into series to be drawn as separate lines.",
    )


class Density(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for dots distributed horizontally at the top of the frame:\n\n```js Plot.dot(data, {x: "date", frameAnchor: "top"}) ```',
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    height: float_aliased | str | None = Field(
        default=None,
        description="The height (number of rows) of the grid, in actual pixels.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    interpolate: (
        Literal["none", "linear", "nearest", "barycentric", "random-walk"] | str | None
    ) = Field(
        default=None,
        description="The spatial interpolation method; one of:\n\n- *none* - do not perform interpolation (the default), maps samples to single bins\n- *linear* - apply proportional linear interpolation across adjacent bins\n- *nearest* - assign each pixel to the closest sample’s value (Voronoi diagram)\n- *barycentric* - apply barycentric interpolation over the Delaunay triangulation\n- *random-walk* - apply a random walk from each pixel, stopping when near a sample",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["density"] = Field(
        default="density",
        description='A 2D density mark that shows smoothed point cloud densities along two dimensions. The mark bins the data, counts the number of records that fall into each bin, and smooths the resulting counts, then plots the smoothed distribution, by default using a circular dot mark. The density mark calculates density values that can be mapped to encoding channels such as fill or r using the special field name "density".\n\nSet the *type* property to use a different base mark type.',
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    pad: float_aliased | str | None = Field(
        default=None,
        description="The bin padding, one of 1 (default) to include extra padding for the final bin, or 0 to make the bins flush with the maximum domain value.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pixelSize: float_aliased | str | None = Field(
        default=None,
        description="The effective screen size of a raster pixel, used to determine the height and width of the raster from the frame’s dimensions; defaults to 1.",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        float_aliased
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The radius of dots; either a channel or constant. When a number, it is interpreted as a constant radius in pixels. Otherwise it is interpreted as a channel, typically bound to the *r* channel, which defaults to the *sqrt* type for proportional symbols. The radius defaults to 4.5 pixels when using the **symbol** channel, and otherwise 3 pixels. Dots with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        float_aliased
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle of dots in degrees clockwise; either a channel or a constant. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel. Defaults to 0°, pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    symbol: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | Literal[
            "asterisk",
            "circle",
            "cross",
            "diamond",
            "diamond2",
            "hexagon",
            "plus",
            "square",
            "square2",
            "star",
            "times",
            "triangle",
            "triangle2",
            "wye",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The categorical symbol; either a channel or a constant. A constant symbol can be specified by a valid symbol name such as *star*, or a symbol object (implementing the draw method); otherwise it is interpreted as a channel. Defaults to *circle* for the **dot** mark, and *hexagon* for the\n**hexagon** mark.\n\nIf the **symbol** channel’s values are all symbols, symbol names, or nullish, the channel is unscaled (values are interpreted literally); otherwise, the channel is bound to the *symbol* scale.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: str | None = Field(
        default=None,
        description="The basic mark type to use to render 2D density values. Defaults to a dot mark; cell and text marks are also supported.",
    )
    width: float_aliased | str | None = Field(
        default=None,
        description="The width (number of columns) of the grid, in actual pixels.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale. Domain values are binned into a grid with *width* horizontal bins.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale. Domain values are binned into a grid with *height* vertical bins.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class DensityX1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels. Defaults to 20.",
    )
    bins: float_aliased | str | None = Field(
        default=None,
        description="The number of bins over which to discretize the data prior to smoothing. Defaults to 1024.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["densityX"] = Field(
        default="densityX",
        description="A densityX mark that visualizes smoothed point cloud densities along the\n**x** dimension. The mark bins the data, counts the number of records that fall into each bin, smooths the resulting counts, and then plots the smoothed distribution, by default using an areaX mark.\n\nSet the *type* property to use a different base mark type.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    normalize: bool | str | None = Field(
        default=None,
        description="Normalization method for density estimates. If `false` or `'none'` (the default), the density estimates are smoothed weighted counts. If `true` or `'sum'`, density estimates are divided by the sum of the total point mass. If `'max'`, estimates are divided by the maximum smoothed value.",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stack: bool | str | None = Field(
        default=None,
        description="Flag indicating if densities should be stacked. Defaults to false.",
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: Literal["areaX"] = Field(
        default="areaX",
        description="The basic mark type to use to render 1D density values. Defaults to an areaX mark; lineX, dotX, and textX marks are also supported.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate areas; defaults to **fill** if a channel, or\n**stroke** if a channel.",
    )


class DensityX2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels. Defaults to 20.",
    )
    bins: float_aliased | str | None = Field(
        default=None,
        description="The number of bins over which to discretize the data prior to smoothing. Defaults to 1024.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        str
        | Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*\n- *auto* (default) - like *linear*, but use the (possibly spherical) projection, if any\n\nThe *auto* curve is typically used in conjunction with a spherical projection to interpolate along geodesics.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["densityX"] = Field(
        default="densityX",
        description="A densityX mark that visualizes smoothed point cloud densities along the\n**x** dimension. The mark bins the data, counts the number of records that fall into each bin, smooths the resulting counts, and then plots the smoothed distribution, by default using an areaX mark.\n\nSet the *type* property to use a different base mark type.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    normalize: bool | str | None = Field(
        default=None,
        description="Normalization method for density estimates. If `false` or `'none'` (the default), the density estimates are smoothed weighted counts. If `true` or `'sum'`, density estimates are divided by the sum of the total point mass. If `'max'`, estimates are divided by the maximum smoothed value.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: Literal["lineX"] = Field(
        default="lineX",
        description="The basic mark type to use to render 1D density values. Defaults to an areaX mark; lineX, dotX, and textX marks are also supported.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate lines. If not specified, it defaults to\n**fill** if a channel, or **stroke** if a channel.",
    )


class DensityX3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels. Defaults to 20.",
    )
    bins: float_aliased | str | None = Field(
        default=None,
        description="The number of bins over which to discretize the data prior to smoothing. Defaults to 1024.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for dots distributed horizontally at the top of the frame:\n\n```js Plot.dot(data, {x: "date", frameAnchor: "top"}) ```',
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["densityX"] = Field(
        default="densityX",
        description="A densityX mark that visualizes smoothed point cloud densities along the\n**x** dimension. The mark bins the data, counts the number of records that fall into each bin, smooths the resulting counts, and then plots the smoothed distribution, by default using an areaX mark.\n\nSet the *type* property to use a different base mark type.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    normalize: bool | str | None = Field(
        default=None,
        description="Normalization method for density estimates. If `false` or `'none'` (the default), the density estimates are smoothed weighted counts. If `true` or `'sum'`, density estimates are divided by the sum of the total point mass. If `'max'`, estimates are divided by the maximum smoothed value.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        float_aliased
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The radius of dots; either a channel or constant. When a number, it is interpreted as a constant radius in pixels. Otherwise it is interpreted as a channel, typically bound to the *r* channel, which defaults to the *sqrt* type for proportional symbols. The radius defaults to 4.5 pixels when using the **symbol** channel, and otherwise 3 pixels. Dots with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        float_aliased
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle of dots in degrees clockwise; either a channel or a constant. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel. Defaults to 0°, pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    symbol: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | Literal[
            "asterisk",
            "circle",
            "cross",
            "diamond",
            "diamond2",
            "hexagon",
            "plus",
            "square",
            "square2",
            "star",
            "times",
            "triangle",
            "triangle2",
            "wye",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The categorical symbol; either a channel or a constant. A constant symbol can be specified by a valid symbol name such as *star*, or a symbol object (implementing the draw method); otherwise it is interpreted as a channel. Defaults to *circle* for the **dot** mark, and *hexagon* for the\n**hexagon** mark.\n\nIf the **symbol** channel’s values are all symbols, symbol names, or nullish, the channel is unscaled (values are interpreted literally); otherwise, the channel is bound to the *symbol* scale.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: Literal["dotX"] = Field(
        default="dotX",
        description="The basic mark type to use to render 1D density values. Defaults to an areaX mark; lineX, dotX, and textX marks are also supported.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the dot’s center, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class DensityX4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels. Defaults to 20.",
    )
    bins: float_aliased | str | None = Field(
        default=None,
        description="The number of bins over which to discretize the data prior to smoothing. Defaults to 1024.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y**, along with\n**textAnchor** and **lineAnchor**, based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*, *bottom-left*), or the\n*middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    lineAnchor: str | None = Field(
        default=None,
        description="The line anchor controls how text is aligned (typically vertically) relative to its anchor point; it is one of *top*, *bottom*, or *middle*. If the frame anchor is *top*, *top-left*, or *top-right*, the default line anchor is *top*; if the frame anchor is *bottom*, *bottom-right*, or\n*bottom-left*, the default is *bottom*; otherwise it is *middle*.",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["densityX"] = Field(
        default="densityX",
        description="A densityX mark that visualizes smoothed point cloud densities along the\n**x** dimension. The mark bins the data, counts the number of records that fall into each bin, smooths the resulting counts, and then plots the smoothed distribution, by default using an areaX mark.\n\nSet the *type* property to use a different base mark type.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    normalize: bool | str | None = Field(
        default=None,
        description="Normalization method for density estimates. If `false` or `'none'` (the default), the density estimates are smoothed weighted counts. If `true` or `'sum'`, density estimates are divided by the sum of the total point mass. If `'max'`, estimates are divided by the maximum smoothed value.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle in degrees clockwise; a constant or a channel; defaults to 0°. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    text: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The text contents channel, possibly with line breaks (\\n, \\r\\n, or \\r). If not specified, defaults to the zero-based index [0, 1, 2, …].",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: Literal["textX"] = Field(
        default="textX",
        description="The basic mark type to use to render 1D density values. Defaults to an areaX mark; lineX, dotX, and textX marks are also supported.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the text’s anchor point, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class DensityY1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels. Defaults to 20.",
    )
    bins: float_aliased | str | None = Field(
        default=None,
        description="The number of bins over which to discretize the data prior to smoothing. Defaults to 1024.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["densityY"] = Field(
        default="densityY",
        description="A densityY mark that visualizes smoothed point cloud densities along the\n**y** dimension. The mark bins the data, counts the number of records that fall into each bin, smooths the resulting counts, and then plots the smoothed distribution, by default using an areaY mark.\n\nSet the *type* property to use a different base mark type.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    normalize: bool | str | None = Field(
        default=None,
        description="Normalization method for density estimates. If `false` or `'none'` (the default), the density estimates are smoothed weighted counts. If `true` or `'sum'`, density estimates are divided by the sum of the total point mass. If `'max'`, estimates are divided by the maximum smoothed value.",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stack: bool | str | None = Field(
        default=None,
        description="Flag indicating if densities should be stacked. Defaults to false.",
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: Literal["areaY"] = Field(
        default="areaY",
        description="The basic mark type to use to render 1D density values. Defaults to an areaY mark; lineY, dot, and text marks are also supported.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate areas; defaults to **fill** if a channel, or\n**stroke** if a channel.",
    )


class DensityY2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels. Defaults to 20.",
    )
    bins: float_aliased | str | None = Field(
        default=None,
        description="The number of bins over which to discretize the data prior to smoothing. Defaults to 1024.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        str
        | Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*\n- *auto* (default) - like *linear*, but use the (possibly spherical) projection, if any\n\nThe *auto* curve is typically used in conjunction with a spherical projection to interpolate along geodesics.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["densityY"] = Field(
        default="densityY",
        description="A densityY mark that visualizes smoothed point cloud densities along the\n**y** dimension. The mark bins the data, counts the number of records that fall into each bin, smooths the resulting counts, and then plots the smoothed distribution, by default using an areaY mark.\n\nSet the *type* property to use a different base mark type.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    normalize: bool | str | None = Field(
        default=None,
        description="Normalization method for density estimates. If `false` or `'none'` (the default), the density estimates are smoothed weighted counts. If `true` or `'sum'`, density estimates are divided by the sum of the total point mass. If `'max'`, estimates are divided by the maximum smoothed value.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: Literal["lineY"] = Field(
        default="lineY",
        description="The basic mark type to use to render 1D density values. Defaults to an areaY mark; lineY, dot, and text marks are also supported.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate lines. If not specified, it defaults to\n**fill** if a channel, or **stroke** if a channel.",
    )


class DensityY3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels. Defaults to 20.",
    )
    bins: float_aliased | str | None = Field(
        default=None,
        description="The number of bins over which to discretize the data prior to smoothing. Defaults to 1024.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for dots distributed horizontally at the top of the frame:\n\n```js Plot.dot(data, {x: "date", frameAnchor: "top"}) ```',
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["densityY"] = Field(
        default="densityY",
        description="A densityY mark that visualizes smoothed point cloud densities along the\n**y** dimension. The mark bins the data, counts the number of records that fall into each bin, smooths the resulting counts, and then plots the smoothed distribution, by default using an areaY mark.\n\nSet the *type* property to use a different base mark type.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    normalize: bool | str | None = Field(
        default=None,
        description="Normalization method for density estimates. If `false` or `'none'` (the default), the density estimates are smoothed weighted counts. If `true` or `'sum'`, density estimates are divided by the sum of the total point mass. If `'max'`, estimates are divided by the maximum smoothed value.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        float_aliased
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The radius of dots; either a channel or constant. When a number, it is interpreted as a constant radius in pixels. Otherwise it is interpreted as a channel, typically bound to the *r* channel, which defaults to the *sqrt* type for proportional symbols. The radius defaults to 4.5 pixels when using the **symbol** channel, and otherwise 3 pixels. Dots with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        float_aliased
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle of dots in degrees clockwise; either a channel or a constant. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel. Defaults to 0°, pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    symbol: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | Literal[
            "asterisk",
            "circle",
            "cross",
            "diamond",
            "diamond2",
            "hexagon",
            "plus",
            "square",
            "square2",
            "star",
            "times",
            "triangle",
            "triangle2",
            "wye",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The categorical symbol; either a channel or a constant. A constant symbol can be specified by a valid symbol name such as *star*, or a symbol object (implementing the draw method); otherwise it is interpreted as a channel. Defaults to *circle* for the **dot** mark, and *hexagon* for the\n**hexagon** mark.\n\nIf the **symbol** channel’s values are all symbols, symbol names, or nullish, the channel is unscaled (values are interpreted literally); otherwise, the channel is bound to the *symbol* scale.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: Literal["dot", "dotY", "circle", "hexagon"] = Field(
        ...,
        description="The basic mark type to use to render 1D density values. Defaults to an areaY mark; lineY, dot, and text marks are also supported.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the dot’s center, typically bound to the *x* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class DensityY4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels. Defaults to 20.",
    )
    bins: float_aliased | str | None = Field(
        default=None,
        description="The number of bins over which to discretize the data prior to smoothing. Defaults to 1024.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y**, along with\n**textAnchor** and **lineAnchor**, based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*, *bottom-left*), or the\n*middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    lineAnchor: str | None = Field(
        default=None,
        description="The line anchor controls how text is aligned (typically vertically) relative to its anchor point; it is one of *top*, *bottom*, or *middle*. If the frame anchor is *top*, *top-left*, or *top-right*, the default line anchor is *top*; if the frame anchor is *bottom*, *bottom-right*, or\n*bottom-left*, the default is *bottom*; otherwise it is *middle*.",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["densityY"] = Field(
        default="densityY",
        description="A densityY mark that visualizes smoothed point cloud densities along the\n**y** dimension. The mark bins the data, counts the number of records that fall into each bin, smooths the resulting counts, and then plots the smoothed distribution, by default using an areaY mark.\n\nSet the *type* property to use a different base mark type.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    normalize: bool | str | None = Field(
        default=None,
        description="Normalization method for density estimates. If `false` or `'none'` (the default), the density estimates are smoothed weighted counts. If `true` or `'sum'`, density estimates are divided by the sum of the total point mass. If `'max'`, estimates are divided by the maximum smoothed value.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle in degrees clockwise; a constant or a channel; defaults to 0°. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    text: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The text contents channel, possibly with line breaks (\\n, \\r\\n, or \\r). If not specified, defaults to the zero-based index [0, 1, 2, …].",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: Literal["text", "textY"] = Field(
        ...,
        description="The basic mark type to use to render 1D density values. Defaults to an areaY mark; lineY, dot, and text marks are also supported.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the text’s anchor point, typically bound to the *x* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class Dot(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for dots distributed horizontally at the top of the frame:\n\n```js Plot.dot(data, {x: "date", frameAnchor: "top"}) ```',
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["dot"] = Field(
        default="dot",
        description="A dot mark that draws circles, or other symbols, as in a scatterplot.\n\nIf either **x** or **y** is not specified, the default is determined by the\n**frameAnchor** option. If none of **x**, **y**, and **frameAnchor** are specified, *data* is assumed to be an array of pairs [[*x₀*, *y₀*], [*x₁*,\n*y₁*], [*x₂*, *y₂*], …] such that **x** = [*x₀*, *x₁*, *x₂*, …] and **y** = [*y₀*, *y₁*, *y₂*, …].\n\nDots are sorted by descending radius **r** by default to mitigate overplotting; set the **sort** option to null to draw them in input order.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        float_aliased
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The radius of dots; either a channel or constant. When a number, it is interpreted as a constant radius in pixels. Otherwise it is interpreted as a channel, typically bound to the *r* channel, which defaults to the *sqrt* type for proportional symbols. The radius defaults to 4.5 pixels when using the **symbol** channel, and otherwise 3 pixels. Dots with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        float_aliased
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle of dots in degrees clockwise; either a channel or a constant. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel. Defaults to 0°, pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    symbol: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | Literal[
            "asterisk",
            "circle",
            "cross",
            "diamond",
            "diamond2",
            "hexagon",
            "plus",
            "square",
            "square2",
            "star",
            "times",
            "triangle",
            "triangle2",
            "wye",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The categorical symbol; either a channel or a constant. A constant symbol can be specified by a valid symbol name such as *star*, or a symbol object (implementing the draw method); otherwise it is interpreted as a channel. Defaults to *circle* for the **dot** mark, and *hexagon* for the\n**hexagon** mark.\n\nIf the **symbol** channel’s values are all symbols, symbol names, or nullish, the channel is unscaled (values are interpreted literally); otherwise, the channel is bound to the *symbol* scale.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the dot’s center, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the dot’s center, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class DotX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for dots distributed horizontally at the top of the frame:\n\n```js Plot.dot(data, {x: "date", frameAnchor: "top"}) ```',
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="An interval (such as *day* or a number), to transform **y** values to the middle of the interval.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["dotX"] = Field(
        default="dotX",
        description="Like dot, except that **x** defaults to the identity function, assuming that\n*data* = [*x₀*, *x₁*, *x₂*, …].\n\nIf an **interval** is specified, such as *day*, **y** is transformed to the middle of the interval.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        float_aliased
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The radius of dots; either a channel or constant. When a number, it is interpreted as a constant radius in pixels. Otherwise it is interpreted as a channel, typically bound to the *r* channel, which defaults to the *sqrt* type for proportional symbols. The radius defaults to 4.5 pixels when using the **symbol** channel, and otherwise 3 pixels. Dots with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        float_aliased
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle of dots in degrees clockwise; either a channel or a constant. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel. Defaults to 0°, pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    symbol: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | Literal[
            "asterisk",
            "circle",
            "cross",
            "diamond",
            "diamond2",
            "hexagon",
            "plus",
            "square",
            "square2",
            "star",
            "times",
            "triangle",
            "triangle2",
            "wye",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The categorical symbol; either a channel or a constant. A constant symbol can be specified by a valid symbol name such as *star*, or a symbol object (implementing the draw method); otherwise it is interpreted as a channel. Defaults to *circle* for the **dot** mark, and *hexagon* for the\n**hexagon** mark.\n\nIf the **symbol** channel’s values are all symbols, symbol names, or nullish, the channel is unscaled (values are interpreted literally); otherwise, the channel is bound to the *symbol* scale.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the dot’s center, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the dot’s center, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class DotY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for dots distributed horizontally at the top of the frame:\n\n```js Plot.dot(data, {x: "date", frameAnchor: "top"}) ```',
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="An interval (such as *day* or a number), to transform **x** values to the middle of the interval.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["dotY"] = Field(
        default="dotY",
        description="Like dot, except that **y** defaults to the identity function, assuming that\n*data* = [*y₀*, *y₁*, *y₂*, …].\n\nIf an **interval** is specified, such as *day*, **x** is transformed to the middle of the interval.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        float_aliased
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The radius of dots; either a channel or constant. When a number, it is interpreted as a constant radius in pixels. Otherwise it is interpreted as a channel, typically bound to the *r* channel, which defaults to the *sqrt* type for proportional symbols. The radius defaults to 4.5 pixels when using the **symbol** channel, and otherwise 3 pixels. Dots with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        float_aliased
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle of dots in degrees clockwise; either a channel or a constant. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel. Defaults to 0°, pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    symbol: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | Literal[
            "asterisk",
            "circle",
            "cross",
            "diamond",
            "diamond2",
            "hexagon",
            "plus",
            "square",
            "square2",
            "star",
            "times",
            "triangle",
            "triangle2",
            "wye",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The categorical symbol; either a channel or a constant. A constant symbol can be specified by a valid symbol name such as *star*, or a symbol object (implementing the draw method); otherwise it is interpreted as a channel. Defaults to *circle* for the **dot** mark, and *hexagon* for the\n**hexagon** mark.\n\nIf the **symbol** channel’s values are all symbols, symbol names, or nullish, the channel is unscaled (values are interpreted literally); otherwise, the channel is bound to the *symbol* scale.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the dot’s center, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the dot’s center, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class ErrorBarX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    ci: float_aliased | str | None = Field(
        default=None, description="The confidence interval in (0, 1); defaults to 0.95."
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["errorbarX"] = Field(
        default="errorbarX",
        description="A mark that draws error bars for a calculated parametric confidence interval for a dependent variable (*x*), potentially grouped by an independent variable (*y*).\n\nThis mark aggregates raw values to produce a [parametric confidence interval][1] of the mean, assuming a normal distribution. To instead visualize pre-computeted interval values or custom aggregations, use a **ruleY** mark with specified **x1** and **x2** channels.\n\nMultiple error bars can be produced by specifying a **z** or **stroke** channel. Set the **marker** option to `'tick'` to add small perpendicular lines at the start and end of the error interval.\n\n[1]: https://en.wikipedia.org/wiki/Normal_distribution#Confidence_intervals",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        ...,
        description="The dependent variable horizontal position channel, typically bound to the\n*x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The independent variable vertical position channel, typically bound to the *y* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data, producing an independent error bar for each group. If not specified, it defaults to **stroke** if a channel.",
    )


class ErrorBarY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    ci: float_aliased | str | None = Field(
        default=None, description="The confidence interval in (0, 1); defaults to 0.95."
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["errorbarY"] = Field(
        default="errorbarY",
        description="A mark that draws error bars for a calculated parametric confidence interval for a dependent variable (*y*), potentially grouped by an independent variable (*x*).\n\nThis mark aggregates raw values to produce a [parametric confidence interval][1] of the mean, assuming a normal distribution. To instead visualize pre-computeted interval values or custom aggregations, use a **ruleX** mark with specified **y1** and **y2** channels.\n\nMultiple error bars can be produced by specifying a **z** or **stroke** channel. Set the **marker** option to `'tick'` to add small perpendicular lines at the start and end of the error interval.\n\n[1]: https://en.wikipedia.org/wiki/Normal_distribution#Confidence_intervals",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The independent variable horizontal position channel, typically bound to the *x* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        ...,
        description="The dependent variable vertical position channel, typically bound to the\n*y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data, producing an independent error bar for each group. If not specified, it defaults to **stroke** if a channel.",
    )


class Frame(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="If null (default), the rectangular outline of the frame is drawn; otherwise the frame is drawn as a line only on the given side, and the\n**rx**, **ry**, **fill**, and **fillOpacity** options are ignored.",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["frame"] = Field(
        default="frame",
        description="Draws a rectangle around the plot’s frame, or if an **anchor** is given, a line on the given side. Useful for visual separation of facets, or in conjunction with axes and grids to fill the frame’s background.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )


class Geo(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    geometry: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A required channel for the geometry to render; defaults to identity, assuming *data* is a GeoJSON object or an iterable of GeoJSON objects.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["geo"] = Field(
        default="geo",
        description="A geo mark. The **geometry** channel, which defaults to the identity function assuming that *data* is a GeoJSON object or an iterable of GeoJSON objects, is projected to the plane using the plot’s top-level\n**projection**.\n\nIf *data* is a GeoJSON feature collection, then the mark’s data is\n*data*.features; if *data* is a GeoJSON geometry collection, then the mark’s data is *data*.geometries; if *data* is some other GeoJSON object, then the mark’s data is the single-element array [*data*].",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The size of Point and MultiPoint geometries, defaulting to a constant 3 pixels. If **r** is a number, it is interpreted as a constant radius in pixels; otherwise it is interpreted as a channel and the effective radius is controlled by the *r* scale, which defaults to a *sqrt* scale such that the visual area of a point is proportional to its associated value.\n\nIf **r** is a channel, geometries will be sorted by descending radius by default, to limit occlusion; use the **sort** transform to control render order. Geometries with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )


class Graticule(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["graticule"] = Field(
        default="graticule",
        description="A geo mark whose *data* is a 10° global graticule. (For use with a spherical **projection** only.)",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )


class GridFx(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The side of the frame on which to place the axis: *top* or *bottom* for horizontal axes (axisX and axisFx) and their associated vertical grids (gridX and gridFx), or *left* or *right* for vertical axes (axisY and axisFY) and their associated horizontal grids (gridY and gridFy).\n\nThe default **anchor** depends on the associated scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nFor grids, the **anchor** also affects the extent of grid lines when the opposite dimension is specified (**x** for gridY and **y** for gridX).",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    color: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fill** and **stroke**; affects the stroke of tick vectors and grid rules, and the fill of tick texts and axis label texts; defaults to *currentColor*.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="Enforces uniformity for data at regular intervals, such as integer values or daily samples. The interval may be one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nThis option sets the internal transform to the given interval’s\n*interval*.floor function. In addition, the default **domain** will align with interval boundaries.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["gridFx"] = Field(
        default="gridFx",
        description="A horizontally-positioned ruleX mark (a vertical line, |) that renders a grid for the *fx* scale. The data defaults to the *fx* scale’s domain; if desired, use the **ticks** option.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fillOpacity** and **strokeOpacity**; affects the stroke opacity of tick vectors and grid rules, and the fill opacity of tick texts and axis label texts; defaults to 1 for axes and 0.1 for grids.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    ticks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the tick; an optional channel bound to the *x* scale. If not specified, the rule will be horizontally centered in the plot’s frame.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Shorthand for specifying both the primary and secondary vertical position of the tick as the bounds of the containing interval; can only be used in conjunction with the **interval** option.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The primary (starting, often bottom) vertical position of the tick; a channel bound to the *y* scale.\n\nIf *y* represents ordinal values, use a tickX mark instead.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The secondary (ending, often top) vertical position of the tick; a channel bound to the *y* scale.\n\nIf *y* represents ordinal values, use a tickX mark instead.",
    )


class GridFy(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The side of the frame on which to place the axis: *top* or *bottom* for horizontal axes (axisX and axisFx) and their associated vertical grids (gridX and gridFx), or *left* or *right* for vertical axes (axisY and axisFY) and their associated horizontal grids (gridY and gridFy).\n\nThe default **anchor** depends on the associated scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nFor grids, the **anchor** also affects the extent of grid lines when the opposite dimension is specified (**x** for gridY and **y** for gridX).",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    color: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fill** and **stroke**; affects the stroke of tick vectors and grid rules, and the fill of tick texts and axis label texts; defaults to *currentColor*.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="Enforces uniformity for data at regular intervals, such as integer values or daily samples. The interval may be one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nThis option sets the internal transform to the given interval’s\n*interval*.floor function. In addition, the default **domain** will align with interval boundaries.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["gridFy"] = Field(
        default="gridFy",
        description="A vertically-positioned ruleY mark (a horizontal line, —) that renders a grid for the *fy* scale. The data defaults to the *fy* scale’s domain; if desired, use the **ticks** option.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fillOpacity** and **strokeOpacity**; affects the stroke opacity of tick vectors and grid rules, and the fill opacity of tick texts and axis label texts; defaults to 1 for axes and 0.1 for grids.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    ticks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Shorthand for specifying both the primary and secondary horizontal position of the tick as the bounds of the containing interval; can only be used in conjunction with the **interval** option.",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The primary (starting, often left) horizontal position of the tick; a channel bound to the *x* scale.\n\nIf *x* represents ordinal values, use a tickY mark instead.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The secondary (ending, often right) horizontal position of the tick; a channel bound to the *x* scale.\n\nIf *x* represents ordinal values, use a tickY mark instead.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the tick; an optional channel bound to the *y* scale. If not specified, the rule will be vertically centered in the plot’s frame.",
    )


class GridX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The side of the frame on which to place the axis: *top* or *bottom* for horizontal axes (axisX and axisFx) and their associated vertical grids (gridX and gridFx), or *left* or *right* for vertical axes (axisY and axisFY) and their associated horizontal grids (gridY and gridFy).\n\nThe default **anchor** depends on the associated scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nFor grids, the **anchor** also affects the extent of grid lines when the opposite dimension is specified (**x** for gridY and **y** for gridX).",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    color: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fill** and **stroke**; affects the stroke of tick vectors and grid rules, and the fill of tick texts and axis label texts; defaults to *currentColor*.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="Enforces uniformity for data at regular intervals, such as integer values or daily samples. The interval may be one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nThis option sets the internal transform to the given interval’s\n*interval*.floor function. In addition, the default **domain** will align with interval boundaries.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["gridX"] = Field(
        default="gridX",
        description="A horizontally-positioned ruleX mark (a vertical line, |) that renders a grid for the *x* scale. The data defaults to tick values sampled from the\n*x* scale’s domain; if desired, use one of the **ticks**, **tickSpacing**, or **interval** options.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fillOpacity** and **strokeOpacity**; affects the stroke opacity of tick vectors and grid rules, and the fill opacity of tick texts and axis label texts; defaults to 1 for axes and 0.1 for grids.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    ticks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the tick; an optional channel bound to the *x* scale. If not specified, the rule will be horizontally centered in the plot’s frame.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Shorthand for specifying both the primary and secondary vertical position of the tick as the bounds of the containing interval; can only be used in conjunction with the **interval** option.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The primary (starting, often bottom) vertical position of the tick; a channel bound to the *y* scale.\n\nIf *y* represents ordinal values, use a tickX mark instead.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The secondary (ending, often top) vertical position of the tick; a channel bound to the *y* scale.\n\nIf *y* represents ordinal values, use a tickX mark instead.",
    )


class GridY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    anchor: str | None = Field(
        default=None,
        description="The side of the frame on which to place the axis: *top* or *bottom* for horizontal axes (axisX and axisFx) and their associated vertical grids (gridX and gridFx), or *left* or *right* for vertical axes (axisY and axisFY) and their associated horizontal grids (gridY and gridFy).\n\nThe default **anchor** depends on the associated scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nFor grids, the **anchor** also affects the extent of grid lines when the opposite dimension is specified (**x** for gridY and **y** for gridX).",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    color: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fill** and **stroke**; affects the stroke of tick vectors and grid rules, and the fill of tick texts and axis label texts; defaults to *currentColor*.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="Enforces uniformity for data at regular intervals, such as integer values or daily samples. The interval may be one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nThis option sets the internal transform to the given interval’s\n*interval*.floor function. In addition, the default **domain** will align with interval boundaries.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["gridY"] = Field(
        default="gridY",
        description="A vertically-positioned ruleY mark (a horizontal line, —) that renders a grid for the *y* scale. The data defaults to tick values sampled from the\n*y* scale’s domain; if desired, use one of the **ticks**, **tickSpacing**, or **interval** options.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="A shorthand for setting both **fillOpacity** and **strokeOpacity**; affects the stroke opacity of tick vectors and grid rules, and the fill opacity of tick texts and axis label texts; defaults to 1 for axes and 0.1 for grids.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    ticks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Shorthand for specifying both the primary and secondary horizontal position of the tick as the bounds of the containing interval; can only be used in conjunction with the **interval** option.",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The primary (starting, often left) horizontal position of the tick; a channel bound to the *x* scale.\n\nIf *x* represents ordinal values, use a tickY mark instead.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The secondary (ending, often right) horizontal position of the tick; a channel bound to the *x* scale.\n\nIf *x* represents ordinal values, use a tickY mark instead.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the tick; an optional channel bound to the *y* scale. If not specified, the rule will be vertically centered in the plot’s frame.",
    )


class Heatmap(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description='The fill, typically bound to the *color* scale. Can be specified as a constant or a channel based on the input data.  Use the special value `"density"` to map computed density values to pixel colors. Use an aggregate expression to instead visualize an aggregate value per raster bin. If fill is set to a constant color or to a non-aggregate field, opacity will be used to convey densities. If a non-aggregate (group by) field is provided, multiple rasters are created with a unique categorical color per layer.',
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description='The opacity, typically bound to the *opacity* scale. Can be specified as a constant or a channel based on the input data. Use the special value `"density"` to map computed density values to opacity. Use an aggregate expression to instead visualize an aggregate value per raster bin.',
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    height: float_aliased | str | None = Field(
        default=None,
        description="The height (number of rows) of the grid, in actual pixels.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    imageRendering: str | None = Field(
        default=None,
        description="The [image-rendering attribute][1]; defaults to *auto* (bilinear). The option may be set to *pixelated* to disable bilinear interpolation for a sharper image; however, note that this is not supported in WebKit.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/image-rendering",
    )
    interpolate: (
        Literal["none", "linear", "nearest", "barycentric", "random-walk"] | str | None
    ) = Field(
        default=None,
        description="The spatial interpolation method; one of:\n\n- *none* - do not perform interpolation (the default), maps samples to single bins\n- *linear* - apply proportional linear interpolation across adjacent bins\n- *nearest* - assign each pixel to the closest sample’s value (Voronoi diagram)\n- *barycentric* - apply barycentric interpolation over the Delaunay triangulation\n- *random-walk* - apply a random walk from each pixel, stopping when near a sample",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["heatmap"] = Field(
        default="heatmap",
        description='Like raster, but with default options for accurate density estimation via smoothing. The *bandwidth* (20), *interpolate* ("linear"), and\n*pixelSize* (2) options are set to produce smoothed density heatmaps.',
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    pad: float_aliased | str | None = Field(
        default=None,
        description="The bin padding, one of 1 (default) to include extra padding for the final bin, or 0 to make the bins flush with the maximum domain value.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pixelSize: float_aliased | str | None = Field(
        default=None,
        description="The effective screen size of a raster pixel, used to determine the height and width of the raster from the frame’s dimensions; defaults to 1.",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    width: float_aliased | str | None = Field(
        default=None,
        description="The width (number of columns) of the grid, in actual pixels.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale. Domain values are binned into a grid with *width* horizontal bins.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale. Domain values are binned into a grid with *height* vertical bins.",
    )


class Hexagon(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for dots distributed horizontally at the top of the frame:\n\n```js Plot.dot(data, {x: "date", frameAnchor: "top"}) ```',
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["hexagon"] = Field(
        default="hexagon",
        description="Like dot, except that the **symbol** option is set to *hexagon*.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        float_aliased
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The radius of dots; either a channel or constant. When a number, it is interpreted as a constant radius in pixels. Otherwise it is interpreted as a channel, typically bound to the *r* channel, which defaults to the *sqrt* type for proportional symbols. The radius defaults to 4.5 pixels when using the **symbol** channel, and otherwise 3 pixels. Dots with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        float_aliased
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle of dots in degrees clockwise; either a channel or a constant. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel. Defaults to 0°, pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    symbol: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | Literal[
            "asterisk",
            "circle",
            "cross",
            "diamond",
            "diamond2",
            "hexagon",
            "plus",
            "square",
            "square2",
            "star",
            "times",
            "triangle",
            "triangle2",
            "wye",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The categorical symbol; either a channel or a constant. A constant symbol can be specified by a valid symbol name such as *star*, or a symbol object (implementing the draw method); otherwise it is interpreted as a channel. Defaults to *circle* for the **dot** mark, and *hexagon* for the\n**hexagon** mark.\n\nIf the **symbol** channel’s values are all symbols, symbol names, or nullish, the channel is unscaled (values are interpreted literally); otherwise, the channel is bound to the *symbol* scale.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the dot’s center, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the dot’s center, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class Hexbin(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    binWidth: float_aliased | str | None = Field(
        default=None,
        description="The distance between centers of neighboring hexagons, in pixels; defaults to 20. If also using a hexgrid mark, use matching **binWidth** values.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description='The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame. For example, for dots distributed horizontally at the top of the frame:\n\n```js Plot.dot(data, {x: "date", frameAnchor: "top"}) ```',
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["hexbin"] = Field(
        default="hexbin",
        description="A hexbin mark that bins **x** and **y** data into a hexagonal grid and visualizes aggregate functions per bin (e.g., count for binned density). Aggregate functions can be used for fill, stroke, or r (radius) options.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    r: (
        float_aliased
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The radius of dots; either a channel or constant. When a number, it is interpreted as a constant radius in pixels. Otherwise it is interpreted as a channel, typically bound to the *r* channel, which defaults to the *sqrt* type for proportional symbols. The radius defaults to 4.5 pixels when using the **symbol** channel, and otherwise 3 pixels. Dots with a nonpositive radius are not drawn.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        float_aliased
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle of dots in degrees clockwise; either a channel or a constant. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel. Defaults to 0°, pointing up.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    symbol: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | Literal[
            "asterisk",
            "circle",
            "cross",
            "diamond",
            "diamond2",
            "hexagon",
            "plus",
            "square",
            "square2",
            "star",
            "times",
            "triangle",
            "triangle2",
            "wye",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The categorical symbol; either a channel or a constant. A constant symbol can be specified by a valid symbol name such as *star*, or a symbol object (implementing the draw method); otherwise it is interpreted as a channel. Defaults to *circle* for the **dot** mark, and *hexagon* for the\n**hexagon** mark.\n\nIf the **symbol** channel’s values are all symbols, symbol names, or nullish, the channel is unscaled (values are interpreted literally); otherwise, the channel is bound to the *symbol* scale.",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    type: str | None = Field(
        default=None,
        description="The basic mark type to use for hex-binned values. Defaults to a hexagon mark; dot and text marks are also supported.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the dot’s center, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the dot’s center, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="How to subdivide bins. If not specified, defaults to the *fill* channel, if any, or the *stroke* channel, if any. If null, bins will not be subdivided.",
    )


class Hexgrid(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    binWidth: float_aliased | str | None = Field(
        default=None,
        description="The distance between centers of neighboring hexagons, in pixels; defaults to 20. Should match the **binWidth** of the hexbin mark.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["hexgrid"] = Field(
        default="hexgrid",
        description="The hexgrid decoration mark complements the hexbin mark, showing the outlines of all hexagons spanning the frame with a default **stroke** of\n*currentColor* and a default **strokeOpacity** of 0.1, similar to the default axis grids.\n\nNote that the **binWidth** option of the hexgrid mark should match that of the hexbin transform. The grid is clipped by the frame. This is a stroke-only mark, and **fill** is not supported; to fill the frame, use the frame mark.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )


class Hull(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["hull"] = Field(
        default="hull",
        description="A mark that draws a convex hull around the points given by the **x** and\n**y** channels. The **stroke** option defaults to _currentColor_ and the\n**fill** option defaults to _none_. When an aesthetic channel is specified (such as **stroke** or **strokeWidth**), the hull inherits the corresponding channel value from one of its constituent points arbitrarily.\n\nIf **z** is specified, the input points are grouped by *z*, producing a separate hull for each group. If **z** is not specified, it defaults to the **fill** channel, if any, or the **stroke** channel, if any.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping to produce multiple (possibly overlapping) triangulations.",
    )


class Image(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    crossOrigin: str | None = Field(
        default=None,
        description="The [cross-origin][1] behavior. See the [Plot.image notebook][2] for details.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/crossorigin [2]: https://observablehq.com/@observablehq/plot-image",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y** based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*,\n*bottom-left*), or the *middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    height: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The image height in pixels. When a number, it is interpreted as a constant radius in pixels; otherwise it is interpreted as a channel. Also sets the default **height**; if neither are set, defaults to 16. Images with a nonpositive height are not drawn.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    imageRendering: str | None = Field(
        default=None,
        description="The [image-rendering attribute][1]; defaults to *auto* (bilinear). The option may be set to *pixelated* to disable bilinear interpolation for a sharper image; however, note that this is not supported in WebKit.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/image-rendering",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["image"] = Field(
        default="image",
        description="An image mark that draws images as in a scatterplot.\n\nIf either **x** or **y** is not specified, the default is determined by the **frameAnchor** option. If none of **x**, **y**, and **frameAnchor** are specified, *data* is assumed to be an array of pairs [[*x₀*, *y₀*], [*x₁*, *y₁*], [*x₂*, *y₂*], …] such that **x** = [*x₀*, *x₁*, *x₂*, …] and **y** = [*y₀*, *y₁*, *y₂*, …].",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    preserveAspectRatio: str | None = Field(
        default=None,
        description="The image [aspect ratio][1]; defaults to *xMidYMid meet*. To crop the image instead of scaling it to fit, use *xMidYMid slice*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio",
    )
    r: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The image clip radius, for circular images. If null (default), images are not clipped; when a number, it is interpreted as a constant in pixels; otherwise it is interpreted as a channel, typically bound to the *r* scale. Also defaults **height** and **width** to twice its value.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle, in degrees clockwise. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    src: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The required image URL (or relative path). If a string that starts with a dot, slash, or URL protocol (*e.g.*, “https:”) it is assumed to be a constant; otherwise it is interpreted as a channel.",
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    width: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The image width in pixels. When a number, it is interpreted as a constant radius in pixels; otherwise it is interpreted as a channel. Also sets the default **height**; if neither are set, defaults to 16. Images with a nonpositive width are not drawn.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the image’s center; typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the image’s center; typically bound to the *y* scale.",
    )


class Line(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        str
        | Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*\n- *auto* (default) - like *linear*, but use the (possibly spherical) projection, if any\n\nThe *auto* curve is typically used in conjunction with a spherical projection to interpolate along geodesics.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["line"] = Field(
        default="line",
        description="A line mark that connects control points.\n\nPoints along the line are connected in input order. If there are multiple series via the **z**, **fill**, or **stroke** channel, series are drawn in input order such that the last series is drawn on top. Typically *data* is already in sorted order, such as chronological for time series; if needed, consider a **sort** transform.\n\nIf any **x** or **y** values are invalid (undefined, null, or NaN), the line will be interrupted, resulting in a break that divides the line shape into multiple segments. If a line segment consists of only a single point, it may appear invisible unless rendered with rounded or square line caps. In addition, some curves such as *cardinal-open* only render a visible segment if it contains multiple points.\n\nVariable aesthetic channels are supported: if the **stroke** is defined as a channel, the line will be broken into contiguous overlapping segments when the stroke color changes; the stroke color will apply to the interval spanning the current data point and the following data point. This behavior also applies to the **fill**, **fillOpacity**, **strokeOpacity**,\n**strokeWidth**, **opacity**, **href**, **title**, and **ariaLabel** channels. When any of these channels are used, setting an explicit **z** channel (possibly to null) is strongly recommended.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required horizontal position channel, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required vertical position channel, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate lines. If not specified, it defaults to\n**fill** if a channel, or **stroke** if a channel.",
    )


class LineX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        str
        | Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*\n- *auto* (default) - like *linear*, but use the (possibly spherical) projection, if any\n\nThe *auto* curve is typically used in conjunction with a spherical projection to interpolate along geodesics.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["lineX"] = Field(
        default="lineX",
        description="Like line, except that **x** defaults to the identity function assuming that *data* = [*x₀*, *x₁*, *x₂*, …] and **y** defaults to the zero-based index [0, 1, 2, …].",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required horizontal position channel, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate lines. If not specified, it defaults to\n**fill** if a channel, or **stroke** if a channel.",
    )


class LineY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        str
        | Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points. One of:\n\n- *basis* - a cubic basis spline (repeating the end points)\n- *basis-open* - an open cubic basis spline\n- *basis-closed* - a closed cubic basis spline\n- *bump-x* - a Bézier curve with horizontal tangents\n- *bump-y* - a Bézier curve with vertical tangents\n- *bundle* - a straightened cubic basis spline (suitable for lines only, not areas)\n- *cardinal* - a cubic cardinal spline (with one-sided differences at the ends)\n- *cardinal-open* - an open cubic cardinal spline\n- *cardinal-closed* - an closed cubic cardinal spline\n- *catmull-rom* - a cubic Catmull–Rom spline (with one-sided differences at the ends)\n- *catmull-rom-open* - an open cubic Catmull–Rom spline\n- *catmull-rom-closed* - a closed cubic Catmull–Rom spline\n- *linear* - a piecewise linear curve (*i.e.*, straight line segments)\n- *linear-closed* - a closed piecewise linear curve (*i.e.*, straight line segments)\n- *monotone-x* - a cubic spline that preserves monotonicity in *x*\n- *monotone-y* - a cubic spline that preserves monotonicity in *y*\n- *natural* - a natural cubic spline\n- *step* - a piecewise constant function where *y* changes at the midpoint of *x*\n- *step-after* - a piecewise constant function where *y* changes after *x*\n- *step-before* - a piecewise constant function where *x* changes after *y*\n- *auto* (default) - like *linear*, but use the (possibly spherical) projection, if any\n\nThe *auto* curve is typically used in conjunction with a spherical projection to interpolate along geodesics.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["lineY"] = Field(
        default="lineY",
        description="Like line, except **y** defaults to the identity function and assumes that *data* = [*y₀*, *y₁*, *y₂*, …] and **x** defaults to the zero-based index [0, 1, 2, …].",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required vertical position channel, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series to be drawn as separate lines. If not specified, it defaults to\n**fill** if a channel, or **stroke** if a channel.",
    )


class Link(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    curve: (
        str
        | Literal[
            "basis",
            "basis-closed",
            "basis-open",
            "bundle",
            "bump-x",
            "bump-y",
            "cardinal",
            "cardinal-closed",
            "cardinal-open",
            "catmull-rom",
            "catmull-rom-closed",
            "catmull-rom-open",
            "linear",
            "linear-closed",
            "monotone-x",
            "monotone-y",
            "natural",
            "step",
            "step-after",
            "step-before",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The curve (interpolation) method for connecting adjacent points.\n\nSince a link has exactly two points, only the following curves (or a custom curve) are recommended: *linear*, *step*, *step-after*, *step-before*,\n*bump-x*, or *bump-y*. Note that the *linear* curve is incapable of showing a fill since a straight line has zero area. For a curved link, use an arrow mark with the **bend** option.\n\nIf the plot uses a spherical **projection**, the default *auto* **curve** will render links as geodesics; to draw a straight line instead, use the\n*linear* **curve**.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["link"] = Field(
        default="link",
        description="A link mark, drawing line segments (curves) connecting pairs of points.\n\nIf the plot uses a spherical **projection**, the default *auto* **curve** will render links as geodesics; to draw a straight line instead, use the\n*linear* **curve**.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tension: float_aliased | str | None = Field(
        default=None,
        description="The tension option only has an effect on bundle, cardinal and Catmull–Rom splines (*bundle*, *cardinal*, *cardinal-open*, *cardinal-closed*,\n*catmull-rom*, *catmull-rom-open*, and *catmull-rom-closed*). For bundle splines, it corresponds to [beta][1]; for cardinal splines, [tension][2]; for Catmull–Rom splines, [alpha][3].\n\n[1]: https://d3js.org/d3-shape/curve#curveBundle_beta [2]: https://d3js.org/d3-shape/curve#curveCardinal_tension [3]: https://d3js.org/d3-shape/curve#curveCatmullRom_alpha",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position, for vertical links; typically bound to the *x* scale; shorthand for setting defaults for both **x1** and **x2**.",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The starting horizontal position; typically bound to the *x* scale; also sets a default for **x2**.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The ending horizontal position; typically bound to the *x* scale; also sets a default for **x1**.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position, for horizontal links; typically bound to the *y* scale; shorthand for setting defaults for both **y1** and **y2**.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The starting vertical position; typically bound to the *y* scale; also sets a default for **y2**.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The ending vertical position; typically bound to the *y* scale; also sets a default for **y1**.",
    )


class Raster(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description='The fill, typically bound to the *color* scale. Can be specified as a constant or a channel based on the input data.  Use the special value `"density"` to map computed density values to pixel colors. Use an aggregate expression to instead visualize an aggregate value per raster bin. If fill is set to a constant color or to a non-aggregate field, opacity will be used to convey densities. If a non-aggregate (group by) field is provided, multiple rasters are created with a unique categorical color per layer.',
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description='The opacity, typically bound to the *opacity* scale. Can be specified as a constant or a channel based on the input data. Use the special value `"density"` to map computed density values to opacity. Use an aggregate expression to instead visualize an aggregate value per raster bin.',
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    height: float_aliased | str | None = Field(
        default=None,
        description="The height (number of rows) of the grid, in actual pixels.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    imageRendering: str | None = Field(
        default=None,
        description="The [image-rendering attribute][1]; defaults to *auto* (bilinear). The option may be set to *pixelated* to disable bilinear interpolation for a sharper image; however, note that this is not supported in WebKit.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/image-rendering",
    )
    interpolate: (
        Literal["none", "linear", "nearest", "barycentric", "random-walk"] | str | None
    ) = Field(
        default=None,
        description="The spatial interpolation method; one of:\n\n- *none* - do not perform interpolation (the default), maps samples to single bins\n- *linear* - apply proportional linear interpolation across adjacent bins\n- *nearest* - assign each pixel to the closest sample’s value (Voronoi diagram)\n- *barycentric* - apply barycentric interpolation over the Delaunay triangulation\n- *random-walk* - apply a random walk from each pixel, stopping when near a sample",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["raster"] = Field(
        default="raster",
        description='A raster mark which renders a raster image from spatial samples. It represents discrete samples in abstract coordinates **x** and **y**; the **fill** and **fillOpacity** channels specify further abstract values (_e.g._, height in a topographic map) to be spatially interpolated to produce an image.\n\nThe **x** and **y** data domains are binned into the cells ("pixels") of a raster grid, typically with an aggregate function evaluated over the binned data. The result can be optionally smoothed (blurred).\n\nTo create a smoothed density heatmap, use the heatmap mark, which is a raster mark with different default options.',
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    pad: float_aliased | str | None = Field(
        default=None,
        description="The bin padding, one of 1 (default) to include extra padding for the final bin, or 0 to make the bins flush with the maximum domain value.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pixelSize: float_aliased | str | None = Field(
        default=None,
        description="The effective screen size of a raster pixel, used to determine the height and width of the raster from the frame’s dimensions; defaults to 1.",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    width: float_aliased | str | None = Field(
        default=None,
        description="The width (number of columns) of the grid, in actual pixels.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale. Domain values are binned into a grid with *width* horizontal bins.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale. Domain values are binned into a grid with *height* vertical bins.",
    )


class RasterTile(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    bandwidth: float_aliased | str | None = Field(
        default=None,
        description="The kernel density bandwidth for smoothing, in pixels.",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description='The fill, typically bound to the *color* scale. Can be specified as a constant or a channel based on the input data.  Use the special value `"density"` to map computed density values to pixel colors. Use an aggregate expression to instead visualize an aggregate value per raster bin. If fill is set to a constant color or to a non-aggregate field, opacity will be used to convey densities. If a non-aggregate (group by) field is provided, multiple rasters are created with a unique categorical color per layer.',
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description='The opacity, typically bound to the *opacity* scale. Can be specified as a constant or a channel based on the input data. Use the special value `"density"` to map computed density values to opacity. Use an aggregate expression to instead visualize an aggregate value per raster bin.',
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    height: float_aliased | str | None = Field(
        default=None,
        description="The height (number of rows) of the grid, in actual pixels.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    imageRendering: str | None = Field(
        default=None,
        description="The [image-rendering attribute][1]; defaults to *auto* (bilinear). The option may be set to *pixelated* to disable bilinear interpolation for a sharper image; however, note that this is not supported in WebKit.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/image-rendering",
    )
    interpolate: (
        Literal["none", "linear", "nearest", "barycentric", "random-walk"] | str | None
    ) = Field(
        default=None,
        description="The spatial interpolation method; one of:\n\n- *none* - do not perform interpolation (the default), maps samples to single bins\n- *linear* - apply proportional linear interpolation across adjacent bins\n- *nearest* - assign each pixel to the closest sample’s value (Voronoi diagram)\n- *barycentric* - apply barycentric interpolation over the Delaunay triangulation\n- *random-walk* - apply a random walk from each pixel, stopping when near a sample",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["rasterTile"] = Field(
        default="rasterTile",
        description="An experimental raster mark which performs tiling and prefetching to support more scalable rasters upon panning the domain. Uses a tile size that matches with current width and height, and prefetches data from neighboring tile segments.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    origin: list[float_aliased] | str | None = Field(
        default=None,
        description="The coordinates of the tile origin in the **x** and **y** data domains. Defaults to [0, 0].",
    )
    pad: float_aliased | str | None = Field(
        default=None,
        description="The bin padding, one of 1 (default) to include extra padding for the final bin, or 0 to make the bins flush with the maximum domain value.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pixelSize: float_aliased | str | None = Field(
        default=None,
        description="The effective screen size of a raster pixel, used to determine the height and width of the raster from the frame’s dimensions; defaults to 1.",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    width: float_aliased | str | None = Field(
        default=None,
        description="The width (number of columns) of the grid, in actual pixels.",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel, typically bound to the *x* scale. Domain values are binned into a grid with *width* horizontal bins.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel, typically bound to the *y* scale. Domain values are binned into a grid with *height* vertical bins.",
    )


class Rect(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to convert a continuous value (**x** for rectY, **y** for rectX, or both for rect) into an interval (**x1** and **x2** for rectY, or **y1** and\n**y2** for rectX, or both for rect); one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nSetting this option disables the implicit stack transform (stackX for rectX, or stackY for rectY).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["rect"] = Field(
        default="rect",
        description="A rect mark. The rectangle extends horizontally from **x1** to **x2**, and vertically from **y1** to **y2**. The position channels are often derived with a transform.\n\nWhen **y** extends from zero, for example for a histogram where the height of each rect reflects a count of values, use the rectY mark for an implicit stackY transform; similarly, if **x** extends from zero, use the rectX mark for an implicit stackX transform.\n\nIf an **interval** is specified, then **x1** and **x2** are derived from\n**x**, and **y1** and **y2** are derived from **y**, each representing the lower and upper bound of the containing interval, respectively.\n\nBoth *x* and *y* should be quantitative or temporal; otherwise, use a bar or cell mark.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='The horizontal position (or length/width) channel, typically bound to the\n*x* scale.\n\nIf an **interval** is specified, then **x1** and **x2** are derived from\n**x**, representing the lower and upper bound of the containing interval, respectively. For example, for a vertical bar chart of items sold by day:\n\n```js Plot.rectY(sales, {x: "date", interval: "day", y2: "items"}) ```\n\nIf *x* represents ordinal values, use a bar or cell mark instead.',
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often left) horizontal position channel, typically bound to the *x* scale. Setting this option disables the rectX mark’s implicit stackX transform.\n\nIf *x* represents ordinal values, use a bar or cell mark instead.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often right) horizontal position channel, typically bound to the *x* scale. Setting this option disables the rectX mark’s implicit stackX transform.\n\nIf *x* represents ordinal values, use a bar or cell mark instead.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='The vertical position (or length/height) channel, typically bound to the\n*y* scale.\n\nIf an **interval** is specified, then **y1** and **y2** are derived from\n**y**, representing the lower and upper bound of the containing interval, respectively. For example, for a horizontal bar chart of items sold by day:\n\n```js Plot.rectX(sales, {y: "date", interval: "day", x2: "items"}) ```\n\nIf *y* represents ordinal values, use a bar or cell mark instead.',
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often bottom) vertical position channel, typically bound to the *y* scale. Setting this option disables the rectY mark’s implicit stackY transform.\n\nIf *y* represents ordinal values, use a bar or cell mark instead.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often top) vertical position channel, typically bound to the *y* scale. Setting this option disables the rectY mark’s implicit stackY transform.\n\nIf *y* represents ordinal values, use a bar or cell mark instead.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The **z** channel defines the series of each value in the stack. Used when the **order** is *sum*, *appearance*, *inside-out*, or an explicit array of\n**z** values.",
    )


class RectX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to convert a continuous value (**x** for rectY, **y** for rectX, or both for rect) into an interval (**x1** and **x2** for rectY, or **y1** and\n**y2** for rectX, or both for rect); one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nSetting this option disables the implicit stack transform (stackX for rectX, or stackY for rectY).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["rectX"] = Field(
        default="rectX",
        description="Like rect, but if neither **x1** nor **x2** is specified, an implicit stackX transform is applied to **x**, and if **x** is not specified, it defaults to the identity function, assuming that *data* is an array of numbers [*x₀*, *x₁*, *x₂*, …].",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position (or length/width) channel, typically bound to the\n*x* scale.\n\nIf neither **x1** nor **x2** is specified, an implicit stackX transform is applied and **x** defaults to the identity function, assuming that *data* = [*x₀*, *x₁*, *x₂*, …]. Otherwise, if only one of **x1** or **x2** is specified, the other defaults to **x**, which defaults to zero.",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often left) horizontal position channel, typically bound to the *x* scale. Setting this option disables the rectX mark’s implicit stackX transform.\n\nIf *x* represents ordinal values, use a bar or cell mark instead.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often right) horizontal position channel, typically bound to the *x* scale. Setting this option disables the rectX mark’s implicit stackX transform.\n\nIf *x* represents ordinal values, use a bar or cell mark instead.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='The vertical position (or length/height) channel, typically bound to the\n*y* scale.\n\nIf an **interval** is specified, then **y1** and **y2** are derived from\n**y**, representing the lower and upper bound of the containing interval, respectively. For example, for a horizontal bar chart of items sold by day:\n\n```js Plot.rectX(sales, {y: "date", interval: "day", x2: "items"}) ```\n\nIf *y* represents ordinal values, use a bar or cell mark instead.',
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often bottom) vertical position channel, typically bound to the *y* scale. Setting this option disables the rectY mark’s implicit stackY transform.\n\nIf *y* represents ordinal values, use a bar or cell mark instead.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often top) vertical position channel, typically bound to the *y* scale. Setting this option disables the rectY mark’s implicit stackY transform.\n\nIf *y* represents ordinal values, use a bar or cell mark instead.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The **z** channel defines the series of each value in the stack. Used when the **order** is *sum*, *appearance*, *inside-out*, or an explicit array of\n**z** values.",
    )


class RectY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to convert a continuous value (**x** for rectY, **y** for rectX, or both for rect) into an interval (**x1** and **x2** for rectY, or **y1** and\n**y2** for rectX, or both for rect); one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nSetting this option disables the implicit stack transform (stackX for rectX, or stackY for rectY).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["rectY"] = Field(
        default="rectY",
        description="Like rect, but if neither **y1** nor **y2** is specified, apply an implicit stackY transform is applied to **y**, and if **y** is not specified, it defaults to the identity function, assuming that *data* is an array of numbers [*y₀*, *y₁*, *y₂*, …].",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='The horizontal position (or length/width) channel, typically bound to the\n*x* scale.\n\nIf an **interval** is specified, then **x1** and **x2** are derived from\n**x**, representing the lower and upper bound of the containing interval, respectively. For example, for a vertical bar chart of items sold by day:\n\n```js Plot.rectY(sales, {x: "date", interval: "day", y2: "items"}) ```\n\nIf *x* represents ordinal values, use a bar or cell mark instead.',
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often left) horizontal position channel, typically bound to the *x* scale. Setting this option disables the rectX mark’s implicit stackX transform.\n\nIf *x* represents ordinal values, use a bar or cell mark instead.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often right) horizontal position channel, typically bound to the *x* scale. Setting this option disables the rectX mark’s implicit stackX transform.\n\nIf *x* represents ordinal values, use a bar or cell mark instead.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position (or length/height) channel, typically bound to the\n*y* scale.\n\nIf neither **y1** nor **y2** is specified, an implicit stackY transform is applied and **y** defaults to the identity function, assuming that *data* = [*y₀*, *y₁*, *y₂*, …]. Otherwise, if only one of **y1** or **y2** is specified, the other defaults to **y**, which defaults to zero.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often bottom) vertical position channel, typically bound to the *y* scale. Setting this option disables the rectY mark’s implicit stackY transform.\n\nIf *y* represents ordinal values, use a bar or cell mark instead.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often top) vertical position channel, typically bound to the *y* scale. Setting this option disables the rectY mark’s implicit stackY transform.\n\nIf *y* represents ordinal values, use a bar or cell mark instead.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The **z** channel defines the series of each value in the stack. Used when the **order** is *sum*, *appearance*, *inside-out*, or an explicit array of\n**z** values.",
    )


class RegressionY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    ci: float_aliased | str | None = Field(
        default=None,
        description="The confidence interval in (0, 1), or 0 to hide bands; defaults to 0.95.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["regressionY"] = Field(
        default="regressionY",
        description="A mark that draws [linear regression][1] lines with confidence bands, representing the estimated relation of a dependent variable (*y*) on an independent variable (*x*).\n\nThe linear regression line is fit using the [least squares][2] approach. See Torben Jansen’s [“Linear regression with confidence bands”][3] and [this StatExchange question][4] for details on the confidence interval calculation.\n\nMultiple regressions can be produced by specifying a **z**, **fill**, or\n**stroke** channel.\n\n[1]: https://en.wikipedia.org/wiki/Linear_regression [2]: https://en.wikipedia.org/wiki/Least_squares [3]: https://observablehq.com/@toja/linear-regression-with-confidence-bands [4]: https://stats.stackexchange.com/questions/101318/understanding-shape-and-calculation-of-confidence-bands-in-linear-regression",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    precision: float_aliased | str | None = Field(
        default=None,
        description="The distance in pixels between samples of the confidence band; defaults to 4.",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The independent variable horizontal position channel, typically bound to the *x* scale; defaults to the zero-based index of the data [0, 1, 2, …].",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The dependent variable vertical position channel, typically bound to the\n*y* scale; defaults to identity, assuming that *data* = [*y₀*, *y₁*, *y₂*, …].",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into (possibly stacked) series, producing an independent regression for each group. If not specified, it defaults to **fill** if a channel, or **stroke** if a channel.",
    )


class RuleX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list | None = Field(
        default=None, description="The data source for the mark."
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to convert a continuous value (**y** for ruleX, or **x** for ruleY) into an interval (**y1** and **y2** for ruleX, or **x1** and **x2** for ruleY); one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["ruleX"] = Field(
        default="ruleX",
        description="A horizontally-positioned ruleX mark (a vertical line, |). The **x** channel specifies the rule’s horizontal position and defaults to identity, assuming that *data* = [*x₀*, *x₁*, *x₂*, …]; the optional **y1** and\n**y2** channels specify its vertical extent.\n\nThe ruleX mark is often used to highlight specific *x* values. If *y* represents ordinal values, use a tickX mark instead.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the tick; an optional channel bound to the *x* scale. If not specified, the rule will be horizontally centered in the plot’s frame.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Shorthand for specifying both the primary and secondary vertical position of the tick as the bounds of the containing interval; can only be used in conjunction with the **interval** option.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The primary (starting, often bottom) vertical position of the tick; a channel bound to the *y* scale.\n\nIf *y* represents ordinal values, use a tickX mark instead.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The secondary (ending, often top) vertical position of the tick; a channel bound to the *y* scale.\n\nIf *y* represents ordinal values, use a tickX mark instead.",
    )


class RuleY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list | None = Field(
        default=None, description="The data source for the mark."
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to convert a continuous value (**y** for ruleX, or **x** for ruleY) into an interval (**y1** and **y2** for ruleX, or **x1** and **x2** for ruleY); one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["ruleY"] = Field(
        default="ruleY",
        description="A vertically-positioned ruleY mark (a horizontal line, —). The **y** channel specifies the rule's vertical position and defaults to identity, assuming that *data* = [*y₀*, *y₁*, *y₂*, …]; the optional **x1** and\n**x2** channels specify its horizontal extent.\n\nThe ruleY mark is often used to highlight specific *y* values. If *x* represents ordinal values, use a tickY mark instead.",
    )
    marker: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="Shorthand to set the same default for markerStart, markerMid, and markerEnd; one of:\n\n- a marker name such as *arrow* or *circle*\n- *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerEnd: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the ending point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    markerMid: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for any middle (interior) points of a line segment. If the line segment only has a start and end point, this option has no effect. One of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*\n* a function - a custom marker function; see below",
    )
    markerStart: (
        str
        | bool
        | Literal[
            "arrow",
            "arrow-reverse",
            "dot",
            "circle",
            "circle-fill",
            "circle-stroke",
            "tick",
            "tick-x",
            "tick-y",
        ]
        | None
    ) = Field(
        default=None,
        description="The marker for the starting point of a line segment; one of:\n\n- a marker name such as *arrow* or *circle*\n* *none* (default) - no marker\n* true - alias for *circle-fill*\n* false or null - alias for *none*",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the tick; an optional channel bound to the *x* scale. If not specified, the rule will be horizontally centered in the plot’s frame.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Shorthand for specifying both the primary and secondary vertical position of the tick as the bounds of the containing interval; can only be used in conjunction with the **interval** option.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The primary (starting, often bottom) vertical position of the tick; a channel bound to the *y* scale.\n\nIf *y* represents ordinal values, use a tickX mark instead.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The secondary (ending, often top) vertical position of the tick; a channel bound to the *y* scale.\n\nIf *y* represents ordinal values, use a tickX mark instead.",
    )


class TextX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list | None = Field(
        default=None, description="The data source for the mark."
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y**, along with\n**textAnchor** and **lineAnchor**, based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*, *bottom-left*), or the\n*middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="An interval (such as *day* or a number), to transform **y** values to the middle of the interval.",
    )
    lineAnchor: str | None = Field(
        default=None,
        description="The line anchor controls how text is aligned (typically vertically) relative to its anchor point; it is one of *top*, *bottom*, or *middle*. If the frame anchor is *top*, *top-left*, or *top-right*, the default line anchor is *top*; if the frame anchor is *bottom*, *bottom-right*, or\n*bottom-left*, the default is *bottom*; otherwise it is *middle*.",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["textX"] = Field(
        default="textX",
        description="Like text, but **x** defaults to the identity function, assuming that\n*data* = [*x₀*, *x₁*, *x₂*, …]. If an **interval** is specified, such as\n*day*, **y** is transformed to the middle of the interval.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle in degrees clockwise; a constant or a channel; defaults to 0°. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    text: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The text contents channel, possibly with line breaks (\\n, \\r\\n, or \\r). If not specified, defaults to the zero-based index [0, 1, 2, …].",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position channel specifying the text’s anchor point, typically bound to the *x* scale.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position of the text’s anchor point, typically bound to the\n*y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class TextY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list | None = Field(
        default=None, description="The data source for the mark."
    )
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fontFamily: str | None = Field(
        default=None,
        description="The [font-family][1]; a constant; defaults to the plot’s font family, which is typically [*system-ui*][2].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family [2]: https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
    )
    fontSize: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [font size][1] in pixels; either a constant or a channel; defaults to the plot’s font size, which is typically 10. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",
    )
    fontStyle: str | None = Field(
        default=None,
        description="The [font style][1]; a constant; defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-style",
    )
    fontVariant: str | None = Field(
        default=None,
        description="The [font variant][1]; a constant; if the **text** channel contains numbers or dates, defaults to *tabular-nums* to facilitate comparing numbers; otherwise defaults to the plot’s font style, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
    )
    fontWeight: str | float_aliased | None = Field(
        default=None,
        description="The [font weight][1]; a constant; defaults to the plot’s font weight, which is typically *normal*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight",
    )
    frameAnchor: (
        Literal[
            "middle",
            "top-left",
            "top",
            "top-right",
            "right",
            "bottom-right",
            "bottom",
            "bottom-left",
            "left",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The frame anchor specifies defaults for **x** and **y**, along with\n**textAnchor** and **lineAnchor**, based on the plot’s frame; it may be one of the four sides (*top*, *right*, *bottom*, *left*), one of the four corners (*top-left*, *top-right*, *bottom-right*, *bottom-left*), or the\n*middle* of the frame.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="An interval (such as *day* or a number), to transform **x** values to the middle of the interval.",
    )
    lineAnchor: str | None = Field(
        default=None,
        description="The line anchor controls how text is aligned (typically vertically) relative to its anchor point; it is one of *top*, *bottom*, or *middle*. If the frame anchor is *top*, *top-left*, or *top-right*, the default line anchor is *top*; if the frame anchor is *bottom*, *bottom-right*, or\n*bottom-left*, the default is *bottom*; otherwise it is *middle*.",
    )
    lineHeight: float_aliased | str | None = Field(
        default=None,
        description="The line height in ems; defaults to 1. The line height affects the (typically vertical) separation between adjacent baselines of text, as well as the separation between the text and its anchor point.",
    )
    lineWidth: float_aliased | str | None = Field(
        default=None,
        description="The line width in ems (e.g., 10 for about 20 characters); defaults to infinity, disabling wrapping and clipping.\n\nIf **textOverflow** is null, lines will be wrapped at the specified length. If a line is split at a soft hyphen (\\xad), a hyphen (-) will be displayed at the end of the line. If **textOverflow** is not null, lines will be clipped according to the given strategy.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["textY"] = Field(
        default="textY",
        description="Like text, but **y** defaults to the identity function, assuming that\n*data* = [*y₀*, *y₁*, *y₂*, …]. If an **interval** is specified, such as\n*day*, **x** is transformed to the middle of the interval.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    monospace: bool | str | None = Field(
        default=None,
        description="If true, changes the default **fontFamily** to *monospace*, and uses simplified monospaced text metrics calculations.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rotate: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The rotation angle in degrees clockwise; a constant or a channel; defaults to 0°. When a number, it is interpreted as a constant; otherwise it is interpreted as a channel.",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    text: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The text contents channel, possibly with line breaks (\\n, \\r\\n, or \\r). If not specified, defaults to the zero-based index [0, 1, 2, …].",
    )
    textAnchor: str | None = Field(
        default=None,
        description="The [text anchor][1] controls how text is aligned (typically horizontally) relative to its anchor point; it is one of *start*, *end*, or *middle*. If the frame anchor is *left*, *top-left*, or *bottom-left*, the default text anchor is *start*; if the frame anchor is *right*, *top-right*, or\n*bottom-right*, the default is *end*; otherwise it is *middle*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
    )
    textOverflow: str | None = Field(
        default=None,
        description="How truncate (or wrap) lines of text longer than the given **lineWidth**; one of:\n\n- null (default) - preserve overflowing characters (and wrap if needed)\n- *clip* or *clip-end* - remove characters from the end\n- *clip-start* - remove characters from the start\n- *ellipsis* or *ellipsis-end* - replace characters from the end with an ellipsis (…)\n- *ellipsis-start* - replace characters from the start with an ellipsis (…)\n- *ellipsis-middle* - replace characters from the middle with an ellipsis (…)\n\nIf no **title** was specified, if text requires truncation, a title containing the non-truncated text will be implicitly added.",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position of the text’s anchor point, typically bound to the\n*x* scale.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position channel specifying the text’s anchor point, typically bound to the *y* scale.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="An optional ordinal channel for grouping data into series.",
    )


class WaffleX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    gap: float_aliased | str | None = Field(
        default=None, description="The gap in pixels between cells; defaults to 1."
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to convert a continuous value (**x** for barX, or **y** for barY) into an interval (**x1** and **x2** for barX, or **y1** and **y2** for barY); one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nSetting this option disables the implicit stack transform (stackX for barX, or stackY for barY).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["waffleX"] = Field(
        default="waffleX",
        description="A horizontal waffle mark. The required *x* values should be quantitative, and the optional *y* values should be ordinal.\n\nIf neither **x1** nor **x2** nor **interval** is specified, an implicit stackX transform is applied and **x** defaults to the identity function, assuming that *data* = [*x₀*, *x₁*, *x₂*, …]. Otherwise if an **interval** is specified, then **x1** and **x2** are derived from **x**, representing the lower and upper bound of the containing interval, respectively. Otherwise, if only one of **x1** or **x2** is specified, the other defaults to **x**, which defaults to zero.\n\nThe optional **y** ordinal channel specifies the vertical position; it is typically bound to the *y* scale, which must be a *band* scale. If the\n**y** channel is not specified, the bar will span the vertical extent of the plot’s frame. Because a waffle represents a discrete number of square cells, it may not use all of the available bandwidth.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    multiple: float_aliased | str | None = Field(
        default=None,
        description="The number of cells per row or column; defaults to undefined for automatic.",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    round: bool | str | None = Field(
        default=None, description="If true, round to integers to avoid partial cells."
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    unit: float_aliased | str | None = Field(
        default=None, description="The quantity each cell represents; defaults to 1."
    )
    x: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position (or length/width) channel, typically bound to the\n*x* scale.\n\nIf neither **x1** nor **x2** nor **interval** is specified, an implicit stackX transform is applied and **x** defaults to the identity function, assuming that *data* = [*x₀*, *x₁*, *x₂*, …]. Otherwise if an **interval** is specified, then **x1** and **x2** are derived from **x**, representing the lower and upper bound of the containing interval, respectively. Otherwise, if only one of **x1** or **x2** is specified, the other defaults to **x**, which defaults to zero.",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often left) horizontal position channel, typically bound to the *x* scale. Setting this option disables the implicit stackX transform.\n\nIf *x* represents ordinal values, use a cell mark instead.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often right) horizontal position channel, typically bound to the *x* scale. Setting this option disables the implicit stackX transform.\n\nIf *x* represents ordinal values, use a cell mark instead.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional vertical position of the bar; a ordinal channel typically bound to the *y* scale. If not specified, the bar spans the vertical extent of the frame; otherwise the *y* scale must be a *band* scale.\n\nIf *y* represents quantitative or temporal values, use a rectX mark instead.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The **z** channel defines the series of each value in the stack. Used when the **order** is *sum*, *appearance*, *inside-out*, or an explicit array of\n**z** values.",
    )


class WaffleY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    gap: float_aliased | str | None = Field(
        default=None, description="The gap in pixels between cells; defaults to 1."
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to convert a continuous value (**x** for barX, or **y** for barY) into an interval (**x1** and **x2** for barX, or **y1** and **y2** for barY); one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nSetting this option disables the implicit stack transform (stackX for barX, or stackY for barY).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["waffleY"] = Field(
        default="waffleY",
        description="A vertical waffle mark. The required *y* values should be quantitative, and the optional *x* values should be ordinal.\n\nIf neither **y1** nor **y2** nor **interval** is specified, an implicit stackY transform is applied and **y** defaults to the identity function, assuming that *data* = [*y₀*, *y₁*, *y₂*, …]. Otherwise if an **interval** is specified, then **y1** and **y2** are derived from **y**, representing the lower and upper bound of the containing interval, respectively. Otherwise, if only one of **y1** or **y2** is specified, the other defaults to **y**, which defaults to zero.\n\nThe optional **x** ordinal channel specifies the horizontal position; it is typically bound to the *x* scale, which must be a *band* scale. If the\n**x** channel is not specified, the bar will span the horizontal extent of the plot’s frame. Because a waffle represents a discrete number of square cells, it may not use all of the available bandwidth.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    multiple: float_aliased | str | None = Field(
        default=None,
        description="The number of cells per row or column; defaults to undefined for automatic.",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    round: bool | str | None = Field(
        default=None, description="If true, round to integers to avoid partial cells."
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    unit: float_aliased | str | None = Field(
        default=None, description="The quantity each cell represents; defaults to 1."
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional horizontal position of the bar; a ordinal channel typically bound to the *x* scale. If not specified, the bar spans the horizontal extent of the frame; otherwise the *x* scale must be a *band* scale.\n\nIf *x* represents quantitative or temporal values, use a rectY mark instead.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position (or length/height) channel, typically bound to the\n*y* scale.\n\nIf neither **y1** nor **y2** nor **interval** is specified, an implicit stackY transform is applied and **y** defaults to the identity function, assuming that *data* = [*y₀*, *y₁*, *y₂*, …]. Otherwise if an **interval** is specified, then **y1** and **y2** are derived from **y**, representing the lower and upper bound of the containing interval, respectively. Otherwise, if only one of **y1** or **y2** is specified, the other defaults to **y**, which defaults to zero.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often bottom) vertical position channel, typically bound to the *y* scale. Setting this option disables the implicit stackY transform.\n\nIf *y* represents ordinal values, use a cell mark instead.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often top) horizontal position channel, typically bound to the *y* scale. Setting this option disables the implicit stackY transform.\n\nIf *y* represents ordinal values, use a cell mark instead.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The **z** channel defines the series of each value in the stack. Used when the **order** is *sum*, *appearance*, *inside-out*, or an explicit array of\n**z** values.",
    )


class BarX(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to convert a continuous value (**x** for barX, or **y** for barY) into an interval (**x1** and **x2** for barX, or **y1** and **y2** for barY); one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nSetting this option disables the implicit stack transform (stackX for barX, or stackY for barY).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["barX"] = Field(
        default="barX",
        description="A horizontal bar mark. The required *x* values should be quantitative or temporal, and the optional *y* values should be ordinal.\n\nIf neither **x1** nor **x2** nor **interval** is specified, an implicit stackX transform is applied and **x** defaults to the identity function, assuming that *data* = [*x₀*, *x₁*, *x₂*, …]. Otherwise if an **interval** is specified, then **x1** and **x2** are derived from **x**, representing the lower and upper bound of the containing interval, respectively. Otherwise, if only one of **x1** or **x2** is specified, the other defaults to **x**, which defaults to zero.\n\nThe optional **y** ordinal channel specifies the vertical position; it is typically bound to the *y* scale, which must be a *band* scale. If the\n**y** channel is not specified, the bar will span the vertical extent of the plot’s frame.\n\nIf *y* is quantitative, use the rectX mark instead. If *x* is ordinal, use the cell mark instead.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal position (or length/width) channel, typically bound to the\n*x* scale.\n\nIf neither **x1** nor **x2** nor **interval** is specified, an implicit stackX transform is applied and **x** defaults to the identity function, assuming that *data* = [*x₀*, *x₁*, *x₂*, …]. Otherwise if an **interval** is specified, then **x1** and **x2** are derived from **x**, representing the lower and upper bound of the containing interval, respectively. Otherwise, if only one of **x1** or **x2** is specified, the other defaults to **x**, which defaults to zero.",
    )
    x1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often left) horizontal position channel, typically bound to the *x* scale. Setting this option disables the implicit stackX transform.\n\nIf *x* represents ordinal values, use a cell mark instead.",
    )
    x2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often right) horizontal position channel, typically bound to the *x* scale. Setting this option disables the implicit stackX transform.\n\nIf *x* represents ordinal values, use a cell mark instead.",
    )
    y: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional vertical position of the bar; a ordinal channel typically bound to the *y* scale. If not specified, the bar spans the vertical extent of the frame; otherwise the *y* scale must be a *band* scale.\n\nIf *y* represents quantitative or temporal values, use a rectX mark instead.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The **z** channel defines the series of each value in the stack. Used when the **order** is *sum*, *appearance*, *inside-out*, or an explicit array of\n**z** values.",
    )


class BarY(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description][1]; a constant textual description.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaHidden: str | None = Field(
        default=None,
        description="The [aria-hidden][1] state; a constant indicating whether the element is exposed to an accessibility API.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
    )
    ariaLabel: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [aria-label][1]; a channel specifying short textual labels representing the value in the accessibility tree.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    channels: dict[str, str] | None = Field(
        default=None,
        description="Additional named channels, for example to include in a tooltip. Consists of (channel name, data field name) key-value pairs.",
    )
    clip: str | bool | None = Field(
        default=None,
        description="How to clip the mark; one of:\n\n- *frame* or true - clip to the plot’s frame (inner area)\n- *sphere* - clip to the projected sphere (*e.g.*, front hemisphere)\n- null or false - do not clip\n\nThe *sphere* clip option requires a geographic projection.",
    )
    data: PlotFrom | list = Field(..., description="The data source for the mark.")
    dx: float_aliased | str | None = Field(
        default=None,
        description="The horizontal offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    dy: float_aliased | str | None = Field(
        default=None,
        description="The vertical offset in pixels; a constant option. On low-density screens, an additional 0.5px offset may be applied for crisp edges.",
    )
    facet: str | bool | None = Field(
        default=None,
        description="Whether to enable or disable faceting; one of:\n\n- *auto* (default) - automatically determine if this mark should be faceted\n- *include* (or true) - draw the subset of the mark’s data in the current facet\n- *exclude* - draw the subset of the mark’s data *not* in the current facet\n- *super* - draw this mark in a single frame that covers all facets\n- null (or false) - repeat this mark’s data across all facets (*i.e.*, no faceting)\n\nWhen a mark uses *super* faceting, it is not allowed to use position scales (*x*, *y*, *fx*, or *fy*); *super* faceting is intended for decorations, such as labels and legends.\n\nWhen top-level faceting is used, the default *auto* setting is equivalent to *include* when the mark data is strictly equal to the top-level facet data; otherwise it is equivalent to null. When the *include* or *exclude* facet mode is chosen, the mark data must be parallel to the top-level facet data: the data must have the same length and order. If the data are not parallel, then the wrong data may be shown in each facet. The default\n*auto* therefore requires strict equality (`===`) for safety, and using the facet data as mark data is recommended when using the *exclude* facet mode. (To construct parallel data safely, consider using [*array*.map][1] on the facet data.)\n\nWhen mark-level faceting is used, the default *auto* setting is equivalent to *include*: the mark will be faceted if either the **fx** or **fy** channel option (or both) is specified. The null or false option will disable faceting, while *exclude* draws the subset of the mark’s data *not* in the current facet.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
    )
    facetAnchor: str | None = Field(
        default=None,
        description="How to place the mark with respect to facets; one of:\n\n- null (default for most marks) - display the mark in each non-empty facet\n- *top*, *right*, *bottom*, or *left* - display the mark only in facets on   the given side\n- *top-empty*, *right-empty*, *bottom-empty*, or *left-empty* (default for   axis marks) - display the mark only in facets that have empty space on   the given side: either the margin, or an empty facet\n- *empty* - display the mark in empty facets only",
    )
    fill: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
    )
    fillOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [fill-opacity][1]; a constant number between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
    )
    filter: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="Applies a transform to filter the mark’s index according to the given channel values; only truthy values are retained.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    fx: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The horizontal facet position channel, for mark-level faceting, bound to the *fx* scale.",
    )
    fy: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical facet position channel, for mark-level faceting, bound to the\n*fy* scale.",
    )
    href: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [href][1]; a channel specifying URLs for clickable links. May be used in conjunction with the **target** option to open links in another window.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/href",
    )
    imageFilter: str | None = Field(
        default=None,
        description="A CSS [filter][1]; a constant string used to adjust the rendering of images, such as *blur(5px)*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    insetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    insetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    insetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    insetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    interval: (
        str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="How to convert a continuous value (**x** for barX, or **y** for barY) into an interval (**x1** and **x2** for barX, or **y1** and **y2** for barY); one of:\n\n- a named time interval such as *day* (for date intervals)\n- a number (for number intervals), defining intervals at integer multiples of *n*\n\nSetting this option disables the implicit stack transform (stackX for barX, or stackY for barY).",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four mark margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**; typically defaults to 0, except for axis marks.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The mark’s bottom margin; the minimum distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The mark’s left margin; the minimum distance in pixels between the left edges of the inner and outer plot area.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The mark’s right margin; the minimum distance in pixels between the right edges of the mark’s inner and outer plot area.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The mark’s top margin; the minimum distance in pixels between the top edges of the inner and outer plot area.",
    )
    mark: Literal["barY"] = Field(
        default="barY",
        description="A vertical bar mark. The required *y* values should be quantitative or temporal, and the optional *x* values should be ordinal.\n\nIf neither **y1** nor **y2** nor **interval** is specified, an implicit stackY transform is applied and **y** defaults to the identity function, assuming that *data* = [*y₀*, *y₁*, *y₂*, …]. Otherwise if an **interval** is specified, then **y1** and **y2** are derived from **y**, representing the lower and upper bound of the containing interval, respectively. Otherwise, if only one of **y1** or **y2** is specified, the other defaults to **y**, which defaults to zero.\n\nThe optional **x** ordinal channel specifies the horizontal position; it is typically bound to the *x* scale, which must be a *band* scale. If the\n**x** channel is not specified, the bar will span the horizontal extent of the plot’s frame.\n\nIf *x* is quantitative, use the rectY mark instead. If *y* is ordinal, use the cell mark instead.",
    )
    mixBlendMode: str | None = Field(
        default=None,
        description="The [mix-blend-mode][1]; a constant string specifying how to blend content such as *multiply*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode",
    )
    offset: Literal["center", "normalize", "wiggle"] | str | None = Field(
        default=None,
        description="After stacking, an optional **offset** can be applied to translate and scale stacks, say to produce a streamgraph; defaults to null for a zero baseline (**y** = 0 for stackY, and **x** = 0 for stackX). If the *wiggle* offset is used, the default **order** changes to *inside-out*.",
    )
    opacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally. For faster rendering, prefer the **strokeOpacity** or **fillOpacity** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
    )
    order: (
        str
        | list
        | Literal["value", "x", "y", "z", "sum", "appearance", "inside-out"]
        | str
        | None
    ) = Field(
        default=None,
        description="The order in which stacks are layered; one of:\n\n- null (default) for input order\n- a named stack order method such as *inside-out* or *sum*\n- a field name, for natural order of the corresponding values\n- a function of data, for natural order of the corresponding values\n- an array of explicit **z** values in the desired order\n\nIf the *wiggle* **offset** is used, as for a streamgraph, the default changes to *inside-out*.",
    )
    paintOrder: str | None = Field(
        default=None,
        description="The [paint-order][1]; a constant string specifying the order in which the\n**fill**, **stroke**, and any markers are drawn; defaults to *normal*, which draws the fill, then stroke, then markers; defaults to *stroke* for the text mark to create a “halo” around text to improve legibility.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order",
    )
    pointerEvents: str | None = Field(
        default=None,
        description="The [pointer-events][1] property; a constant string such as *none*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
    )
    reverse: bool | str | None = Field(
        default=None,
        description="Applies a transform to reverse the order of the mark’s index, say for reverse input order.",
    )
    rx: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*x*-radius][1], either in pixels or as a percentage of the rect width. If **rx** is not specified, it defaults to **ry** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
    )
    ry: float_aliased | str | None = Field(
        default=None,
        description="The rounded corner [*y*-radius][1], either in pixels or as a percentage of the rect height. If **ry** is not specified, it defaults to **rx** if present, and otherwise draws square corners.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
    )
    select: (
        Literal[
            "first",
            "last",
            "maxX",
            "maxY",
            "minX",
            "minY",
            "nearest",
            "nearestX",
            "nearestY",
        ]
        | None
    ) = Field(
        default=None,
        description="Applies a filter transform after data is loaded to highlight selected values only. For example, `first` and `last` select the first or last values of series only (using the *z* channel to separate series). Meanwhile, `nearestX` and `nearestY` select the point nearest to the pointer along the *x* or *y* channel dimension. Unlike Mosaic selections, a mark level *select* is internal to the mark only, and does not populate a param or selection value to be shared across clients.\n\nNote that filtering only affects the rendered mark index, not the associated channel values, and has no effect on imputed scale domains.",
    )
    shapeRendering: str | None = Field(
        default=None,
        description="The [shape-rendering][1]; a constant string such as *crispEdges*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
    )
    sort: (
        ChannelDomainSort
        | SortOrder1
        | SortOrder2
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description='Either applies a transform to sort the mark’s index by the specified channel values, or imputes ordinal scale domains from this mark’s channels.\n\nWhen imputing ordinal scale domains from channel values, the **sort** option is an object whose keys are ordinal scale names such as *x* or *fx*, and whose values are channel names such as *y*, *y1*, or *y2*. For example, to impute the *y* scale’s domain from the associated *x* channel values in ascending order:\n\n```js sort: {y: "x"} ```\n\nFor different sort options for different scales, replace the channel name with a *value* object and per-scale options:\n\n```js sort: {y: {value: "-x"}} ```\n\nWhen sorting the mark’s index, the **sort** option is instead one of:\n\n- a channel value definition for sorting given values in ascending order\n- a {value, order} object for sorting given values\n- a {channel, order} object for sorting the named channel’s values',
    )
    stroke: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | str
        | None
    ) = Field(
        default=None,
        description="The [stroke][1]; a constant CSS color string, or a channel typically bound to the *color* scale. If all channel values are valid CSS colors, by default the channel will not be bound to the *color* scale, interpreting the colors literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
    )
    strokeDasharray: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dasharray][1]; a constant number indicating the length in pixels of alternating dashes and gaps, or a constant string of numbers separated by spaces or commas (_e.g._, *10 2* for dashes of 10 pixels separated by gaps of 2 pixels), or *none* (the default) for no dashing\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
    )
    strokeDashoffset: str | float_aliased | None = Field(
        default=None,
        description="The [stroke-dashoffset][1]; a constant indicating the offset in pixels of the first dash along the stroke; defaults to zero.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
    )
    strokeLinecap: str | None = Field(
        default=None,
        description="The [stroke-linecap][1]; a constant specifying how to cap stroked paths, such as *butt*, *round*, or *square*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
    )
    strokeLinejoin: str | None = Field(
        default=None,
        description="The [stroke-linejoin][1]; a constant specifying how to join stroked paths, such as *bevel*, *miter*, *miter-clip*, or *round*.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
    )
    strokeMiterlimit: float_aliased | str | None = Field(
        default=None,
        description="The [stroke-miterlimit][1]; a constant number specifying how to limit the length of *miter* joins on stroked paths.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
    )
    strokeOpacity: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-opacity][1]; a constant between 0 and 1, or a channel typically bound to the *opacity* scale. If all channel values are numbers in [0, 1], by default the channel will not be bound to the *opacity* scale, interpreting the opacities literally.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
    )
    strokeWidth: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The [stroke-width][1]; a constant number in pixels, or a channel.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
    )
    target: str | None = Field(
        default=None,
        description="The [target][1]; a constant string specifying the target window (_e.g._,\n*_blank*) for clickable links; used in conjunction with the **href** option.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target",
    )
    tip: bool | Tip | Literal["x", "y", "xy"] | str | None = Field(
        default=None,
        description="Whether to generate a tooltip for this mark, and any tip options.",
    )
    title: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The title; a channel specifying accessible, short textual descriptions as strings (possibly with newlines). If the tip option is specified, the title will be displayed with an interactive tooltip instead of using the SVG [title element][1].\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
    )
    x: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The optional horizontal position of the bar; a ordinal channel typically bound to the *x* scale. If not specified, the bar spans the horizontal extent of the frame; otherwise the *x* scale must be a *band* scale.\n\nIf *x* represents quantitative or temporal values, use a rectY mark instead.",
    )
    y: (
        ChannelValueIntervalSpec1
        | ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The vertical position (or length/height) channel, typically bound to the\n*y* scale.\n\nIf neither **y1** nor **y2** nor **interval** is specified, an implicit stackY transform is applied and **y** defaults to the identity function, assuming that *data* = [*y₀*, *y₁*, *y₂*, …]. Otherwise if an **interval** is specified, then **y1** and **y2** are derived from **y**, representing the lower and upper bound of the containing interval, respectively. Otherwise, if only one of **y1** or **y2** is specified, the other defaults to **y**, which defaults to zero.",
    )
    y1: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required primary (starting, often bottom) vertical position channel, typically bound to the *y* scale. Setting this option disables the implicit stackY transform.\n\nIf *y* represents ordinal values, use a cell mark instead.",
    )
    y2: (
        ChannelValueSpec1
        | list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The required secondary (ending, often top) horizontal position channel, typically bound to the *y* scale. Setting this option disables the implicit stackY transform.\n\nIf *y* represents ordinal values, use a cell mark instead.",
    )
    z: (
        list
        | str
        | float_aliased
        | bool
        | SQLExpression
        | AggregateExpression
        | Bin
        | Column
        | DateMonth
        | DateMonthDay
        | DateDay
        | Centroid
        | CentroidX
        | CentroidY
        | GeoJSON
        | Argmax
        | Argmin
        | Avg
        | Count
        | Max
        | Min
        | First
        | Last
        | Median
        | Mode
        | Product
        | Quantile
        | Stddev
        | StddevPop
        | Sum
        | Variance
        | VarPop
        | RowNumber
        | Rank
        | DenseRank
        | PercentRank
        | CumeDist
        | NTile
        | Lag
        | Lead
        | FirstValue
        | LastValue
        | NthValue
        | None
    ) = Field(
        default=None,
        description="The **z** channel defines the series of each value in the stack. Used when the **order** is *sum*, *appearance*, *inside-out*, or an explicit array of\n**z** values.",
    )


class Plot(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    align: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    ariaDescription: str | None = Field(
        default=None,
        description="The [aria-description attribute][1] on the SVG root.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
    )
    ariaLabel: str | None = Field(
        default=None,
        description="The [aria-label attribute][1] on the SVG root.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
    )
    aspectRatio: float_aliased | bool | str | None = Field(
        default=None,
        description="The desired aspect ratio of the *x* and *y* scales, affecting the default height. Given an aspect ratio of *dx* / *dy*, and assuming that the *x* and\n*y* scales represent equivalent units (say, degrees Celsius or meters), computes a default height such that *dx* pixels along *x* represents the same variation as *dy* pixels along *y*. Note: when faceting, set the *fx* and *fy* scales’ **round** option to false for an exact aspect ratio.",
    )
    axis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *top* or\n*bottom* for *x* or *fx*, or *left* or *right* for *y* or *fy*. The default depends on the scale:\n\n- *x* - *bottom*\n- *y* - *left*\n- *fx* - *top* if there is a *bottom* *x* axis, and otherwise *bottom*\n- *fy* - *right* if there is a *left* *y* axis, and otherwise *right*\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*top* and *bottom* for *x* or *fx*, or *left* and *right* for *y* or\n*fy*). If null, the implicit axis is suppressed.\n\nFor position axes only.",
    )
    clip: str | bool | None = Field(
        default=None, description="The default clip for all marks."
    )
    colorBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* and *diverging-log* scales only.",
    )
    colorClamp: bool | str | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    colorConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* and *diverging-symlog* scales only.",
    )
    colorDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.",
    )
    colorExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* and *diverging-pow* scales only.",
    )
    colorInterpolate: Literal["number", "rgb", "hsl", "hcl", "lab"] | str | None = (
        Field(
            default=None,
            description="How to interpolate color range values. For quantitative scales only. This attribute can be used to specify a color space for interpolating colors specified in the **colorRange**.",
        )
    )
    colorLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    colorN: float_aliased | str | None = Field(
        default=None,
        description="For a *quantile* scale, the number of quantiles (creates *n* - 1 thresholds); for a *quantize* scale, the approximate number of thresholds; defaults to 5.",
    )
    colorNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    colorPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    colorPivot: Any | str | None = Field(
        default=None,
        description="For a diverging color scale, the input value (abstract value) that divides the domain into two parts; defaults to 0 for *diverging* scales, dividing the domain into negative and positive parts; defaults to 1 for\n*diverging-log* scales. By default, diverging scales are symmetric around the pivot; see the **symmetric** option.",
    )
    colorRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**. For other ordinal data, it is an array (or iterable) of output values in the same order as the **domain**.",
    )
    colorReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    colorScale: (
        Literal[
            "linear",
            "pow",
            "sqrt",
            "log",
            "symlog",
            "utc",
            "time",
            "point",
            "band",
            "ordinal",
            "sequential",
            "cyclical",
            "diverging",
            "diverging-log",
            "diverging-pow",
            "diverging-sqrt",
            "diverging-symlog",
            "categorical",
            "threshold",
            "quantile",
            "quantize",
            "identity",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The *color* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled.\n\nFor quantitative data (numbers), defaults to *linear*; for temporal data (dates), defaults to *utc*; for ordinal data (strings or booleans), defaults to *point* for position scales, *categorical* for color scales, and otherwise *ordinal*.",
    )
    colorScheme: (
        Literal[
            "Accent",
            "Category10",
            "Dark2",
            "Observable10",
            "Paired",
            "Pastel1",
            "Pastel2",
            "Set1",
            "Set2",
            "Set3",
            "Tableau10",
            "BrBG",
            "PRGn",
            "PiYG",
            "PuOr",
            "RdBu",
            "RdGy",
            "RdYlBu",
            "RdYlGn",
            "Spectral",
            "BuRd",
            "BuYlRd",
            "Blues",
            "Greens",
            "Greys",
            "Oranges",
            "Purples",
            "Reds",
            "Turbo",
            "Viridis",
            "Magma",
            "Inferno",
            "Plasma",
            "Cividis",
            "Cubehelix",
            "Warm",
            "Cool",
            "BuGn",
            "BuPu",
            "GnBu",
            "OrRd",
            "PuBu",
            "PuBuGn",
            "PuRd",
            "RdPu",
            "YlGn",
            "YlGnBu",
            "YlOrBr",
            "YlOrRd",
            "Rainbow",
            "Sinebow",
        ]
        | dict[str, Any]
        | str
        | None
    ) = Field(
        default=None,
        description="If specified, shorthand for setting the **colorRange** or **colorInterpolate** option of a *color* scale.",
    )
    colorSymmetric: bool | str | None = Field(
        default=None,
        description="For a diverging color scale, if true (the default), extend the domain to ensure that the lower part of the domain (below the **pivot**) is commensurate with the upper part of the domain (above the **pivot**).\n\nA symmetric diverging color scale may not use all of its output **range**; this reduces contrast but ensures that deviations both below and above the\n**pivot** are represented proportionally. Otherwise if false, the full output **range** will be used; this increases contrast but values on opposite sides of the **pivot** may not be meaningfully compared.",
    )
    colorTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    colorZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    facetGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Default axis grid for fx and fy scales; typically set to true to enable.",
    )
    facetLabel: str | None = Field(
        default=None,
        description="Default axis label for fx and fy scales; typically set to null to disable.",
    )
    facetMargin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four facet margins: marginTop, marginRight, marginBottom, and marginLeft.",
    )
    facetMarginBottom: float_aliased | str | None = Field(
        default=None,
        description="The right facet margin; the (minimum) distance in pixels between the right edges of the inner and outer plot area.",
    )
    facetMarginLeft: float_aliased | str | None = Field(
        default=None,
        description="The bottom facet margin; the (minimum) distance in pixels between the bottom edges of the inner and outer plot area.",
    )
    facetMarginRight: float_aliased | str | None = Field(
        default=None,
        description="The left facet margin; the (minimum) distance in pixels between the left edges of the inner and outer plot area.",
    )
    facetMarginTop: float_aliased | str | None = Field(
        default=None,
        description="The top facet margin; the (minimum) distance in pixels between the top edges of the inner and outer plot area.",
    )
    fxAlign: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    fxAriaDescription: str | None = Field(
        default=None,
        description="A textual description for the axis in the accessibility tree.",
    )
    fxAriaLabel: str | None = Field(
        default=None,
        description="A short label representing the axis in the accessibility tree.",
    )
    fxAxis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *top* or\n*bottom* for *fx*. Defaults to *top* if there is a *bottom* *x* axis, and otherwise *bottom*.\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*top* and *bottom* for *fx*). If null, the implicit axis is suppressed.",
    )
    fxDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.",
    )
    fxFontVariant: str | None = Field(
        default=None,
        description="The font-variant attribute for axis ticks; defaults to *tabular-nums* for quantitative axes.",
    )
    fxGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    fxInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    fxInsetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    fxInsetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    fxLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    fxLabelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    fxLabelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    fxLine: bool | str | None = Field(
        default=None,
        description="If true, draw a line along the axis; if false (default), do not.",
    )
    fxPadding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    fxPaddingInner: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to separate adjacent bands.",
    )
    fxPaddingOuter: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to inset first and last bands.",
    )
    fxRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and the plot’s dimensions. For ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale.",
    )
    fxReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    fxRound: bool | str | None = Field(
        default=None,
        description="If true, round the output value to the nearest integer (pixel); useful for crisp edges when rendering.\n\nFor position scales only.",
    )
    fxTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    fxTickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **fxTickSize** and\n**fxTickRotate**.",
    )
    fxTickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    fxTickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    fxTickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    fxTicks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    fyAlign: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    fyAriaDescription: str | None = Field(
        default=None,
        description="A textual description for the axis in the accessibility tree.",
    )
    fyAriaLabel: str | None = Field(
        default=None,
        description="A short label representing the axis in the accessibility tree.",
    )
    fyAxis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *left* or\n*right* for *fy*. Defaults to *left* for an *fy* scale.\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*left* and *right* for *fy*). If null, the implicit axis is suppressed.",
    )
    fyDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.",
    )
    fyFontVariant: str | None = Field(
        default=None,
        description="The font-variant attribute for axis ticks; defaults to *tabular-nums* for quantitative axes.",
    )
    fyGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    fyInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    fyInsetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    fyInsetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    fyLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    fyLabelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    fyLabelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    fyLine: bool | str | None = Field(
        default=None,
        description="If true, draw a line along the axis; if false (default), do not.",
    )
    fyPadding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    fyPaddingInner: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to separate adjacent bands.",
    )
    fyPaddingOuter: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to inset first and last bands.",
    )
    fyRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and the plot’s dimensions. For ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale.",
    )
    fyReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    fyRound: bool | str | None = Field(
        default=None,
        description="If true, round the output value to the nearest integer (pixel); useful for crisp edges when rendering.\n\nFor position scales only.",
    )
    fyTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    fyTickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **fyTickSize** and\n**fyTickRotate**.",
    )
    fyTickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    fyTickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    fyTickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    fyTicks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    grid: bool | str | None = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    height: float_aliased | str | None = Field(
        default=None,
        description="The outer height of the plot in pixels, including margins. The default depends on the plot’s scales, and the plot’s width if an aspectRatio is specified. For example, if the *y* scale is linear and there is no *fy* scale, it might be 396.",
    )
    inset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    lengthBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    lengthClamp: Any | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    lengthConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    lengthDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nLinear scales have a default domain of [0, 1]. Log scales have a default domain of [1, 10] and cannot include zero. Radius scales have a default domain from 0 to the median first quartile of associated channels. Length have a default domain from 0 to the median median of associated channels. Opacity scales have a default domain from 0 to the maximum value of associated channels.",
    )
    lengthExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    lengthNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    lengthPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    lengthRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For other ordinal data, such as for a *color* scale, it is an array (or iterable) of output values in the same order as the **domain**.\n\nLength scales have a default range of [0, 12].",
    )
    lengthScale: (
        Literal["linear", "pow", "sqrt", "log", "symlog", "utc", "time", "identity"]
        | str
        | None
    ) = Field(
        default=None,
        description="The *length* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled. The length scale defaults to *linear*, as this scale is intended for quantitative data.",
    )
    lengthZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    margin: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four margins: **marginTop**,\n**marginRight**, **marginBottom**, and **marginLeft**. Otherwise, the default margins depend on the maximum margins of the plot’s marks. While most marks default to zero margins (because they are drawn inside the chart area), Plot’s axis marks have non-zero default margins.",
    )
    marginBottom: float_aliased | str | None = Field(
        default=None,
        description="The bottom margin; the distance in pixels between the bottom edges of the inner and outer plot area. Defaults to the maximum bottom margin of the plot’s marks.",
    )
    marginLeft: float_aliased | str | None = Field(
        default=None,
        description="The left margin; the distance in pixels between the left edges of the inner and outer plot area. Defaults to the maximum left margin of the plot’s marks.",
    )
    marginRight: float_aliased | str | None = Field(
        default=None,
        description="The right margin; the distance in pixels between the right edges of the inner and outer plot area. Defaults to the maximum right margin of the plot’s marks.",
    )
    marginTop: float_aliased | str | None = Field(
        default=None,
        description="The top margin; the distance in pixels between the top edges of the inner and outer plot area. Defaults to the maximum top margin of the plot’s marks.",
    )
    margins: Margins | None = Field(
        default=None,
        description="A shorthand object notation for setting multiple margin values. The object keys are margin names (top, right, etc).",
    )
    name: str | None = Field(
        default=None,
        description="A unique name for the plot. The name is used by standalone legend components to to lookup the plot and access scale mappings.",
    )
    opacityBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    opacityClamp: bool | str | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    opacityConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    opacityDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nOpacity scales have a default domain from 0 to the maximum value of associated channels.",
    )
    opacityExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    opacityLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    opacityNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    opacityPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    opacityRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values).\n\nOpacity scales have a default range of [0, 1].",
    )
    opacityReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    opacityScale: (
        Literal["linear", "pow", "sqrt", "log", "symlog", "utc", "time", "identity"]
        | str
        | None
    ) = Field(
        default=None,
        description="The *opacity* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled. The opacity scale defaults to *linear*; this scales is intended for quantitative data.",
    )
    opacityTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    opacityZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    padding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    plot: list[
        PlotLegend
        | Area
        | AreaX
        | AreaY
        | Arrow
        | AxisX
        | AxisY
        | AxisFx
        | AxisFy
        | GridX
        | GridY
        | GridFx
        | GridFy
        | BarX
        | BarY
        | Cell
        | CellX
        | CellY
        | Contour
        | DelaunayLink
        | DelaunayMesh
        | Hull
        | Voronoi
        | VoronoiMesh
        | DenseLine
        | Density
        | Dot
        | DotX
        | DotY
        | Circle
        | Hexagon
        | ErrorBarX
        | ErrorBarY
        | Frame
        | Geo
        | Graticule
        | Sphere
        | Hexbin
        | Hexgrid
        | Image
        | Line
        | LineX
        | LineY
        | Link
        | Raster
        | Heatmap
        | RasterTile
        | Rect
        | RectX
        | RectY
        | RegressionY
        | RuleX
        | RuleY
        | Text
        | TextX
        | TextY
        | TickX
        | TickY
        | Vector
        | VectorX
        | VectorY
        | Spike
        | WaffleX
        | WaffleY
        | DensityX1
        | DensityX2
        | DensityX3
        | DensityX4
        | DensityY1
        | DensityY2
        | DensityY3
        | DensityY4
        | Highlight
        | IntervalX
        | IntervalY
        | IntervalXY
        | NearestX
        | NearestY
        | Pan
        | PanX
        | PanY
        | PanZoom
        | PanZoomX
        | PanZoomY
        | Region
        | Toggle
        | ToggleX
        | ToggleY
        | ToggleColor
    ] = Field(
        ...,
        description="An array of plot marks, interactors, or legends. Marks are graphical elements that make up plot layers. Unless otherwise configured, interactors will use the nearest previous mark as a basis for which data fields to select.",
    )
    projectionClip: bool | float_aliased | str | None = Field(
        default=None,
        description="The projection’s clipping method; one of:\n\n- *frame* or true (default) - clip to the plot’s frame (including margins but not insets)\n- a number - clip to a circle of the given radius in degrees centered around the origin\n- null or false - do not clip\n\nSome projections (such as [*armadillo*][1] and [*berghaus*][2]) require spherical clipping: in that case set the marks’ **clip** option to\n*sphere*.\n\n[1]: https://observablehq.com/@d3/armadillo [2]: https://observablehq.com/@d3/berghaus-star",
    )
    projectionDomain: dict[str, Any] | str | None = Field(
        default=None,
        description="A GeoJSON object to fit to the plot’s frame (minus insets); defaults to a Sphere for spherical projections (outline of the the whole globe).",
    )
    projectionInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four projection insets. All insets typically default to zero, though not always. A positive inset reduces effective area, while a negative inset increases it.",
    )
    projectionInsetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge of the projection by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    projectionInsetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge of the projection by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    projectionInsetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge of the projection by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    projectionInsetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge of the projection by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    projectionParallels: list[float_aliased | str] | str | None = Field(
        default=None,
        description="The [standard parallels][1]. For conic projections only.\n\n[1]: https://d3js.org/d3-geo/conic#conic_parallels",
    )
    projectionPrecision: float_aliased | str | None = Field(
        default=None,
        description="The projection’s [sampling threshold][1].\n\n[1]: https://d3js.org/d3-geo/projection#projection_precision",
    )
    projectionRotate: list[float_aliased | str] | str | None = Field(
        default=None,
        description="A rotation of the sphere before projection; defaults to [0, 0, 0]. Specified as Euler angles λ (yaw, or reference longitude), φ (pitch, or reference latitude), and optionally γ (roll), in degrees.",
    )
    projectionType: (
        Literal[
            "albers-usa",
            "albers",
            "azimuthal-equal-area",
            "azimuthal-equidistant",
            "conic-conformal",
            "conic-equal-area",
            "conic-equidistant",
            "equal-earth",
            "equirectangular",
            "gnomonic",
            "identity",
            "reflect-y",
            "mercator",
            "orthographic",
            "stereographic",
            "transverse-mercator",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired projection; one of:\n\n- a named built-in projection such as *albers-usa*\n- null, for no projection\n\nNamed projections are scaled and translated to fit the **domain** to the plot’s frame (minus insets).",
    )
    rBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    rClamp: Any | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    rConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    rDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nRadius scales have a default domain from 0 to the median first quartile of associated channels.",
    )
    rExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    rLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.",
    )
    rNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    rPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    rRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For other ordinal data, such as for a *color* scale, it is an array (or iterable) of output values in the same order as the **domain**.\n\nRadius scales have a default range of [0, 3].",
    )
    rScale: (
        Literal["linear", "pow", "sqrt", "log", "symlog", "utc", "time", "identity"]
        | str
        | None
    ) = Field(
        default=None,
        description="The *r* (radius) scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled. The radius scale defaults to *sqrt*; this scale is intended for quantitative data.",
    )
    rZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    style: str | CSSStyles | None = Field(
        default=None,
        description='Custom styles to override Plot’s defaults. Styles may be specified either as a string of inline styles (*e.g.*, `"color: red;"`, in the same fashion as assigning [*element*.style][1]) or an object of properties (*e.g.*, `{color: "red"}`, in the same fashion as assigning [*element*.style properties][2]). Note that unitless numbers ([quirky lengths][3]) such as `{padding: 20}` may not supported by some browsers; you should instead specify a string with units such as `{padding: "20px"}`. By default, the returned plot has a max-width of 100%, and the system-ui font. Plot’s marks and axes default to [currentColor][4], meaning that they will inherit the surrounding content’s color.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style [2]: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration [3]: https://www.w3.org/TR/css-values-4/#deprecated-quirky-length [4]: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword',
    )
    symbolDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. As symbol scales are discrete, the domain is an array (or iterable) of values is the desired order, defaulting to natural ascending order.",
    )
    symbolRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For other ordinal data, such as for a *color* scale, it is an array (or iterable) of output values in the same order as the **domain**.\n\nSymbol scales have a default range of categorical symbols; the choice of symbols depends on whether the associated dot mark is filled or stroked.",
    )
    symbolScale: Literal["ordinal", "identity"] | str | None = Field(
        default=None,
        description="The *symbol* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled. Defaults to an *ordinal* scale type.",
    )
    width: float_aliased | str | None = Field(
        default=None,
        description="The outer width of the plot in pixels, including margins. Defaults to 640. On Observable, this can be set to the built-in [width][1] for full-width responsive plots. Note: the default style has a max-width of 100%; the plot will automatically shrink to fit even when a fixed width is specified.\n\n[1]: https://github.com/observablehq/stdlib/blob/main/README.md#width",
    )
    xAlign: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    xAriaDescription: str | None = Field(
        default=None,
        description="A textual description for the axis in the accessibility tree.",
    )
    xAriaLabel: str | None = Field(
        default=None,
        description="A short label representing the axis in the accessibility tree.",
    )
    xAxis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *top* or\n*bottom* for *x*. Defaults to *bottom* for an *x* scale.\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*top* and *bottom* for *x*). If null, the implicit axis is suppressed.",
    )
    xBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    xClamp: bool | str | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    xConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    xDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nLinear scales have a default domain of [0, 1]. Log scales have a default domain of [1, 10] and cannot include zero. Radius scales have a default domain from 0 to the median first quartile of associated channels. Length have a default domain from 0 to the median median of associated channels. Opacity scales have a default domain from 0 to the maximum value of associated channels.",
    )
    xExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    xFontVariant: str | None = Field(
        default=None,
        description="The font-variant attribute for axis ticks; defaults to *tabular-nums* for quantitative axes.",
    )
    xGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    xInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    xInsetLeft: float_aliased | str | None = Field(
        default=None,
        description="Insets the left edge by the specified number of pixels. A positive value insets towards the right edge (reducing effective area), while a negative value insets away from the right edge (increasing it).",
    )
    xInsetRight: float_aliased | str | None = Field(
        default=None,
        description="Insets the right edge by the specified number of pixels. A positive value insets towards the left edge (reducing effective area), while a negative value insets away from the left edge (increasing it).",
    )
    xLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    xLabelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    xLabelArrow: (
        Literal["auto", "up", "right", "down", "left", "none", True, False] | str | None
    ) = Field(
        default=None,
        description="Whether to apply a directional arrow such as → or ↑ to the x-axis scale label. If *auto* (the default), the presence of the arrow depends on whether the scale is ordinal.",
    )
    xLabelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    xLine: bool | str | None = Field(
        default=None,
        description="If true, draw a line along the axis; if false (default), do not.",
    )
    xNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    xPadding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    xPaddingInner: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to separate adjacent bands.",
    )
    xPaddingOuter: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to inset first and last bands.",
    )
    xPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    xRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale.",
    )
    xReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**.",
    )
    xRound: bool | str | None = Field(
        default=None,
        description="If true, round the output value to the nearest integer (pixel); useful for crisp edges when rendering.\n\nFor position scales only.",
    )
    xScale: (
        Literal[
            "linear",
            "pow",
            "sqrt",
            "log",
            "symlog",
            "utc",
            "time",
            "point",
            "band",
            "threshold",
            "quantile",
            "quantize",
            "identity",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The *x* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled.\n\nFor quantitative data (numbers), defaults to *linear*; for temporal data (dates), defaults to *utc*; for ordinal data (strings or booleans), defaults to *point* for position scales, *categorical* for color scales, and otherwise *ordinal*. However, the radius scale defaults to *sqrt*, and the length and opacity scales default to *linear*; these scales are intended for quantitative data. The plot’s marks may also impose a scale type; for example, the barY mark requires that *x* is a *band* scale.",
    )
    xTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    xTickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **xTickSize** and\n**xTickRotate**.",
    )
    xTickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    xTickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    xTickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    xTicks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    xZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )
    xyDomain: list | Literal["Fixed"] | str | None = Field(
        default=None, description="Set the *x* and *y* scale domains."
    )
    yAlign: float_aliased | str | None = Field(
        default=None,
        description="How to distribute unused space in the **range** for *point* and *band* scales. A number in [0, 1], such as:\n\n- 0 - use the start of the range, putting unused space at the end\n- 0.5 (default) - use the middle, distributing unused space evenly\n- 1 use the end, putting unused space at the start\n\nFor ordinal position scales only.",
    )
    yAriaDescription: str | None = Field(
        default=None,
        description="A textual description for the axis in the accessibility tree.",
    )
    yAriaLabel: str | None = Field(
        default=None,
        description="A short label representing the axis in the accessibility tree.",
    )
    yAxis: str | bool | None = Field(
        default=None,
        description="The side of the frame on which to place the implicit axis: *left* or\n*right* for *y*. Defaults to *left* for a *y* scale.\n\nIf *both*, an implicit axis will be rendered on both sides of the plot (*left* and *right* for *y*). If null, the implicit axis is suppressed.",
    )
    yBase: float_aliased | str | None = Field(
        default=None,
        description="A log scale’s base; defaults to 10. Does not affect the scale’s encoding, but rather the default ticks. For *log* scales only.",
    )
    yClamp: bool | str | None = Field(
        default=None,
        description="If true, values below the domain minimum are treated as the domain minimum, and values above the domain maximum are treated as the domain maximum.\n\nClamping is useful for focusing on a subset of the data while ensuring that extreme values remain visible, but use caution: clamped values may need an annotation to avoid misinterpretation. Clamping typically requires setting an explicit **domain** since if the domain is inferred, no values will be outside the domain.\n\nFor continuous scales only.",
    )
    yConstant: float_aliased | str | None = Field(
        default=None,
        description="A symlog scale’s constant, expressing the magnitude of the linear region around the origin; defaults to 1. For *symlog* scales only.",
    )
    yDomain: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s inputs (abstract values). By default inferred from channel values. For continuous data (numbers and dates), it is typically [*min*, *max*]; it can be [*max*, *min*] to reverse the scale. For ordinal data (strings or booleans), it is an array (or iterable) of values is the desired order, defaulting to natural ascending order.\n\nLinear scales have a default domain of [0, 1]. Log scales have a default domain of [1, 10] and cannot include zero.",
    )
    yExponent: float_aliased | str | None = Field(
        default=None,
        description="A power scale’s exponent (*e.g.*, 0.5 for sqrt); defaults to 1 for a linear scale. For *pow* scales only.",
    )
    yFontVariant: str | None = Field(
        default=None,
        description="The font-variant attribute for axis ticks; defaults to *tabular-nums* for quantitative axes.",
    )
    yGrid: (
        bool
        | str
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | None
    ) = Field(
        default=None,
        description="Whether to show a grid aligned with the scale’s ticks. If true, show a grid with the currentColor stroke; if a string, show a grid with the specified stroke color; if an approximate number of ticks, an interval, or an array of tick values, show corresponding grid lines. See also the grid mark.\n\nFor axes only.",
    )
    yInset: float_aliased | str | None = Field(
        default=None,
        description="Shorthand to set the same default for all four insets: **insetTop**,\n**insetRight**, **insetBottom**, and **insetLeft**. All insets typically default to zero, though not always (say when using bin transform). A positive inset reduces effective area, while a negative inset increases it.",
    )
    yInsetBottom: float_aliased | str | None = Field(
        default=None,
        description="Insets the bottom edge by the specified number of pixels. A positive value insets towards the top edge (reducing effective area), while a negative value insets away from the top edge (increasing it).",
    )
    yInsetTop: float_aliased | str | None = Field(
        default=None,
        description="Insets the top edge by the specified number of pixels. A positive value insets towards the bottom edge (reducing effective area), while a negative value insets away from the bottom edge (increasing it).",
    )
    yLabel: str | None = Field(
        default=None,
        description="A textual label to show on the axis or legend; if null, show no label. By default the scale label is inferred from channel definitions, possibly with an arrow (↑, →, ↓, or ←) to indicate the direction of increasing value.\n\nFor axes and legends only.",
    )
    yLabelAnchor: str | None = Field(
        default=None,
        description="Where to place the axis **label** relative to the plot’s frame. For vertical position scales (*y* and *fy*), may be *top*, *bottom*, or\n*center*; for horizontal position scales (*x* and *fx*), may be *left*,\n*right*, or *center*. Defaults to *center* for ordinal scales (including\n*fx* and *fy*), and otherwise *top* for *y*, and *right* for *x*.",
    )
    yLabelArrow: (
        Literal["auto", "up", "right", "down", "left", "none", True, False] | str | None
    ) = Field(
        default=None,
        description="Whether to apply a directional arrow such as → or ↑ to the x-axis scale label. If *auto* (the default), the presence of the arrow depends on whether the scale is ordinal.",
    )
    yLabelOffset: float_aliased | str | None = Field(
        default=None,
        description="The axis **label** position offset (in pixels); default depends on margins and orientation.",
    )
    yLine: bool | str | None = Field(
        default=None,
        description="If true, draw a line along the axis; if false (default), do not.",
    )
    yNice: (
        bool
        | float_aliased
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="If true, or a tick count or interval, extend the domain to nice round values. Defaults to 1, 2 or 5 times a power of 10 for *linear* scales, and nice time intervals for *utc* and *time* scales. Pass an interval such as\n*minute*, *wednesday* or *month* to specify what constitutes a nice interval.\n\nFor continuous scales only.",
    )
    yPadding: float_aliased | str | None = Field(
        default=None,
        description="For *band* scales, how much of the **range** to reserve to separate adjacent bands; defaults to 0.1 (10%). For *point* scales, the amount of inset for the first and last value as a proportion of the bandwidth; defaults to 0.5 (50%).\n\nFor ordinal position scales only.",
    )
    yPaddingInner: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to separate adjacent bands.",
    )
    yPaddingOuter: float_aliased | str | None = Field(
        default=None,
        description="For a *band* scale, how much of the range to reserve to inset first and last bands.",
    )
    yPercent: bool | str | None = Field(
        default=None,
        description="If true, shorthand for a transform suitable for percentages, mapping proportions in [0, 1] to [0, 100].",
    )
    yRange: list | Literal["Fixed"] | str | None = Field(
        default=None,
        description="The extent of the scale’s outputs (visual values). By default inferred from the scale’s **type** and **domain**, and for position scales, the plot’s dimensions. For continuous data (numbers and dates), and for ordinal position scales (*point* and *band*), it is typically [*min*,\n*max*]; it can be [*max*, *min*] to reverse the scale.",
    )
    yReverse: bool | str | None = Field(
        default=None,
        description="Whether to reverse the scale’s encoding; equivalent to reversing either the\n**domain** or **range**. Note that by default, when the *y* scale is continuous, the *max* value points to the top of the screen, whereas ordinal values are ranked from top to bottom.",
    )
    yRound: bool | str | None = Field(
        default=None,
        description="If true, round the output value to the nearest integer (pixel); useful for crisp edges when rendering.\n\nFor position scales only.",
    )
    yScale: (
        Literal[
            "linear",
            "pow",
            "sqrt",
            "log",
            "symlog",
            "utc",
            "time",
            "point",
            "band",
            "threshold",
            "quantile",
            "quantize",
            "identity",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The *y* scale type, affecting how the scale encodes abstract data, say by applying a mathematical transformation. If null, the scale is disabled.\n\nFor quantitative data (numbers), defaults to *linear*; for temporal data (dates), defaults to *utc*; for ordinal data (strings or booleans), defaults to *point* for position scales,  The plot’s marks may also impose a scale type; for example, the barY mark requires that *x* is a *band* scale.",
    )
    yTickFormat: str | None = Field(
        default=None,
        description="How to format inputs (abstract values) for axis tick labels; one of:\n\n- a [d3-format][1] string for numeric scales\n- a [d3-time-format][2] string for temporal scales\n\n[1]: https://d3js.org/d3-time [2]: https://d3js.org/d3-time-format",
    )
    yTickPadding: float_aliased | str | None = Field(
        default=None,
        description="The distance between an axis tick mark and its associated text label (in pixels); often defaults to 3, but may be affected by **yTickSize** and\n**yTickRotate**.",
    )
    yTickRotate: float_aliased | str | None = Field(
        default=None,
        description="The rotation angle of axis tick labels in degrees clocksize; defaults to 0.",
    )
    yTickSize: float_aliased | str | None = Field(
        default=None,
        description="The length of axis tick marks in pixels; negative values extend in the opposite direction. Defaults to 6 for *x* and *y* axes and *color* and\n*opacity* *ramp* legends, and 0 for *fx* and *fy* axes.",
    )
    yTickSpacing: float_aliased | str | None = Field(
        default=None,
        description="The desired approximate spacing between adjacent axis ticks, affecting the default **ticks**; defaults to 80 pixels for *x* and *fx*, and 35 pixels for *y* and *fy*.",
    )
    yTicks: (
        float_aliased
        | list
        | str
        | Literal[
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "half",
            "year",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
        ]
        | str
        | None
    ) = Field(
        default=None,
        description="The desired approximate number of axis ticks, or an explicit array of tick values, or an interval such as *day* or *month*.",
    )
    yZero: bool | str | None = Field(
        default=None,
        description="Whether the **domain** must include zero. If the domain minimum is positive, it will be set to zero; otherwise if the domain maximum is negative, it will be set to zero.\n\nFor quantitative scales only.",
    )


class HConcat(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    hconcat: list[
        HConcat
        | VConcat
        | HSpace
        | VSpace
        | Menu
        | Search
        | Slider
        | Table
        | Plot
        | Legend
        | Area
        | AreaX
        | AreaY
        | Arrow
        | AxisX
        | AxisY
        | AxisFx
        | AxisFy
        | GridX
        | GridY
        | GridFx
        | GridFy
        | BarX
        | BarY
        | Cell
        | CellX
        | CellY
        | Contour
        | DelaunayLink
        | DelaunayMesh
        | Hull
        | Voronoi
        | VoronoiMesh
        | DenseLine
        | Density
        | Dot
        | DotX
        | DotY
        | Circle
        | Hexagon
        | ErrorBarX
        | ErrorBarY
        | Frame
        | Geo
        | Graticule
        | Sphere
        | Hexbin
        | Hexgrid
        | Image
        | Line
        | LineX
        | LineY
        | Link
        | Raster
        | Heatmap
        | RasterTile
        | Rect
        | RectX
        | RectY
        | RegressionY
        | RuleX
        | RuleY
        | Text
        | TextX
        | TextY
        | TickX
        | TickY
        | Vector
        | VectorX
        | VectorY
        | Spike
        | WaffleX
        | WaffleY
        | DensityX1
        | DensityX2
        | DensityX3
        | DensityX4
        | DensityY1
        | DensityY2
        | DensityY3
        | DensityY4
    ] = Field(..., description="Horizontally concatenate components in a row layout.")


class VConcat(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    vconcat: list[
        HConcat
        | VConcat
        | HSpace
        | VSpace
        | Menu
        | Search
        | Slider
        | Table
        | Plot
        | Legend
        | Area
        | AreaX
        | AreaY
        | Arrow
        | AxisX
        | AxisY
        | AxisFx
        | AxisFy
        | GridX
        | GridY
        | GridFx
        | GridFy
        | BarX
        | BarY
        | Cell
        | CellX
        | CellY
        | Contour
        | DelaunayLink
        | DelaunayMesh
        | Hull
        | Voronoi
        | VoronoiMesh
        | DenseLine
        | Density
        | Dot
        | DotX
        | DotY
        | Circle
        | Hexagon
        | ErrorBarX
        | ErrorBarY
        | Frame
        | Geo
        | Graticule
        | Sphere
        | Hexbin
        | Hexgrid
        | Image
        | Line
        | LineX
        | LineY
        | Link
        | Raster
        | Heatmap
        | RasterTile
        | Rect
        | RectX
        | RectY
        | RegressionY
        | RuleX
        | RuleY
        | Text
        | TextX
        | TextY
        | TickX
        | TickY
        | Vector
        | VectorX
        | VectorY
        | Spike
        | WaffleX
        | WaffleY
        | DensityX1
        | DensityX2
        | DensityX3
        | DensityX4
        | DensityY1
        | DensityY2
        | DensityY3
        | DensityY4
    ] = Field(..., description="Vertically concatenate components in a column layout.")
