---
title: "Olympic Athletes"
format: dashboard
execute: 
  echo: false
  daemon: false
---

An interactive dashboard of athlete statistics. The menus and searchbox filter the display and are automatically populated by backing data columns.

```{python}
from inspect_viz import Data, Selection
from inspect_viz.input import search, select, table
from inspect_viz.interactor import Brush, interval_xy
from inspect_viz.mark import dot, regression_y
from inspect_viz.plot import plot

athletes = Data("athletes.parquet")

category = Selection("intersect")
query = Selection("intersect", include=category)
hover = Selection("intersect", empty=True)
```

## Row {.toolbar}

```{python}
select(athletes, label="Sport", column="sport", selection=category)
select(athletes, label="Sex", column="sex", selection=category)
search(
    athletes,
    label="Name",
    column="name",
    filter_by=category,
    selection=query,
    type="contains",
)
```

## Row

```{python}
plot(
    [
        dot(
            athletes,
            filter_by=query,
            x="weight",
            y="height",
            fill="sex",
            r=2,
            opacity=0.1,
        ),
        regression_y(athletes, filter_by=query, x="weight", y="height", stroke="sex"),
        interval_xy(selection=query, brush=Brush(fill_opacity=0, stroke="black")),
        dot(
            athletes,
            filter_by=hover,
            x="weight",
            y="height",
            fill="sex",
            stroke="currentColor",
            stroke_width=1,
            r=3
        )
    ],
    xy_domain="fixed",
    r_domain="fixed"
)
```

## Row

```{python}
table(
    athletes, 
    filter_by=query, 
    selection=hover, 
    columns=["name", "nationality", "sex", "height", "weight", "sport"],
    width={"name": 180, "nationality": 100, "sex": 50, "height": 100, "weight": 100, "sport": 100},
    max_width=670
)
```
